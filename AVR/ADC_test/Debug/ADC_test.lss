
ADC_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000260c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  0000260c  000026a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000f  0080006c  0080006c  000026ac  2**0
                  ALLOC
  3 .stab         00001818  00000000  00000000  000026ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d84  00000000  00000000  00003ec4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00004c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00004d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00004ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00006b41  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00007a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  000087dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000893c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00008bc9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009397  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e0       	ldi	r30, 0x0C	; 12
      68:	f6 e2       	ldi	r31, 0x26	; 38
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 36       	cpi	r26, 0x6C	; 108
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	ac e6       	ldi	r26, 0x6C	; 108
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ab 37       	cpi	r26, 0x7B	; 123
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <main>
      8a:	0c 94 04 13 	jmp	0x2608	; 0x2608 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 2c 10 	jmp	0x2058	; 0x2058 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a3 e6       	ldi	r26, 0x63	; 99
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 48 10 	jmp	0x2090	; 0x2090 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 38 10 	jmp	0x2070	; 0x2070 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 54 10 	jmp	0x20a8	; 0x20a8 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 38 10 	jmp	0x2070	; 0x2070 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 54 10 	jmp	0x20a8	; 0x20a8 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 2c 10 	jmp	0x2058	; 0x2058 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	83 e6       	ldi	r24, 0x63	; 99
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 48 10 	jmp	0x2090	; 0x2090 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 38 10 	jmp	0x2070	; 0x2070 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 54 10 	jmp	0x20a8	; 0x20a8 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 38 10 	jmp	0x2070	; 0x2070 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 54 10 	jmp	0x20a8	; 0x20a8 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 38 10 	jmp	0x2070	; 0x2070 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 54 10 	jmp	0x20a8	; 0x20a8 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 58 10 	jmp	0x20b0	; 0x20b0 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <M_ADC_Vid_Init>:
/*
*public functions defintions
*/

void M_ADC_Vid_Init(u8 Copy_u8_prescalar,u8 Copy_u8_adjustfication)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	00 d0       	rcall	.+0      	; 0xb4c <M_ADC_Vid_Init+0x6>
     b4c:	cd b7       	in	r28, 0x3d	; 61
     b4e:	de b7       	in	r29, 0x3e	; 62
     b50:	89 83       	std	Y+1, r24	; 0x01
     b52:	6a 83       	std	Y+2, r22	; 0x02
	/***** SET ENABLE *********/
	SET_BIT(ADCSRA,ADEN);
     b54:	a6 e2       	ldi	r26, 0x26	; 38
     b56:	b0 e0       	ldi	r27, 0x00	; 0
     b58:	e6 e2       	ldi	r30, 0x26	; 38
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	80 81       	ld	r24, Z
     b5e:	80 68       	ori	r24, 0x80	; 128
     b60:	8c 93       	st	X, r24


	/*********SET ADjustification******/
	if(Copy_u8_adjustfication == Right_Adjusted)
     b62:	8a 81       	ldd	r24, Y+2	; 0x02
     b64:	88 23       	and	r24, r24
     b66:	41 f4       	brne	.+16     	; 0xb78 <M_ADC_Vid_Init+0x32>
	{
		CLR_BIT(ADMUX,ADLAR);
     b68:	a7 e2       	ldi	r26, 0x27	; 39
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	e7 e2       	ldi	r30, 0x27	; 39
     b6e:	f0 e0       	ldi	r31, 0x00	; 0
     b70:	80 81       	ld	r24, Z
     b72:	8f 7d       	andi	r24, 0xDF	; 223
     b74:	8c 93       	st	X, r24
     b76:	0a c0       	rjmp	.+20     	; 0xb8c <M_ADC_Vid_Init+0x46>
	}else if(Copy_u8_adjustfication == Left_Adjusted)
     b78:	8a 81       	ldd	r24, Y+2	; 0x02
     b7a:	81 30       	cpi	r24, 0x01	; 1
     b7c:	39 f4       	brne	.+14     	; 0xb8c <M_ADC_Vid_Init+0x46>
	{
		SET_BIT(ADMUX,ADLAR);
     b7e:	a7 e2       	ldi	r26, 0x27	; 39
     b80:	b0 e0       	ldi	r27, 0x00	; 0
     b82:	e7 e2       	ldi	r30, 0x27	; 39
     b84:	f0 e0       	ldi	r31, 0x00	; 0
     b86:	80 81       	ld	r24, Z
     b88:	80 62       	ori	r24, 0x20	; 32
     b8a:	8c 93       	st	X, r24
	}


	/********set prescalar AT 128********/
	if(Copy_u8_prescalar == Prescalar_128)
     b8c:	89 81       	ldd	r24, Y+1	; 0x01
     b8e:	88 23       	and	r24, r24
     b90:	b1 f4       	brne	.+44     	; 0xbbe <M_ADC_Vid_Init+0x78>
	{
		SET_BIT(ADCSRA,ADPS2);
     b92:	a6 e2       	ldi	r26, 0x26	; 38
     b94:	b0 e0       	ldi	r27, 0x00	; 0
     b96:	e6 e2       	ldi	r30, 0x26	; 38
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	80 81       	ld	r24, Z
     b9c:	84 60       	ori	r24, 0x04	; 4
     b9e:	8c 93       	st	X, r24
		SET_BIT(ADCSRA,ADPS1);
     ba0:	a6 e2       	ldi	r26, 0x26	; 38
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	e6 e2       	ldi	r30, 0x26	; 38
     ba6:	f0 e0       	ldi	r31, 0x00	; 0
     ba8:	80 81       	ld	r24, Z
     baa:	82 60       	ori	r24, 0x02	; 2
     bac:	8c 93       	st	X, r24
		SET_BIT(ADCSRA,ADPS0);
     bae:	a6 e2       	ldi	r26, 0x26	; 38
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	e6 e2       	ldi	r30, 0x26	; 38
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	80 81       	ld	r24, Z
     bb8:	81 60       	ori	r24, 0x01	; 1
     bba:	8c 93       	st	X, r24
     bbc:	ab c0       	rjmp	.+342    	; 0xd14 <M_ADC_Vid_Init+0x1ce>
	}else if(Copy_u8_prescalar == Prescalar_64)
     bbe:	89 81       	ldd	r24, Y+1	; 0x01
     bc0:	81 30       	cpi	r24, 0x01	; 1
     bc2:	b1 f4       	brne	.+44     	; 0xbf0 <M_ADC_Vid_Init+0xaa>
	{
		SET_BIT(ADCSRA,ADPS2);
     bc4:	a6 e2       	ldi	r26, 0x26	; 38
     bc6:	b0 e0       	ldi	r27, 0x00	; 0
     bc8:	e6 e2       	ldi	r30, 0x26	; 38
     bca:	f0 e0       	ldi	r31, 0x00	; 0
     bcc:	80 81       	ld	r24, Z
     bce:	84 60       	ori	r24, 0x04	; 4
     bd0:	8c 93       	st	X, r24
		SET_BIT(ADCSRA,ADPS1);
     bd2:	a6 e2       	ldi	r26, 0x26	; 38
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	e6 e2       	ldi	r30, 0x26	; 38
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	80 81       	ld	r24, Z
     bdc:	82 60       	ori	r24, 0x02	; 2
     bde:	8c 93       	st	X, r24
		CLR_BIT(ADCSRA,ADPS0);
     be0:	a6 e2       	ldi	r26, 0x26	; 38
     be2:	b0 e0       	ldi	r27, 0x00	; 0
     be4:	e6 e2       	ldi	r30, 0x26	; 38
     be6:	f0 e0       	ldi	r31, 0x00	; 0
     be8:	80 81       	ld	r24, Z
     bea:	8e 7f       	andi	r24, 0xFE	; 254
     bec:	8c 93       	st	X, r24
     bee:	92 c0       	rjmp	.+292    	; 0xd14 <M_ADC_Vid_Init+0x1ce>
	}else if(Copy_u8_prescalar == Prescalar_32)
     bf0:	89 81       	ldd	r24, Y+1	; 0x01
     bf2:	82 30       	cpi	r24, 0x02	; 2
     bf4:	b1 f4       	brne	.+44     	; 0xc22 <M_ADC_Vid_Init+0xdc>
	{
		SET_BIT(ADCSRA,ADPS2);
     bf6:	a6 e2       	ldi	r26, 0x26	; 38
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	e6 e2       	ldi	r30, 0x26	; 38
     bfc:	f0 e0       	ldi	r31, 0x00	; 0
     bfe:	80 81       	ld	r24, Z
     c00:	84 60       	ori	r24, 0x04	; 4
     c02:	8c 93       	st	X, r24
		CLR_BIT(ADCSRA,ADPS1);
     c04:	a6 e2       	ldi	r26, 0x26	; 38
     c06:	b0 e0       	ldi	r27, 0x00	; 0
     c08:	e6 e2       	ldi	r30, 0x26	; 38
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	80 81       	ld	r24, Z
     c0e:	8d 7f       	andi	r24, 0xFD	; 253
     c10:	8c 93       	st	X, r24
		SET_BIT(ADCSRA,ADPS0);
     c12:	a6 e2       	ldi	r26, 0x26	; 38
     c14:	b0 e0       	ldi	r27, 0x00	; 0
     c16:	e6 e2       	ldi	r30, 0x26	; 38
     c18:	f0 e0       	ldi	r31, 0x00	; 0
     c1a:	80 81       	ld	r24, Z
     c1c:	81 60       	ori	r24, 0x01	; 1
     c1e:	8c 93       	st	X, r24
     c20:	79 c0       	rjmp	.+242    	; 0xd14 <M_ADC_Vid_Init+0x1ce>
	}else if(Copy_u8_prescalar == Prescalar_16)
     c22:	89 81       	ldd	r24, Y+1	; 0x01
     c24:	83 30       	cpi	r24, 0x03	; 3
     c26:	b1 f4       	brne	.+44     	; 0xc54 <M_ADC_Vid_Init+0x10e>
	{
		SET_BIT(ADCSRA,ADPS2);
     c28:	a6 e2       	ldi	r26, 0x26	; 38
     c2a:	b0 e0       	ldi	r27, 0x00	; 0
     c2c:	e6 e2       	ldi	r30, 0x26	; 38
     c2e:	f0 e0       	ldi	r31, 0x00	; 0
     c30:	80 81       	ld	r24, Z
     c32:	84 60       	ori	r24, 0x04	; 4
     c34:	8c 93       	st	X, r24
		CLR_BIT(ADCSRA,ADPS1);
     c36:	a6 e2       	ldi	r26, 0x26	; 38
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	e6 e2       	ldi	r30, 0x26	; 38
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	80 81       	ld	r24, Z
     c40:	8d 7f       	andi	r24, 0xFD	; 253
     c42:	8c 93       	st	X, r24
		CLR_BIT(ADCSRA,ADPS0);
     c44:	a6 e2       	ldi	r26, 0x26	; 38
     c46:	b0 e0       	ldi	r27, 0x00	; 0
     c48:	e6 e2       	ldi	r30, 0x26	; 38
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	80 81       	ld	r24, Z
     c4e:	8e 7f       	andi	r24, 0xFE	; 254
     c50:	8c 93       	st	X, r24
     c52:	60 c0       	rjmp	.+192    	; 0xd14 <M_ADC_Vid_Init+0x1ce>
	}else if(Copy_u8_prescalar == Prescalar_8)
     c54:	89 81       	ldd	r24, Y+1	; 0x01
     c56:	84 30       	cpi	r24, 0x04	; 4
     c58:	b1 f4       	brne	.+44     	; 0xc86 <M_ADC_Vid_Init+0x140>
	{
		CLR_BIT(ADCSRA,ADPS2);
     c5a:	a6 e2       	ldi	r26, 0x26	; 38
     c5c:	b0 e0       	ldi	r27, 0x00	; 0
     c5e:	e6 e2       	ldi	r30, 0x26	; 38
     c60:	f0 e0       	ldi	r31, 0x00	; 0
     c62:	80 81       	ld	r24, Z
     c64:	8b 7f       	andi	r24, 0xFB	; 251
     c66:	8c 93       	st	X, r24
		SET_BIT(ADCSRA,ADPS1);
     c68:	a6 e2       	ldi	r26, 0x26	; 38
     c6a:	b0 e0       	ldi	r27, 0x00	; 0
     c6c:	e6 e2       	ldi	r30, 0x26	; 38
     c6e:	f0 e0       	ldi	r31, 0x00	; 0
     c70:	80 81       	ld	r24, Z
     c72:	82 60       	ori	r24, 0x02	; 2
     c74:	8c 93       	st	X, r24
		SET_BIT(ADCSRA,ADPS0);
     c76:	a6 e2       	ldi	r26, 0x26	; 38
     c78:	b0 e0       	ldi	r27, 0x00	; 0
     c7a:	e6 e2       	ldi	r30, 0x26	; 38
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	80 81       	ld	r24, Z
     c80:	81 60       	ori	r24, 0x01	; 1
     c82:	8c 93       	st	X, r24
     c84:	47 c0       	rjmp	.+142    	; 0xd14 <M_ADC_Vid_Init+0x1ce>
	}else if(Copy_u8_prescalar == Prescalar_4)
     c86:	89 81       	ldd	r24, Y+1	; 0x01
     c88:	85 30       	cpi	r24, 0x05	; 5
     c8a:	b1 f4       	brne	.+44     	; 0xcb8 <M_ADC_Vid_Init+0x172>
	{
		CLR_BIT(ADCSRA,ADPS2);
     c8c:	a6 e2       	ldi	r26, 0x26	; 38
     c8e:	b0 e0       	ldi	r27, 0x00	; 0
     c90:	e6 e2       	ldi	r30, 0x26	; 38
     c92:	f0 e0       	ldi	r31, 0x00	; 0
     c94:	80 81       	ld	r24, Z
     c96:	8b 7f       	andi	r24, 0xFB	; 251
     c98:	8c 93       	st	X, r24
		SET_BIT(ADCSRA,ADPS1);
     c9a:	a6 e2       	ldi	r26, 0x26	; 38
     c9c:	b0 e0       	ldi	r27, 0x00	; 0
     c9e:	e6 e2       	ldi	r30, 0x26	; 38
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	80 81       	ld	r24, Z
     ca4:	82 60       	ori	r24, 0x02	; 2
     ca6:	8c 93       	st	X, r24
		CLR_BIT(ADCSRA,ADPS0);
     ca8:	a6 e2       	ldi	r26, 0x26	; 38
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	e6 e2       	ldi	r30, 0x26	; 38
     cae:	f0 e0       	ldi	r31, 0x00	; 0
     cb0:	80 81       	ld	r24, Z
     cb2:	8e 7f       	andi	r24, 0xFE	; 254
     cb4:	8c 93       	st	X, r24
     cb6:	2e c0       	rjmp	.+92     	; 0xd14 <M_ADC_Vid_Init+0x1ce>
	}else if(Copy_u8_prescalar == Prescalar_2)
     cb8:	89 81       	ldd	r24, Y+1	; 0x01
     cba:	86 30       	cpi	r24, 0x06	; 6
     cbc:	b1 f4       	brne	.+44     	; 0xcea <M_ADC_Vid_Init+0x1a4>
	{
		CLR_BIT(ADCSRA,ADPS2);
     cbe:	a6 e2       	ldi	r26, 0x26	; 38
     cc0:	b0 e0       	ldi	r27, 0x00	; 0
     cc2:	e6 e2       	ldi	r30, 0x26	; 38
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	8b 7f       	andi	r24, 0xFB	; 251
     cca:	8c 93       	st	X, r24
		CLR_BIT(ADCSRA,ADPS1);
     ccc:	a6 e2       	ldi	r26, 0x26	; 38
     cce:	b0 e0       	ldi	r27, 0x00	; 0
     cd0:	e6 e2       	ldi	r30, 0x26	; 38
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	80 81       	ld	r24, Z
     cd6:	8d 7f       	andi	r24, 0xFD	; 253
     cd8:	8c 93       	st	X, r24
		SET_BIT(ADCSRA,ADPS0);
     cda:	a6 e2       	ldi	r26, 0x26	; 38
     cdc:	b0 e0       	ldi	r27, 0x00	; 0
     cde:	e6 e2       	ldi	r30, 0x26	; 38
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	80 81       	ld	r24, Z
     ce4:	81 60       	ori	r24, 0x01	; 1
     ce6:	8c 93       	st	X, r24
     ce8:	15 c0       	rjmp	.+42     	; 0xd14 <M_ADC_Vid_Init+0x1ce>
	}else
	{
		CLR_BIT(ADCSRA,ADPS2);
     cea:	a6 e2       	ldi	r26, 0x26	; 38
     cec:	b0 e0       	ldi	r27, 0x00	; 0
     cee:	e6 e2       	ldi	r30, 0x26	; 38
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	80 81       	ld	r24, Z
     cf4:	8b 7f       	andi	r24, 0xFB	; 251
     cf6:	8c 93       	st	X, r24
		CLR_BIT(ADCSRA,ADPS1);
     cf8:	a6 e2       	ldi	r26, 0x26	; 38
     cfa:	b0 e0       	ldi	r27, 0x00	; 0
     cfc:	e6 e2       	ldi	r30, 0x26	; 38
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	80 81       	ld	r24, Z
     d02:	8d 7f       	andi	r24, 0xFD	; 253
     d04:	8c 93       	st	X, r24
		CLR_BIT(ADCSRA,ADPS0);
     d06:	a6 e2       	ldi	r26, 0x26	; 38
     d08:	b0 e0       	ldi	r27, 0x00	; 0
     d0a:	e6 e2       	ldi	r30, 0x26	; 38
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	80 81       	ld	r24, Z
     d10:	8e 7f       	andi	r24, 0xFE	; 254
     d12:	8c 93       	st	X, r24
	}

	/*set refence value */
	SET_BIT(ADMUX,REFS0);
     d14:	a7 e2       	ldi	r26, 0x27	; 39
     d16:	b0 e0       	ldi	r27, 0x00	; 0
     d18:	e7 e2       	ldi	r30, 0x27	; 39
     d1a:	f0 e0       	ldi	r31, 0x00	; 0
     d1c:	80 81       	ld	r24, Z
     d1e:	80 64       	ori	r24, 0x40	; 64
     d20:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,REFS1);
     d22:	a7 e2       	ldi	r26, 0x27	; 39
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	e7 e2       	ldi	r30, 0x27	; 39
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	8f 77       	andi	r24, 0x7F	; 127
     d2e:	8c 93       	st	X, r24

}
     d30:	0f 90       	pop	r0
     d32:	0f 90       	pop	r0
     d34:	cf 91       	pop	r28
     d36:	df 91       	pop	r29
     d38:	08 95       	ret

00000d3a <M_ADC_U16_ReadDigital>:
u16 M_ADC_U16_ReadDigital(u8 Copy_u8_Channel)
{
     d3a:	df 93       	push	r29
     d3c:	cf 93       	push	r28
     d3e:	00 d0       	rcall	.+0      	; 0xd40 <M_ADC_U16_ReadDigital+0x6>
     d40:	0f 92       	push	r0
     d42:	cd b7       	in	r28, 0x3d	; 61
     d44:	de b7       	in	r29, 0x3e	; 62
     d46:	8b 83       	std	Y+3, r24	; 0x03
	u16 Local_u16_Read;

	/*select channel*/
	ADMUX=(ADMUX&0b11100000)|(Copy_u8_Channel);
     d48:	a7 e2       	ldi	r26, 0x27	; 39
     d4a:	b0 e0       	ldi	r27, 0x00	; 0
     d4c:	e7 e2       	ldi	r30, 0x27	; 39
     d4e:	f0 e0       	ldi	r31, 0x00	; 0
     d50:	80 81       	ld	r24, Z
     d52:	98 2f       	mov	r25, r24
     d54:	90 7e       	andi	r25, 0xE0	; 224
     d56:	8b 81       	ldd	r24, Y+3	; 0x03
     d58:	89 2b       	or	r24, r25
     d5a:	8c 93       	st	X, r24

	/*start conversion*/
	SET_BIT(ADCSRA,ADSC);
     d5c:	a6 e2       	ldi	r26, 0x26	; 38
     d5e:	b0 e0       	ldi	r27, 0x00	; 0
     d60:	e6 e2       	ldi	r30, 0x26	; 38
     d62:	f0 e0       	ldi	r31, 0x00	; 0
     d64:	80 81       	ld	r24, Z
     d66:	80 64       	ori	r24, 0x40	; 64
     d68:	8c 93       	st	X, r24

	/*busy_wait pooling*/
	while(GIT_BIT(ADCSRA,ADIF)!=1);
     d6a:	e6 e2       	ldi	r30, 0x26	; 38
     d6c:	f0 e0       	ldi	r31, 0x00	; 0
     d6e:	80 81       	ld	r24, Z
     d70:	82 95       	swap	r24
     d72:	8f 70       	andi	r24, 0x0F	; 15
     d74:	88 2f       	mov	r24, r24
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	81 70       	andi	r24, 0x01	; 1
     d7a:	90 70       	andi	r25, 0x00	; 0
     d7c:	00 97       	sbiw	r24, 0x00	; 0
     d7e:	a9 f3       	breq	.-22     	; 0xd6a <M_ADC_U16_ReadDigital+0x30>

	/*CLEAR BIT*/
	SET_BIT(ADCSRA,ADIF);
     d80:	a6 e2       	ldi	r26, 0x26	; 38
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	e6 e2       	ldi	r30, 0x26	; 38
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	80 81       	ld	r24, Z
     d8a:	80 61       	ori	r24, 0x10	; 16
     d8c:	8c 93       	st	X, r24

	Local_u16_Read=ADC_DATA;
     d8e:	e4 e2       	ldi	r30, 0x24	; 36
     d90:	f0 e0       	ldi	r31, 0x00	; 0
     d92:	80 81       	ld	r24, Z
     d94:	91 81       	ldd	r25, Z+1	; 0x01
     d96:	9a 83       	std	Y+2, r25	; 0x02
     d98:	89 83       	std	Y+1, r24	; 0x01
	return Local_u16_Read;
     d9a:	89 81       	ldd	r24, Y+1	; 0x01
     d9c:	9a 81       	ldd	r25, Y+2	; 0x02
}
     d9e:	0f 90       	pop	r0
     da0:	0f 90       	pop	r0
     da2:	0f 90       	pop	r0
     da4:	cf 91       	pop	r28
     da6:	df 91       	pop	r29
     da8:	08 95       	ret

00000daa <M_DIO_Vid_WrtPinDir>:
/*
*public functions defintions 
*/

void M_DIO_Vid_WrtPinDir(u8 copy_u8_port,u8 copy_u8_pin,u8 copy_u8_direcrion)
{
     daa:	df 93       	push	r29
     dac:	cf 93       	push	r28
     dae:	00 d0       	rcall	.+0      	; 0xdb0 <M_DIO_Vid_WrtPinDir+0x6>
     db0:	00 d0       	rcall	.+0      	; 0xdb2 <M_DIO_Vid_WrtPinDir+0x8>
     db2:	0f 92       	push	r0
     db4:	cd b7       	in	r28, 0x3d	; 61
     db6:	de b7       	in	r29, 0x3e	; 62
     db8:	89 83       	std	Y+1, r24	; 0x01
     dba:	6a 83       	std	Y+2, r22	; 0x02
     dbc:	4b 83       	std	Y+3, r20	; 0x03
	switch(copy_u8_port)
     dbe:	89 81       	ldd	r24, Y+1	; 0x01
     dc0:	28 2f       	mov	r18, r24
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	3d 83       	std	Y+5, r19	; 0x05
     dc6:	2c 83       	std	Y+4, r18	; 0x04
     dc8:	6c 81       	ldd	r22, Y+4	; 0x04
     dca:	7d 81       	ldd	r23, Y+5	; 0x05
     dcc:	61 30       	cpi	r22, 0x01	; 1
     dce:	71 05       	cpc	r23, r1
     dd0:	d1 f1       	breq	.+116    	; 0xe46 <M_DIO_Vid_WrtPinDir+0x9c>
     dd2:	8c 81       	ldd	r24, Y+4	; 0x04
     dd4:	9d 81       	ldd	r25, Y+5	; 0x05
     dd6:	82 30       	cpi	r24, 0x02	; 2
     dd8:	91 05       	cpc	r25, r1
     dda:	34 f4       	brge	.+12     	; 0xde8 <M_DIO_Vid_WrtPinDir+0x3e>
     ddc:	2c 81       	ldd	r18, Y+4	; 0x04
     dde:	3d 81       	ldd	r19, Y+5	; 0x05
     de0:	21 15       	cp	r18, r1
     de2:	31 05       	cpc	r19, r1
     de4:	71 f0       	breq	.+28     	; 0xe02 <M_DIO_Vid_WrtPinDir+0x58>
     de6:	94 c0       	rjmp	.+296    	; 0xf10 <M_DIO_Vid_WrtPinDir+0x166>
     de8:	6c 81       	ldd	r22, Y+4	; 0x04
     dea:	7d 81       	ldd	r23, Y+5	; 0x05
     dec:	62 30       	cpi	r22, 0x02	; 2
     dee:	71 05       	cpc	r23, r1
     df0:	09 f4       	brne	.+2      	; 0xdf4 <M_DIO_Vid_WrtPinDir+0x4a>
     df2:	4b c0       	rjmp	.+150    	; 0xe8a <M_DIO_Vid_WrtPinDir+0xe0>
     df4:	8c 81       	ldd	r24, Y+4	; 0x04
     df6:	9d 81       	ldd	r25, Y+5	; 0x05
     df8:	83 30       	cpi	r24, 0x03	; 3
     dfa:	91 05       	cpc	r25, r1
     dfc:	09 f4       	brne	.+2      	; 0xe00 <M_DIO_Vid_WrtPinDir+0x56>
     dfe:	67 c0       	rjmp	.+206    	; 0xece <M_DIO_Vid_WrtPinDir+0x124>
     e00:	87 c0       	rjmp	.+270    	; 0xf10 <M_DIO_Vid_WrtPinDir+0x166>
	{
		case M_DIO_PORTA: WRT_BIT(DDRA,copy_u8_pin,copy_u8_direcrion); break;
     e02:	aa e3       	ldi	r26, 0x3A	; 58
     e04:	b0 e0       	ldi	r27, 0x00	; 0
     e06:	ea e3       	ldi	r30, 0x3A	; 58
     e08:	f0 e0       	ldi	r31, 0x00	; 0
     e0a:	80 81       	ld	r24, Z
     e0c:	48 2f       	mov	r20, r24
     e0e:	8a 81       	ldd	r24, Y+2	; 0x02
     e10:	28 2f       	mov	r18, r24
     e12:	30 e0       	ldi	r19, 0x00	; 0
     e14:	81 e0       	ldi	r24, 0x01	; 1
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <M_DIO_Vid_WrtPinDir+0x74>
     e1a:	88 0f       	add	r24, r24
     e1c:	99 1f       	adc	r25, r25
     e1e:	2a 95       	dec	r18
     e20:	e2 f7       	brpl	.-8      	; 0xe1a <M_DIO_Vid_WrtPinDir+0x70>
     e22:	80 95       	com	r24
     e24:	48 23       	and	r20, r24
     e26:	8b 81       	ldd	r24, Y+3	; 0x03
     e28:	28 2f       	mov	r18, r24
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	8a 81       	ldd	r24, Y+2	; 0x02
     e2e:	88 2f       	mov	r24, r24
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	b9 01       	movw	r22, r18
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <M_DIO_Vid_WrtPinDir+0x90>
     e36:	66 0f       	add	r22, r22
     e38:	77 1f       	adc	r23, r23
     e3a:	8a 95       	dec	r24
     e3c:	e2 f7       	brpl	.-8      	; 0xe36 <M_DIO_Vid_WrtPinDir+0x8c>
     e3e:	cb 01       	movw	r24, r22
     e40:	84 2b       	or	r24, r20
     e42:	8c 93       	st	X, r24
     e44:	65 c0       	rjmp	.+202    	; 0xf10 <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTB: WRT_BIT(DDRB,copy_u8_pin,copy_u8_direcrion); break;
     e46:	a7 e3       	ldi	r26, 0x37	; 55
     e48:	b0 e0       	ldi	r27, 0x00	; 0
     e4a:	e7 e3       	ldi	r30, 0x37	; 55
     e4c:	f0 e0       	ldi	r31, 0x00	; 0
     e4e:	80 81       	ld	r24, Z
     e50:	48 2f       	mov	r20, r24
     e52:	8a 81       	ldd	r24, Y+2	; 0x02
     e54:	28 2f       	mov	r18, r24
     e56:	30 e0       	ldi	r19, 0x00	; 0
     e58:	81 e0       	ldi	r24, 0x01	; 1
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	02 c0       	rjmp	.+4      	; 0xe62 <M_DIO_Vid_WrtPinDir+0xb8>
     e5e:	88 0f       	add	r24, r24
     e60:	99 1f       	adc	r25, r25
     e62:	2a 95       	dec	r18
     e64:	e2 f7       	brpl	.-8      	; 0xe5e <M_DIO_Vid_WrtPinDir+0xb4>
     e66:	80 95       	com	r24
     e68:	48 23       	and	r20, r24
     e6a:	8b 81       	ldd	r24, Y+3	; 0x03
     e6c:	28 2f       	mov	r18, r24
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	8a 81       	ldd	r24, Y+2	; 0x02
     e72:	88 2f       	mov	r24, r24
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	b9 01       	movw	r22, r18
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <M_DIO_Vid_WrtPinDir+0xd4>
     e7a:	66 0f       	add	r22, r22
     e7c:	77 1f       	adc	r23, r23
     e7e:	8a 95       	dec	r24
     e80:	e2 f7       	brpl	.-8      	; 0xe7a <M_DIO_Vid_WrtPinDir+0xd0>
     e82:	cb 01       	movw	r24, r22
     e84:	84 2b       	or	r24, r20
     e86:	8c 93       	st	X, r24
     e88:	43 c0       	rjmp	.+134    	; 0xf10 <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTC: WRT_BIT(DDRC,copy_u8_pin,copy_u8_direcrion); break;
     e8a:	a4 e3       	ldi	r26, 0x34	; 52
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	e4 e3       	ldi	r30, 0x34	; 52
     e90:	f0 e0       	ldi	r31, 0x00	; 0
     e92:	80 81       	ld	r24, Z
     e94:	48 2f       	mov	r20, r24
     e96:	8a 81       	ldd	r24, Y+2	; 0x02
     e98:	28 2f       	mov	r18, r24
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	81 e0       	ldi	r24, 0x01	; 1
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <M_DIO_Vid_WrtPinDir+0xfc>
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	2a 95       	dec	r18
     ea8:	e2 f7       	brpl	.-8      	; 0xea2 <M_DIO_Vid_WrtPinDir+0xf8>
     eaa:	80 95       	com	r24
     eac:	48 23       	and	r20, r24
     eae:	8b 81       	ldd	r24, Y+3	; 0x03
     eb0:	28 2f       	mov	r18, r24
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	88 2f       	mov	r24, r24
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	b9 01       	movw	r22, r18
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <M_DIO_Vid_WrtPinDir+0x118>
     ebe:	66 0f       	add	r22, r22
     ec0:	77 1f       	adc	r23, r23
     ec2:	8a 95       	dec	r24
     ec4:	e2 f7       	brpl	.-8      	; 0xebe <M_DIO_Vid_WrtPinDir+0x114>
     ec6:	cb 01       	movw	r24, r22
     ec8:	84 2b       	or	r24, r20
     eca:	8c 93       	st	X, r24
     ecc:	21 c0       	rjmp	.+66     	; 0xf10 <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTD: WRT_BIT(DDRD,copy_u8_pin,copy_u8_direcrion); break;
     ece:	a1 e3       	ldi	r26, 0x31	; 49
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	e1 e3       	ldi	r30, 0x31	; 49
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	80 81       	ld	r24, Z
     ed8:	48 2f       	mov	r20, r24
     eda:	8a 81       	ldd	r24, Y+2	; 0x02
     edc:	28 2f       	mov	r18, r24
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <M_DIO_Vid_WrtPinDir+0x140>
     ee6:	88 0f       	add	r24, r24
     ee8:	99 1f       	adc	r25, r25
     eea:	2a 95       	dec	r18
     eec:	e2 f7       	brpl	.-8      	; 0xee6 <M_DIO_Vid_WrtPinDir+0x13c>
     eee:	80 95       	com	r24
     ef0:	48 23       	and	r20, r24
     ef2:	8b 81       	ldd	r24, Y+3	; 0x03
     ef4:	28 2f       	mov	r18, r24
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	8a 81       	ldd	r24, Y+2	; 0x02
     efa:	88 2f       	mov	r24, r24
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	b9 01       	movw	r22, r18
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <M_DIO_Vid_WrtPinDir+0x15c>
     f02:	66 0f       	add	r22, r22
     f04:	77 1f       	adc	r23, r23
     f06:	8a 95       	dec	r24
     f08:	e2 f7       	brpl	.-8      	; 0xf02 <M_DIO_Vid_WrtPinDir+0x158>
     f0a:	cb 01       	movw	r24, r22
     f0c:	84 2b       	or	r24, r20
     f0e:	8c 93       	st	X, r24
		default:break;
	}
}
     f10:	0f 90       	pop	r0
     f12:	0f 90       	pop	r0
     f14:	0f 90       	pop	r0
     f16:	0f 90       	pop	r0
     f18:	0f 90       	pop	r0
     f1a:	cf 91       	pop	r28
     f1c:	df 91       	pop	r29
     f1e:	08 95       	ret

00000f20 <M_DIO_Vid_wrtPinVal>:
void M_DIO_Vid_wrtPinVal(u8 copy_u8_Port,u8 copy_u8_Pin,u8 copy_u8_pinVal)
{
     f20:	df 93       	push	r29
     f22:	cf 93       	push	r28
     f24:	00 d0       	rcall	.+0      	; 0xf26 <M_DIO_Vid_wrtPinVal+0x6>
     f26:	00 d0       	rcall	.+0      	; 0xf28 <M_DIO_Vid_wrtPinVal+0x8>
     f28:	0f 92       	push	r0
     f2a:	cd b7       	in	r28, 0x3d	; 61
     f2c:	de b7       	in	r29, 0x3e	; 62
     f2e:	89 83       	std	Y+1, r24	; 0x01
     f30:	6a 83       	std	Y+2, r22	; 0x02
     f32:	4b 83       	std	Y+3, r20	; 0x03
	switch(copy_u8_Port)
     f34:	89 81       	ldd	r24, Y+1	; 0x01
     f36:	28 2f       	mov	r18, r24
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	3d 83       	std	Y+5, r19	; 0x05
     f3c:	2c 83       	std	Y+4, r18	; 0x04
     f3e:	6c 81       	ldd	r22, Y+4	; 0x04
     f40:	7d 81       	ldd	r23, Y+5	; 0x05
     f42:	61 30       	cpi	r22, 0x01	; 1
     f44:	71 05       	cpc	r23, r1
     f46:	d1 f1       	breq	.+116    	; 0xfbc <M_DIO_Vid_wrtPinVal+0x9c>
     f48:	8c 81       	ldd	r24, Y+4	; 0x04
     f4a:	9d 81       	ldd	r25, Y+5	; 0x05
     f4c:	82 30       	cpi	r24, 0x02	; 2
     f4e:	91 05       	cpc	r25, r1
     f50:	34 f4       	brge	.+12     	; 0xf5e <M_DIO_Vid_wrtPinVal+0x3e>
     f52:	2c 81       	ldd	r18, Y+4	; 0x04
     f54:	3d 81       	ldd	r19, Y+5	; 0x05
     f56:	21 15       	cp	r18, r1
     f58:	31 05       	cpc	r19, r1
     f5a:	71 f0       	breq	.+28     	; 0xf78 <M_DIO_Vid_wrtPinVal+0x58>
     f5c:	94 c0       	rjmp	.+296    	; 0x1086 <M_DIO_Vid_wrtPinVal+0x166>
     f5e:	6c 81       	ldd	r22, Y+4	; 0x04
     f60:	7d 81       	ldd	r23, Y+5	; 0x05
     f62:	62 30       	cpi	r22, 0x02	; 2
     f64:	71 05       	cpc	r23, r1
     f66:	09 f4       	brne	.+2      	; 0xf6a <M_DIO_Vid_wrtPinVal+0x4a>
     f68:	4b c0       	rjmp	.+150    	; 0x1000 <M_DIO_Vid_wrtPinVal+0xe0>
     f6a:	8c 81       	ldd	r24, Y+4	; 0x04
     f6c:	9d 81       	ldd	r25, Y+5	; 0x05
     f6e:	83 30       	cpi	r24, 0x03	; 3
     f70:	91 05       	cpc	r25, r1
     f72:	09 f4       	brne	.+2      	; 0xf76 <M_DIO_Vid_wrtPinVal+0x56>
     f74:	67 c0       	rjmp	.+206    	; 0x1044 <M_DIO_Vid_wrtPinVal+0x124>
     f76:	87 c0       	rjmp	.+270    	; 0x1086 <M_DIO_Vid_wrtPinVal+0x166>
	{
		case M_DIO_PORTA: WRT_BIT(PORTA,copy_u8_Pin,copy_u8_pinVal); break;
     f78:	ab e3       	ldi	r26, 0x3B	; 59
     f7a:	b0 e0       	ldi	r27, 0x00	; 0
     f7c:	eb e3       	ldi	r30, 0x3B	; 59
     f7e:	f0 e0       	ldi	r31, 0x00	; 0
     f80:	80 81       	ld	r24, Z
     f82:	48 2f       	mov	r20, r24
     f84:	8a 81       	ldd	r24, Y+2	; 0x02
     f86:	28 2f       	mov	r18, r24
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <M_DIO_Vid_wrtPinVal+0x74>
     f90:	88 0f       	add	r24, r24
     f92:	99 1f       	adc	r25, r25
     f94:	2a 95       	dec	r18
     f96:	e2 f7       	brpl	.-8      	; 0xf90 <M_DIO_Vid_wrtPinVal+0x70>
     f98:	80 95       	com	r24
     f9a:	48 23       	and	r20, r24
     f9c:	8b 81       	ldd	r24, Y+3	; 0x03
     f9e:	28 2f       	mov	r18, r24
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	8a 81       	ldd	r24, Y+2	; 0x02
     fa4:	88 2f       	mov	r24, r24
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	b9 01       	movw	r22, r18
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <M_DIO_Vid_wrtPinVal+0x90>
     fac:	66 0f       	add	r22, r22
     fae:	77 1f       	adc	r23, r23
     fb0:	8a 95       	dec	r24
     fb2:	e2 f7       	brpl	.-8      	; 0xfac <M_DIO_Vid_wrtPinVal+0x8c>
     fb4:	cb 01       	movw	r24, r22
     fb6:	84 2b       	or	r24, r20
     fb8:	8c 93       	st	X, r24
     fba:	65 c0       	rjmp	.+202    	; 0x1086 <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTB: WRT_BIT(PORTB,copy_u8_Pin,copy_u8_pinVal); break;
     fbc:	a8 e3       	ldi	r26, 0x38	; 56
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	e8 e3       	ldi	r30, 0x38	; 56
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	80 81       	ld	r24, Z
     fc6:	48 2f       	mov	r20, r24
     fc8:	8a 81       	ldd	r24, Y+2	; 0x02
     fca:	28 2f       	mov	r18, r24
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <M_DIO_Vid_wrtPinVal+0xb8>
     fd4:	88 0f       	add	r24, r24
     fd6:	99 1f       	adc	r25, r25
     fd8:	2a 95       	dec	r18
     fda:	e2 f7       	brpl	.-8      	; 0xfd4 <M_DIO_Vid_wrtPinVal+0xb4>
     fdc:	80 95       	com	r24
     fde:	48 23       	and	r20, r24
     fe0:	8b 81       	ldd	r24, Y+3	; 0x03
     fe2:	28 2f       	mov	r18, r24
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	8a 81       	ldd	r24, Y+2	; 0x02
     fe8:	88 2f       	mov	r24, r24
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	b9 01       	movw	r22, r18
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <M_DIO_Vid_wrtPinVal+0xd4>
     ff0:	66 0f       	add	r22, r22
     ff2:	77 1f       	adc	r23, r23
     ff4:	8a 95       	dec	r24
     ff6:	e2 f7       	brpl	.-8      	; 0xff0 <M_DIO_Vid_wrtPinVal+0xd0>
     ff8:	cb 01       	movw	r24, r22
     ffa:	84 2b       	or	r24, r20
     ffc:	8c 93       	st	X, r24
     ffe:	43 c0       	rjmp	.+134    	; 0x1086 <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTC: WRT_BIT(PORTC,copy_u8_Pin,copy_u8_pinVal); break;
    1000:	a5 e3       	ldi	r26, 0x35	; 53
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e5 e3       	ldi	r30, 0x35	; 53
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	48 2f       	mov	r20, r24
    100c:	8a 81       	ldd	r24, Y+2	; 0x02
    100e:	28 2f       	mov	r18, r24
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	02 c0       	rjmp	.+4      	; 0x101c <M_DIO_Vid_wrtPinVal+0xfc>
    1018:	88 0f       	add	r24, r24
    101a:	99 1f       	adc	r25, r25
    101c:	2a 95       	dec	r18
    101e:	e2 f7       	brpl	.-8      	; 0x1018 <M_DIO_Vid_wrtPinVal+0xf8>
    1020:	80 95       	com	r24
    1022:	48 23       	and	r20, r24
    1024:	8b 81       	ldd	r24, Y+3	; 0x03
    1026:	28 2f       	mov	r18, r24
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	8a 81       	ldd	r24, Y+2	; 0x02
    102c:	88 2f       	mov	r24, r24
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	b9 01       	movw	r22, r18
    1032:	02 c0       	rjmp	.+4      	; 0x1038 <M_DIO_Vid_wrtPinVal+0x118>
    1034:	66 0f       	add	r22, r22
    1036:	77 1f       	adc	r23, r23
    1038:	8a 95       	dec	r24
    103a:	e2 f7       	brpl	.-8      	; 0x1034 <M_DIO_Vid_wrtPinVal+0x114>
    103c:	cb 01       	movw	r24, r22
    103e:	84 2b       	or	r24, r20
    1040:	8c 93       	st	X, r24
    1042:	21 c0       	rjmp	.+66     	; 0x1086 <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTD: WRT_BIT(PORTD,copy_u8_Pin,copy_u8_pinVal); break;
    1044:	a2 e3       	ldi	r26, 0x32	; 50
    1046:	b0 e0       	ldi	r27, 0x00	; 0
    1048:	e2 e3       	ldi	r30, 0x32	; 50
    104a:	f0 e0       	ldi	r31, 0x00	; 0
    104c:	80 81       	ld	r24, Z
    104e:	48 2f       	mov	r20, r24
    1050:	8a 81       	ldd	r24, Y+2	; 0x02
    1052:	28 2f       	mov	r18, r24
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	02 c0       	rjmp	.+4      	; 0x1060 <M_DIO_Vid_wrtPinVal+0x140>
    105c:	88 0f       	add	r24, r24
    105e:	99 1f       	adc	r25, r25
    1060:	2a 95       	dec	r18
    1062:	e2 f7       	brpl	.-8      	; 0x105c <M_DIO_Vid_wrtPinVal+0x13c>
    1064:	80 95       	com	r24
    1066:	48 23       	and	r20, r24
    1068:	8b 81       	ldd	r24, Y+3	; 0x03
    106a:	28 2f       	mov	r18, r24
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	8a 81       	ldd	r24, Y+2	; 0x02
    1070:	88 2f       	mov	r24, r24
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	b9 01       	movw	r22, r18
    1076:	02 c0       	rjmp	.+4      	; 0x107c <M_DIO_Vid_wrtPinVal+0x15c>
    1078:	66 0f       	add	r22, r22
    107a:	77 1f       	adc	r23, r23
    107c:	8a 95       	dec	r24
    107e:	e2 f7       	brpl	.-8      	; 0x1078 <M_DIO_Vid_wrtPinVal+0x158>
    1080:	cb 01       	movw	r24, r22
    1082:	84 2b       	or	r24, r20
    1084:	8c 93       	st	X, r24
		default:break;
	}
}
    1086:	0f 90       	pop	r0
    1088:	0f 90       	pop	r0
    108a:	0f 90       	pop	r0
    108c:	0f 90       	pop	r0
    108e:	0f 90       	pop	r0
    1090:	cf 91       	pop	r28
    1092:	df 91       	pop	r29
    1094:	08 95       	ret

00001096 <M_DIO_u8_READPinVal>:
u8  M_DIO_u8_READPinVal (u8 copy_u8_Port,u8 copy_u8_Pin)
{
    1096:	df 93       	push	r29
    1098:	cf 93       	push	r28
    109a:	00 d0       	rcall	.+0      	; 0x109c <M_DIO_u8_READPinVal+0x6>
    109c:	00 d0       	rcall	.+0      	; 0x109e <M_DIO_u8_READPinVal+0x8>
    109e:	0f 92       	push	r0
    10a0:	cd b7       	in	r28, 0x3d	; 61
    10a2:	de b7       	in	r29, 0x3e	; 62
    10a4:	8a 83       	std	Y+2, r24	; 0x02
    10a6:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8_pinval=0;
    10a8:	19 82       	std	Y+1, r1	; 0x01
	switch(copy_u8_Port)
    10aa:	8a 81       	ldd	r24, Y+2	; 0x02
    10ac:	28 2f       	mov	r18, r24
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	3d 83       	std	Y+5, r19	; 0x05
    10b2:	2c 83       	std	Y+4, r18	; 0x04
    10b4:	4c 81       	ldd	r20, Y+4	; 0x04
    10b6:	5d 81       	ldd	r21, Y+5	; 0x05
    10b8:	41 30       	cpi	r20, 0x01	; 1
    10ba:	51 05       	cpc	r21, r1
    10bc:	41 f1       	breq	.+80     	; 0x110e <M_DIO_u8_READPinVal+0x78>
    10be:	8c 81       	ldd	r24, Y+4	; 0x04
    10c0:	9d 81       	ldd	r25, Y+5	; 0x05
    10c2:	82 30       	cpi	r24, 0x02	; 2
    10c4:	91 05       	cpc	r25, r1
    10c6:	34 f4       	brge	.+12     	; 0x10d4 <M_DIO_u8_READPinVal+0x3e>
    10c8:	2c 81       	ldd	r18, Y+4	; 0x04
    10ca:	3d 81       	ldd	r19, Y+5	; 0x05
    10cc:	21 15       	cp	r18, r1
    10ce:	31 05       	cpc	r19, r1
    10d0:	61 f0       	breq	.+24     	; 0x10ea <M_DIO_u8_READPinVal+0x54>
    10d2:	52 c0       	rjmp	.+164    	; 0x1178 <M_DIO_u8_READPinVal+0xe2>
    10d4:	4c 81       	ldd	r20, Y+4	; 0x04
    10d6:	5d 81       	ldd	r21, Y+5	; 0x05
    10d8:	42 30       	cpi	r20, 0x02	; 2
    10da:	51 05       	cpc	r21, r1
    10dc:	51 f1       	breq	.+84     	; 0x1132 <M_DIO_u8_READPinVal+0x9c>
    10de:	8c 81       	ldd	r24, Y+4	; 0x04
    10e0:	9d 81       	ldd	r25, Y+5	; 0x05
    10e2:	83 30       	cpi	r24, 0x03	; 3
    10e4:	91 05       	cpc	r25, r1
    10e6:	b9 f1       	breq	.+110    	; 0x1156 <M_DIO_u8_READPinVal+0xc0>
    10e8:	47 c0       	rjmp	.+142    	; 0x1178 <M_DIO_u8_READPinVal+0xe2>
	{
		case M_DIO_PORTA: local_u8_pinval = GIT_BIT(PINA,copy_u8_Pin); break;
    10ea:	e9 e3       	ldi	r30, 0x39	; 57
    10ec:	f0 e0       	ldi	r31, 0x00	; 0
    10ee:	80 81       	ld	r24, Z
    10f0:	28 2f       	mov	r18, r24
    10f2:	30 e0       	ldi	r19, 0x00	; 0
    10f4:	8b 81       	ldd	r24, Y+3	; 0x03
    10f6:	88 2f       	mov	r24, r24
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	a9 01       	movw	r20, r18
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <M_DIO_u8_READPinVal+0x6c>
    10fe:	55 95       	asr	r21
    1100:	47 95       	ror	r20
    1102:	8a 95       	dec	r24
    1104:	e2 f7       	brpl	.-8      	; 0x10fe <M_DIO_u8_READPinVal+0x68>
    1106:	ca 01       	movw	r24, r20
    1108:	81 70       	andi	r24, 0x01	; 1
    110a:	89 83       	std	Y+1, r24	; 0x01
    110c:	35 c0       	rjmp	.+106    	; 0x1178 <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTB: local_u8_pinval = GIT_BIT(PINB,copy_u8_Pin); break;
    110e:	e6 e3       	ldi	r30, 0x36	; 54
    1110:	f0 e0       	ldi	r31, 0x00	; 0
    1112:	80 81       	ld	r24, Z
    1114:	28 2f       	mov	r18, r24
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	8b 81       	ldd	r24, Y+3	; 0x03
    111a:	88 2f       	mov	r24, r24
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	a9 01       	movw	r20, r18
    1120:	02 c0       	rjmp	.+4      	; 0x1126 <M_DIO_u8_READPinVal+0x90>
    1122:	55 95       	asr	r21
    1124:	47 95       	ror	r20
    1126:	8a 95       	dec	r24
    1128:	e2 f7       	brpl	.-8      	; 0x1122 <M_DIO_u8_READPinVal+0x8c>
    112a:	ca 01       	movw	r24, r20
    112c:	81 70       	andi	r24, 0x01	; 1
    112e:	89 83       	std	Y+1, r24	; 0x01
    1130:	23 c0       	rjmp	.+70     	; 0x1178 <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTC: local_u8_pinval = GIT_BIT(PINC,copy_u8_Pin); break;
    1132:	e3 e3       	ldi	r30, 0x33	; 51
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	80 81       	ld	r24, Z
    1138:	28 2f       	mov	r18, r24
    113a:	30 e0       	ldi	r19, 0x00	; 0
    113c:	8b 81       	ldd	r24, Y+3	; 0x03
    113e:	88 2f       	mov	r24, r24
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	a9 01       	movw	r20, r18
    1144:	02 c0       	rjmp	.+4      	; 0x114a <M_DIO_u8_READPinVal+0xb4>
    1146:	55 95       	asr	r21
    1148:	47 95       	ror	r20
    114a:	8a 95       	dec	r24
    114c:	e2 f7       	brpl	.-8      	; 0x1146 <M_DIO_u8_READPinVal+0xb0>
    114e:	ca 01       	movw	r24, r20
    1150:	81 70       	andi	r24, 0x01	; 1
    1152:	89 83       	std	Y+1, r24	; 0x01
    1154:	11 c0       	rjmp	.+34     	; 0x1178 <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTD: local_u8_pinval = GIT_BIT(PIND,copy_u8_Pin); break;
    1156:	e0 e3       	ldi	r30, 0x30	; 48
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	80 81       	ld	r24, Z
    115c:	28 2f       	mov	r18, r24
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	8b 81       	ldd	r24, Y+3	; 0x03
    1162:	88 2f       	mov	r24, r24
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	a9 01       	movw	r20, r18
    1168:	02 c0       	rjmp	.+4      	; 0x116e <M_DIO_u8_READPinVal+0xd8>
    116a:	55 95       	asr	r21
    116c:	47 95       	ror	r20
    116e:	8a 95       	dec	r24
    1170:	e2 f7       	brpl	.-8      	; 0x116a <M_DIO_u8_READPinVal+0xd4>
    1172:	ca 01       	movw	r24, r20
    1174:	81 70       	andi	r24, 0x01	; 1
    1176:	89 83       	std	Y+1, r24	; 0x01
		default:break;
	}
	return local_u8_pinval;
    1178:	89 81       	ldd	r24, Y+1	; 0x01
}
    117a:	0f 90       	pop	r0
    117c:	0f 90       	pop	r0
    117e:	0f 90       	pop	r0
    1180:	0f 90       	pop	r0
    1182:	0f 90       	pop	r0
    1184:	cf 91       	pop	r28
    1186:	df 91       	pop	r29
    1188:	08 95       	ret

0000118a <M_DIO_Vid_WrtPortDir>:
void M_DIO_Vid_WrtPortDir(u8 copy_u8_port,u8 copy_u8_Portdirecrion)
{
    118a:	df 93       	push	r29
    118c:	cf 93       	push	r28
    118e:	00 d0       	rcall	.+0      	; 0x1190 <M_DIO_Vid_WrtPortDir+0x6>
    1190:	00 d0       	rcall	.+0      	; 0x1192 <M_DIO_Vid_WrtPortDir+0x8>
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
    1196:	89 83       	std	Y+1, r24	; 0x01
    1198:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8_port)
    119a:	89 81       	ldd	r24, Y+1	; 0x01
    119c:	28 2f       	mov	r18, r24
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	3c 83       	std	Y+4, r19	; 0x04
    11a2:	2b 83       	std	Y+3, r18	; 0x03
    11a4:	8b 81       	ldd	r24, Y+3	; 0x03
    11a6:	9c 81       	ldd	r25, Y+4	; 0x04
    11a8:	81 30       	cpi	r24, 0x01	; 1
    11aa:	91 05       	cpc	r25, r1
    11ac:	d1 f0       	breq	.+52     	; 0x11e2 <M_DIO_Vid_WrtPortDir+0x58>
    11ae:	2b 81       	ldd	r18, Y+3	; 0x03
    11b0:	3c 81       	ldd	r19, Y+4	; 0x04
    11b2:	22 30       	cpi	r18, 0x02	; 2
    11b4:	31 05       	cpc	r19, r1
    11b6:	2c f4       	brge	.+10     	; 0x11c2 <M_DIO_Vid_WrtPortDir+0x38>
    11b8:	8b 81       	ldd	r24, Y+3	; 0x03
    11ba:	9c 81       	ldd	r25, Y+4	; 0x04
    11bc:	00 97       	sbiw	r24, 0x00	; 0
    11be:	61 f0       	breq	.+24     	; 0x11d8 <M_DIO_Vid_WrtPortDir+0x4e>
    11c0:	1e c0       	rjmp	.+60     	; 0x11fe <M_DIO_Vid_WrtPortDir+0x74>
    11c2:	2b 81       	ldd	r18, Y+3	; 0x03
    11c4:	3c 81       	ldd	r19, Y+4	; 0x04
    11c6:	22 30       	cpi	r18, 0x02	; 2
    11c8:	31 05       	cpc	r19, r1
    11ca:	81 f0       	breq	.+32     	; 0x11ec <M_DIO_Vid_WrtPortDir+0x62>
    11cc:	8b 81       	ldd	r24, Y+3	; 0x03
    11ce:	9c 81       	ldd	r25, Y+4	; 0x04
    11d0:	83 30       	cpi	r24, 0x03	; 3
    11d2:	91 05       	cpc	r25, r1
    11d4:	81 f0       	breq	.+32     	; 0x11f6 <M_DIO_Vid_WrtPortDir+0x6c>
    11d6:	13 c0       	rjmp	.+38     	; 0x11fe <M_DIO_Vid_WrtPortDir+0x74>
	{
		case M_DIO_PORTA: DDRA = copy_u8_Portdirecrion; break;
    11d8:	ea e3       	ldi	r30, 0x3A	; 58
    11da:	f0 e0       	ldi	r31, 0x00	; 0
    11dc:	8a 81       	ldd	r24, Y+2	; 0x02
    11de:	80 83       	st	Z, r24
    11e0:	0e c0       	rjmp	.+28     	; 0x11fe <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTB: DDRB = copy_u8_Portdirecrion; break;
    11e2:	e7 e3       	ldi	r30, 0x37	; 55
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	8a 81       	ldd	r24, Y+2	; 0x02
    11e8:	80 83       	st	Z, r24
    11ea:	09 c0       	rjmp	.+18     	; 0x11fe <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTC: DDRC = copy_u8_Portdirecrion; break;
    11ec:	e4 e3       	ldi	r30, 0x34	; 52
    11ee:	f0 e0       	ldi	r31, 0x00	; 0
    11f0:	8a 81       	ldd	r24, Y+2	; 0x02
    11f2:	80 83       	st	Z, r24
    11f4:	04 c0       	rjmp	.+8      	; 0x11fe <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTD: DDRD = copy_u8_Portdirecrion; break;
    11f6:	e1 e3       	ldi	r30, 0x31	; 49
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	8a 81       	ldd	r24, Y+2	; 0x02
    11fc:	80 83       	st	Z, r24
	}
}
    11fe:	0f 90       	pop	r0
    1200:	0f 90       	pop	r0
    1202:	0f 90       	pop	r0
    1204:	0f 90       	pop	r0
    1206:	cf 91       	pop	r28
    1208:	df 91       	pop	r29
    120a:	08 95       	ret

0000120c <M_DIO_Vid_WrtPortVal>:
void M_DIO_Vid_WrtPortVal(u8 copy_u8_port,u8 copy_u8_PortVal)
{
    120c:	df 93       	push	r29
    120e:	cf 93       	push	r28
    1210:	00 d0       	rcall	.+0      	; 0x1212 <M_DIO_Vid_WrtPortVal+0x6>
    1212:	00 d0       	rcall	.+0      	; 0x1214 <M_DIO_Vid_WrtPortVal+0x8>
    1214:	cd b7       	in	r28, 0x3d	; 61
    1216:	de b7       	in	r29, 0x3e	; 62
    1218:	89 83       	std	Y+1, r24	; 0x01
    121a:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8_port)
    121c:	89 81       	ldd	r24, Y+1	; 0x01
    121e:	28 2f       	mov	r18, r24
    1220:	30 e0       	ldi	r19, 0x00	; 0
    1222:	3c 83       	std	Y+4, r19	; 0x04
    1224:	2b 83       	std	Y+3, r18	; 0x03
    1226:	8b 81       	ldd	r24, Y+3	; 0x03
    1228:	9c 81       	ldd	r25, Y+4	; 0x04
    122a:	81 30       	cpi	r24, 0x01	; 1
    122c:	91 05       	cpc	r25, r1
    122e:	d1 f0       	breq	.+52     	; 0x1264 <M_DIO_Vid_WrtPortVal+0x58>
    1230:	2b 81       	ldd	r18, Y+3	; 0x03
    1232:	3c 81       	ldd	r19, Y+4	; 0x04
    1234:	22 30       	cpi	r18, 0x02	; 2
    1236:	31 05       	cpc	r19, r1
    1238:	2c f4       	brge	.+10     	; 0x1244 <M_DIO_Vid_WrtPortVal+0x38>
    123a:	8b 81       	ldd	r24, Y+3	; 0x03
    123c:	9c 81       	ldd	r25, Y+4	; 0x04
    123e:	00 97       	sbiw	r24, 0x00	; 0
    1240:	61 f0       	breq	.+24     	; 0x125a <M_DIO_Vid_WrtPortVal+0x4e>
    1242:	1e c0       	rjmp	.+60     	; 0x1280 <M_DIO_Vid_WrtPortVal+0x74>
    1244:	2b 81       	ldd	r18, Y+3	; 0x03
    1246:	3c 81       	ldd	r19, Y+4	; 0x04
    1248:	22 30       	cpi	r18, 0x02	; 2
    124a:	31 05       	cpc	r19, r1
    124c:	81 f0       	breq	.+32     	; 0x126e <M_DIO_Vid_WrtPortVal+0x62>
    124e:	8b 81       	ldd	r24, Y+3	; 0x03
    1250:	9c 81       	ldd	r25, Y+4	; 0x04
    1252:	83 30       	cpi	r24, 0x03	; 3
    1254:	91 05       	cpc	r25, r1
    1256:	81 f0       	breq	.+32     	; 0x1278 <M_DIO_Vid_WrtPortVal+0x6c>
    1258:	13 c0       	rjmp	.+38     	; 0x1280 <M_DIO_Vid_WrtPortVal+0x74>
	{
		case M_DIO_PORTA: PORTA = copy_u8_PortVal ; break;
    125a:	eb e3       	ldi	r30, 0x3B	; 59
    125c:	f0 e0       	ldi	r31, 0x00	; 0
    125e:	8a 81       	ldd	r24, Y+2	; 0x02
    1260:	80 83       	st	Z, r24
    1262:	0e c0       	rjmp	.+28     	; 0x1280 <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTB: PORTB = copy_u8_PortVal ; break;
    1264:	e8 e3       	ldi	r30, 0x38	; 56
    1266:	f0 e0       	ldi	r31, 0x00	; 0
    1268:	8a 81       	ldd	r24, Y+2	; 0x02
    126a:	80 83       	st	Z, r24
    126c:	09 c0       	rjmp	.+18     	; 0x1280 <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTC: PORTC = copy_u8_PortVal ; break;
    126e:	e5 e3       	ldi	r30, 0x35	; 53
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	8a 81       	ldd	r24, Y+2	; 0x02
    1274:	80 83       	st	Z, r24
    1276:	04 c0       	rjmp	.+8      	; 0x1280 <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTD: PORTD = copy_u8_PortVal ; break;
    1278:	e2 e3       	ldi	r30, 0x32	; 50
    127a:	f0 e0       	ldi	r31, 0x00	; 0
    127c:	8a 81       	ldd	r24, Y+2	; 0x02
    127e:	80 83       	st	Z, r24
	}
}
    1280:	0f 90       	pop	r0
    1282:	0f 90       	pop	r0
    1284:	0f 90       	pop	r0
    1286:	0f 90       	pop	r0
    1288:	cf 91       	pop	r28
    128a:	df 91       	pop	r29
    128c:	08 95       	ret

0000128e <M_DIO_u8_ReadPortVal>:
u8 M_DIO_u8_ReadPortVal(u8 copy_u8_Port)
{
    128e:	df 93       	push	r29
    1290:	cf 93       	push	r28
    1292:	00 d0       	rcall	.+0      	; 0x1294 <M_DIO_u8_ReadPortVal+0x6>
    1294:	00 d0       	rcall	.+0      	; 0x1296 <M_DIO_u8_ReadPortVal+0x8>
    1296:	cd b7       	in	r28, 0x3d	; 61
    1298:	de b7       	in	r29, 0x3e	; 62
    129a:	8a 83       	std	Y+2, r24	; 0x02
	u8 local_u8_portVal=0;
    129c:	19 82       	std	Y+1, r1	; 0x01
	switch(copy_u8_Port)
    129e:	8a 81       	ldd	r24, Y+2	; 0x02
    12a0:	28 2f       	mov	r18, r24
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	3c 83       	std	Y+4, r19	; 0x04
    12a6:	2b 83       	std	Y+3, r18	; 0x03
    12a8:	8b 81       	ldd	r24, Y+3	; 0x03
    12aa:	9c 81       	ldd	r25, Y+4	; 0x04
    12ac:	81 30       	cpi	r24, 0x01	; 1
    12ae:	91 05       	cpc	r25, r1
    12b0:	d1 f0       	breq	.+52     	; 0x12e6 <M_DIO_u8_ReadPortVal+0x58>
    12b2:	2b 81       	ldd	r18, Y+3	; 0x03
    12b4:	3c 81       	ldd	r19, Y+4	; 0x04
    12b6:	22 30       	cpi	r18, 0x02	; 2
    12b8:	31 05       	cpc	r19, r1
    12ba:	2c f4       	brge	.+10     	; 0x12c6 <M_DIO_u8_ReadPortVal+0x38>
    12bc:	8b 81       	ldd	r24, Y+3	; 0x03
    12be:	9c 81       	ldd	r25, Y+4	; 0x04
    12c0:	00 97       	sbiw	r24, 0x00	; 0
    12c2:	61 f0       	breq	.+24     	; 0x12dc <M_DIO_u8_ReadPortVal+0x4e>
    12c4:	1e c0       	rjmp	.+60     	; 0x1302 <M_DIO_u8_ReadPortVal+0x74>
    12c6:	2b 81       	ldd	r18, Y+3	; 0x03
    12c8:	3c 81       	ldd	r19, Y+4	; 0x04
    12ca:	22 30       	cpi	r18, 0x02	; 2
    12cc:	31 05       	cpc	r19, r1
    12ce:	81 f0       	breq	.+32     	; 0x12f0 <M_DIO_u8_ReadPortVal+0x62>
    12d0:	8b 81       	ldd	r24, Y+3	; 0x03
    12d2:	9c 81       	ldd	r25, Y+4	; 0x04
    12d4:	83 30       	cpi	r24, 0x03	; 3
    12d6:	91 05       	cpc	r25, r1
    12d8:	81 f0       	breq	.+32     	; 0x12fa <M_DIO_u8_ReadPortVal+0x6c>
    12da:	13 c0       	rjmp	.+38     	; 0x1302 <M_DIO_u8_ReadPortVal+0x74>
	{
		case M_DIO_PORTA: local_u8_portVal = PINA ; break;
    12dc:	e9 e3       	ldi	r30, 0x39	; 57
    12de:	f0 e0       	ldi	r31, 0x00	; 0
    12e0:	80 81       	ld	r24, Z
    12e2:	89 83       	std	Y+1, r24	; 0x01
    12e4:	0e c0       	rjmp	.+28     	; 0x1302 <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTB: local_u8_portVal = PINB ; break;
    12e6:	e6 e3       	ldi	r30, 0x36	; 54
    12e8:	f0 e0       	ldi	r31, 0x00	; 0
    12ea:	80 81       	ld	r24, Z
    12ec:	89 83       	std	Y+1, r24	; 0x01
    12ee:	09 c0       	rjmp	.+18     	; 0x1302 <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTC: local_u8_portVal = PINC ; break;
    12f0:	e3 e3       	ldi	r30, 0x33	; 51
    12f2:	f0 e0       	ldi	r31, 0x00	; 0
    12f4:	80 81       	ld	r24, Z
    12f6:	89 83       	std	Y+1, r24	; 0x01
    12f8:	04 c0       	rjmp	.+8      	; 0x1302 <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTD: local_u8_portVal = PIND ; break;
    12fa:	e0 e3       	ldi	r30, 0x30	; 48
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	80 81       	ld	r24, Z
    1300:	89 83       	std	Y+1, r24	; 0x01
	}
	return local_u8_portVal;
    1302:	89 81       	ldd	r24, Y+1	; 0x01
}
    1304:	0f 90       	pop	r0
    1306:	0f 90       	pop	r0
    1308:	0f 90       	pop	r0
    130a:	0f 90       	pop	r0
    130c:	cf 91       	pop	r28
    130e:	df 91       	pop	r29
    1310:	08 95       	ret

00001312 <H_LCD_Vid_Int>:


/* LCD INIT FOR 8 BIT */
/************************************************/
void H_LCD_Vid_Int()
{
    1312:	0f 93       	push	r16
    1314:	1f 93       	push	r17
    1316:	df 93       	push	r29
    1318:	cf 93       	push	r28
    131a:	cd b7       	in	r28, 0x3d	; 61
    131c:	de b7       	in	r29, 0x3e	; 62
    131e:	c6 54       	subi	r28, 0x46	; 70
    1320:	d0 40       	sbci	r29, 0x00	; 0
    1322:	0f b6       	in	r0, 0x3f	; 63
    1324:	f8 94       	cli
    1326:	de bf       	out	0x3e, r29	; 62
    1328:	0f be       	out	0x3f, r0	; 63
    132a:	cd bf       	out	0x3d, r28	; 61
	/* set pin RS as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,RS,M_DIO_OUTPUT);
    132c:	81 e0       	ldi	r24, 0x01	; 1
    132e:	60 e0       	ldi	r22, 0x00	; 0
    1330:	41 e0       	ldi	r20, 0x01	; 1
    1332:	0e 94 d5 06 	call	0xdaa	; 0xdaa <M_DIO_Vid_WrtPinDir>

	/* set pin R/w as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,RW,M_DIO_OUTPUT);
    1336:	81 e0       	ldi	r24, 0x01	; 1
    1338:	61 e0       	ldi	r22, 0x01	; 1
    133a:	41 e0       	ldi	r20, 0x01	; 1
    133c:	0e 94 d5 06 	call	0xdaa	; 0xdaa <M_DIO_Vid_WrtPinDir>

	/* set pin E as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,E,M_DIO_OUTPUT);
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	62 e0       	ldi	r22, 0x02	; 2
    1344:	41 e0       	ldi	r20, 0x01	; 1
    1346:	0e 94 d5 06 	call	0xdaa	; 0xdaa <M_DIO_Vid_WrtPinDir>

	/*SET data port as output */
	M_DIO_Vid_WrtPortDir(LCD_Data_Port,M_DIO_PORT_OUTPUT);
    134a:	83 e0       	ldi	r24, 0x03	; 3
    134c:	6f ef       	ldi	r22, 0xFF	; 255
    134e:	0e 94 c5 08 	call	0x118a	; 0x118a <M_DIO_Vid_WrtPortDir>
    1352:	fe 01       	movw	r30, r28
    1354:	ed 5b       	subi	r30, 0xBD	; 189
    1356:	ff 4f       	sbci	r31, 0xFF	; 255
    1358:	80 e0       	ldi	r24, 0x00	; 0
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	a0 ef       	ldi	r26, 0xF0	; 240
    135e:	b1 e4       	ldi	r27, 0x41	; 65
    1360:	80 83       	st	Z, r24
    1362:	91 83       	std	Z+1, r25	; 0x01
    1364:	a2 83       	std	Z+2, r26	; 0x02
    1366:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1368:	8e 01       	movw	r16, r28
    136a:	01 5c       	subi	r16, 0xC1	; 193
    136c:	1f 4f       	sbci	r17, 0xFF	; 255
    136e:	fe 01       	movw	r30, r28
    1370:	ed 5b       	subi	r30, 0xBD	; 189
    1372:	ff 4f       	sbci	r31, 0xFF	; 255
    1374:	60 81       	ld	r22, Z
    1376:	71 81       	ldd	r23, Z+1	; 0x01
    1378:	82 81       	ldd	r24, Z+2	; 0x02
    137a:	93 81       	ldd	r25, Z+3	; 0x03
    137c:	20 e0       	ldi	r18, 0x00	; 0
    137e:	30 e0       	ldi	r19, 0x00	; 0
    1380:	4a ef       	ldi	r20, 0xFA	; 250
    1382:	54 e4       	ldi	r21, 0x44	; 68
    1384:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1388:	dc 01       	movw	r26, r24
    138a:	cb 01       	movw	r24, r22
    138c:	f8 01       	movw	r30, r16
    138e:	80 83       	st	Z, r24
    1390:	91 83       	std	Z+1, r25	; 0x01
    1392:	a2 83       	std	Z+2, r26	; 0x02
    1394:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1396:	fe 01       	movw	r30, r28
    1398:	ff 96       	adiw	r30, 0x3f	; 63
    139a:	60 81       	ld	r22, Z
    139c:	71 81       	ldd	r23, Z+1	; 0x01
    139e:	82 81       	ldd	r24, Z+2	; 0x02
    13a0:	93 81       	ldd	r25, Z+3	; 0x03
    13a2:	20 e0       	ldi	r18, 0x00	; 0
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	40 e8       	ldi	r20, 0x80	; 128
    13a8:	5f e3       	ldi	r21, 0x3F	; 63
    13aa:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    13ae:	88 23       	and	r24, r24
    13b0:	2c f4       	brge	.+10     	; 0x13bc <H_LCD_Vid_Int+0xaa>
		__ticks = 1;
    13b2:	81 e0       	ldi	r24, 0x01	; 1
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	9e af       	std	Y+62, r25	; 0x3e
    13b8:	8d af       	std	Y+61, r24	; 0x3d
    13ba:	46 c0       	rjmp	.+140    	; 0x1448 <H_LCD_Vid_Int+0x136>
	else if (__tmp > 65535)
    13bc:	fe 01       	movw	r30, r28
    13be:	ff 96       	adiw	r30, 0x3f	; 63
    13c0:	60 81       	ld	r22, Z
    13c2:	71 81       	ldd	r23, Z+1	; 0x01
    13c4:	82 81       	ldd	r24, Z+2	; 0x02
    13c6:	93 81       	ldd	r25, Z+3	; 0x03
    13c8:	20 e0       	ldi	r18, 0x00	; 0
    13ca:	3f ef       	ldi	r19, 0xFF	; 255
    13cc:	4f e7       	ldi	r20, 0x7F	; 127
    13ce:	57 e4       	ldi	r21, 0x47	; 71
    13d0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    13d4:	18 16       	cp	r1, r24
    13d6:	64 f5       	brge	.+88     	; 0x1430 <H_LCD_Vid_Int+0x11e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13d8:	fe 01       	movw	r30, r28
    13da:	ed 5b       	subi	r30, 0xBD	; 189
    13dc:	ff 4f       	sbci	r31, 0xFF	; 255
    13de:	60 81       	ld	r22, Z
    13e0:	71 81       	ldd	r23, Z+1	; 0x01
    13e2:	82 81       	ldd	r24, Z+2	; 0x02
    13e4:	93 81       	ldd	r25, Z+3	; 0x03
    13e6:	20 e0       	ldi	r18, 0x00	; 0
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	40 e2       	ldi	r20, 0x20	; 32
    13ec:	51 e4       	ldi	r21, 0x41	; 65
    13ee:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    13f2:	dc 01       	movw	r26, r24
    13f4:	cb 01       	movw	r24, r22
    13f6:	bc 01       	movw	r22, r24
    13f8:	cd 01       	movw	r24, r26
    13fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13fe:	dc 01       	movw	r26, r24
    1400:	cb 01       	movw	r24, r22
    1402:	9e af       	std	Y+62, r25	; 0x3e
    1404:	8d af       	std	Y+61, r24	; 0x3d
    1406:	0f c0       	rjmp	.+30     	; 0x1426 <H_LCD_Vid_Int+0x114>
    1408:	88 ec       	ldi	r24, 0xC8	; 200
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	9c af       	std	Y+60, r25	; 0x3c
    140e:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1410:	8b ad       	ldd	r24, Y+59	; 0x3b
    1412:	9c ad       	ldd	r25, Y+60	; 0x3c
    1414:	01 97       	sbiw	r24, 0x01	; 1
    1416:	f1 f7       	brne	.-4      	; 0x1414 <H_LCD_Vid_Int+0x102>
    1418:	9c af       	std	Y+60, r25	; 0x3c
    141a:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    141c:	8d ad       	ldd	r24, Y+61	; 0x3d
    141e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	9e af       	std	Y+62, r25	; 0x3e
    1424:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1426:	8d ad       	ldd	r24, Y+61	; 0x3d
    1428:	9e ad       	ldd	r25, Y+62	; 0x3e
    142a:	00 97       	sbiw	r24, 0x00	; 0
    142c:	69 f7       	brne	.-38     	; 0x1408 <H_LCD_Vid_Int+0xf6>
    142e:	16 c0       	rjmp	.+44     	; 0x145c <H_LCD_Vid_Int+0x14a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1430:	fe 01       	movw	r30, r28
    1432:	ff 96       	adiw	r30, 0x3f	; 63
    1434:	60 81       	ld	r22, Z
    1436:	71 81       	ldd	r23, Z+1	; 0x01
    1438:	82 81       	ldd	r24, Z+2	; 0x02
    143a:	93 81       	ldd	r25, Z+3	; 0x03
    143c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1440:	dc 01       	movw	r26, r24
    1442:	cb 01       	movw	r24, r22
    1444:	9e af       	std	Y+62, r25	; 0x3e
    1446:	8d af       	std	Y+61, r24	; 0x3d
    1448:	8d ad       	ldd	r24, Y+61	; 0x3d
    144a:	9e ad       	ldd	r25, Y+62	; 0x3e
    144c:	9a af       	std	Y+58, r25	; 0x3a
    144e:	89 af       	std	Y+57, r24	; 0x39
    1450:	89 ad       	ldd	r24, Y+57	; 0x39
    1452:	9a ad       	ldd	r25, Y+58	; 0x3a
    1454:	01 97       	sbiw	r24, 0x01	; 1
    1456:	f1 f7       	brne	.-4      	; 0x1454 <H_LCD_Vid_Int+0x142>
    1458:	9a af       	std	Y+58, r25	; 0x3a
    145a:	89 af       	std	Y+57, r24	; 0x39

	/* wait for 30 ms */
	_delay_ms(30);
	H_LCD_Vid_Wrt_Com(SET_8BITS_2LINES);
    145c:	88 e3       	ldi	r24, 0x38	; 56
    145e:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <H_LCD_Vid_Wrt_Com>
    1462:	80 e0       	ldi	r24, 0x00	; 0
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	a0 e8       	ldi	r26, 0x80	; 128
    1468:	bf e3       	ldi	r27, 0x3F	; 63
    146a:	8d ab       	std	Y+53, r24	; 0x35
    146c:	9e ab       	std	Y+54, r25	; 0x36
    146e:	af ab       	std	Y+55, r26	; 0x37
    1470:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1472:	6d a9       	ldd	r22, Y+53	; 0x35
    1474:	7e a9       	ldd	r23, Y+54	; 0x36
    1476:	8f a9       	ldd	r24, Y+55	; 0x37
    1478:	98 ad       	ldd	r25, Y+56	; 0x38
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	4a ef       	ldi	r20, 0xFA	; 250
    1480:	54 e4       	ldi	r21, 0x44	; 68
    1482:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1486:	dc 01       	movw	r26, r24
    1488:	cb 01       	movw	r24, r22
    148a:	89 ab       	std	Y+49, r24	; 0x31
    148c:	9a ab       	std	Y+50, r25	; 0x32
    148e:	ab ab       	std	Y+51, r26	; 0x33
    1490:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1492:	69 a9       	ldd	r22, Y+49	; 0x31
    1494:	7a a9       	ldd	r23, Y+50	; 0x32
    1496:	8b a9       	ldd	r24, Y+51	; 0x33
    1498:	9c a9       	ldd	r25, Y+52	; 0x34
    149a:	20 e0       	ldi	r18, 0x00	; 0
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	40 e8       	ldi	r20, 0x80	; 128
    14a0:	5f e3       	ldi	r21, 0x3F	; 63
    14a2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    14a6:	88 23       	and	r24, r24
    14a8:	2c f4       	brge	.+10     	; 0x14b4 <H_LCD_Vid_Int+0x1a2>
		__ticks = 1;
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	98 ab       	std	Y+48, r25	; 0x30
    14b0:	8f a7       	std	Y+47, r24	; 0x2f
    14b2:	3f c0       	rjmp	.+126    	; 0x1532 <H_LCD_Vid_Int+0x220>
	else if (__tmp > 65535)
    14b4:	69 a9       	ldd	r22, Y+49	; 0x31
    14b6:	7a a9       	ldd	r23, Y+50	; 0x32
    14b8:	8b a9       	ldd	r24, Y+51	; 0x33
    14ba:	9c a9       	ldd	r25, Y+52	; 0x34
    14bc:	20 e0       	ldi	r18, 0x00	; 0
    14be:	3f ef       	ldi	r19, 0xFF	; 255
    14c0:	4f e7       	ldi	r20, 0x7F	; 127
    14c2:	57 e4       	ldi	r21, 0x47	; 71
    14c4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    14c8:	18 16       	cp	r1, r24
    14ca:	4c f5       	brge	.+82     	; 0x151e <H_LCD_Vid_Int+0x20c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14cc:	6d a9       	ldd	r22, Y+53	; 0x35
    14ce:	7e a9       	ldd	r23, Y+54	; 0x36
    14d0:	8f a9       	ldd	r24, Y+55	; 0x37
    14d2:	98 ad       	ldd	r25, Y+56	; 0x38
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	40 e2       	ldi	r20, 0x20	; 32
    14da:	51 e4       	ldi	r21, 0x41	; 65
    14dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14e0:	dc 01       	movw	r26, r24
    14e2:	cb 01       	movw	r24, r22
    14e4:	bc 01       	movw	r22, r24
    14e6:	cd 01       	movw	r24, r26
    14e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14ec:	dc 01       	movw	r26, r24
    14ee:	cb 01       	movw	r24, r22
    14f0:	98 ab       	std	Y+48, r25	; 0x30
    14f2:	8f a7       	std	Y+47, r24	; 0x2f
    14f4:	0f c0       	rjmp	.+30     	; 0x1514 <H_LCD_Vid_Int+0x202>
    14f6:	88 ec       	ldi	r24, 0xC8	; 200
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	9e a7       	std	Y+46, r25	; 0x2e
    14fc:	8d a7       	std	Y+45, r24	; 0x2d
    14fe:	8d a5       	ldd	r24, Y+45	; 0x2d
    1500:	9e a5       	ldd	r25, Y+46	; 0x2e
    1502:	01 97       	sbiw	r24, 0x01	; 1
    1504:	f1 f7       	brne	.-4      	; 0x1502 <H_LCD_Vid_Int+0x1f0>
    1506:	9e a7       	std	Y+46, r25	; 0x2e
    1508:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    150a:	8f a5       	ldd	r24, Y+47	; 0x2f
    150c:	98 a9       	ldd	r25, Y+48	; 0x30
    150e:	01 97       	sbiw	r24, 0x01	; 1
    1510:	98 ab       	std	Y+48, r25	; 0x30
    1512:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1514:	8f a5       	ldd	r24, Y+47	; 0x2f
    1516:	98 a9       	ldd	r25, Y+48	; 0x30
    1518:	00 97       	sbiw	r24, 0x00	; 0
    151a:	69 f7       	brne	.-38     	; 0x14f6 <H_LCD_Vid_Int+0x1e4>
    151c:	14 c0       	rjmp	.+40     	; 0x1546 <H_LCD_Vid_Int+0x234>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    151e:	69 a9       	ldd	r22, Y+49	; 0x31
    1520:	7a a9       	ldd	r23, Y+50	; 0x32
    1522:	8b a9       	ldd	r24, Y+51	; 0x33
    1524:	9c a9       	ldd	r25, Y+52	; 0x34
    1526:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    152a:	dc 01       	movw	r26, r24
    152c:	cb 01       	movw	r24, r22
    152e:	98 ab       	std	Y+48, r25	; 0x30
    1530:	8f a7       	std	Y+47, r24	; 0x2f
    1532:	8f a5       	ldd	r24, Y+47	; 0x2f
    1534:	98 a9       	ldd	r25, Y+48	; 0x30
    1536:	9c a7       	std	Y+44, r25	; 0x2c
    1538:	8b a7       	std	Y+43, r24	; 0x2b
    153a:	8b a5       	ldd	r24, Y+43	; 0x2b
    153c:	9c a5       	ldd	r25, Y+44	; 0x2c
    153e:	01 97       	sbiw	r24, 0x01	; 1
    1540:	f1 f7       	brne	.-4      	; 0x153e <H_LCD_Vid_Int+0x22c>
    1542:	9c a7       	std	Y+44, r25	; 0x2c
    1544:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	H_LCD_Vid_Wrt_Com(DISPLAY_ON);
    1546:	8c e0       	ldi	r24, 0x0C	; 12
    1548:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <H_LCD_Vid_Wrt_Com>
    154c:	80 e0       	ldi	r24, 0x00	; 0
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	a0 e8       	ldi	r26, 0x80	; 128
    1552:	bf e3       	ldi	r27, 0x3F	; 63
    1554:	8f a3       	std	Y+39, r24	; 0x27
    1556:	98 a7       	std	Y+40, r25	; 0x28
    1558:	a9 a7       	std	Y+41, r26	; 0x29
    155a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    155c:	6f a1       	ldd	r22, Y+39	; 0x27
    155e:	78 a5       	ldd	r23, Y+40	; 0x28
    1560:	89 a5       	ldd	r24, Y+41	; 0x29
    1562:	9a a5       	ldd	r25, Y+42	; 0x2a
    1564:	20 e0       	ldi	r18, 0x00	; 0
    1566:	30 e0       	ldi	r19, 0x00	; 0
    1568:	4a ef       	ldi	r20, 0xFA	; 250
    156a:	54 e4       	ldi	r21, 0x44	; 68
    156c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1570:	dc 01       	movw	r26, r24
    1572:	cb 01       	movw	r24, r22
    1574:	8b a3       	std	Y+35, r24	; 0x23
    1576:	9c a3       	std	Y+36, r25	; 0x24
    1578:	ad a3       	std	Y+37, r26	; 0x25
    157a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    157c:	6b a1       	ldd	r22, Y+35	; 0x23
    157e:	7c a1       	ldd	r23, Y+36	; 0x24
    1580:	8d a1       	ldd	r24, Y+37	; 0x25
    1582:	9e a1       	ldd	r25, Y+38	; 0x26
    1584:	20 e0       	ldi	r18, 0x00	; 0
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	40 e8       	ldi	r20, 0x80	; 128
    158a:	5f e3       	ldi	r21, 0x3F	; 63
    158c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1590:	88 23       	and	r24, r24
    1592:	2c f4       	brge	.+10     	; 0x159e <H_LCD_Vid_Int+0x28c>
		__ticks = 1;
    1594:	81 e0       	ldi	r24, 0x01	; 1
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	9a a3       	std	Y+34, r25	; 0x22
    159a:	89 a3       	std	Y+33, r24	; 0x21
    159c:	3f c0       	rjmp	.+126    	; 0x161c <H_LCD_Vid_Int+0x30a>
	else if (__tmp > 65535)
    159e:	6b a1       	ldd	r22, Y+35	; 0x23
    15a0:	7c a1       	ldd	r23, Y+36	; 0x24
    15a2:	8d a1       	ldd	r24, Y+37	; 0x25
    15a4:	9e a1       	ldd	r25, Y+38	; 0x26
    15a6:	20 e0       	ldi	r18, 0x00	; 0
    15a8:	3f ef       	ldi	r19, 0xFF	; 255
    15aa:	4f e7       	ldi	r20, 0x7F	; 127
    15ac:	57 e4       	ldi	r21, 0x47	; 71
    15ae:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    15b2:	18 16       	cp	r1, r24
    15b4:	4c f5       	brge	.+82     	; 0x1608 <H_LCD_Vid_Int+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15b6:	6f a1       	ldd	r22, Y+39	; 0x27
    15b8:	78 a5       	ldd	r23, Y+40	; 0x28
    15ba:	89 a5       	ldd	r24, Y+41	; 0x29
    15bc:	9a a5       	ldd	r25, Y+42	; 0x2a
    15be:	20 e0       	ldi	r18, 0x00	; 0
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	40 e2       	ldi	r20, 0x20	; 32
    15c4:	51 e4       	ldi	r21, 0x41	; 65
    15c6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15ca:	dc 01       	movw	r26, r24
    15cc:	cb 01       	movw	r24, r22
    15ce:	bc 01       	movw	r22, r24
    15d0:	cd 01       	movw	r24, r26
    15d2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15d6:	dc 01       	movw	r26, r24
    15d8:	cb 01       	movw	r24, r22
    15da:	9a a3       	std	Y+34, r25	; 0x22
    15dc:	89 a3       	std	Y+33, r24	; 0x21
    15de:	0f c0       	rjmp	.+30     	; 0x15fe <H_LCD_Vid_Int+0x2ec>
    15e0:	88 ec       	ldi	r24, 0xC8	; 200
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	98 a3       	std	Y+32, r25	; 0x20
    15e6:	8f 8f       	std	Y+31, r24	; 0x1f
    15e8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    15ea:	98 a1       	ldd	r25, Y+32	; 0x20
    15ec:	01 97       	sbiw	r24, 0x01	; 1
    15ee:	f1 f7       	brne	.-4      	; 0x15ec <H_LCD_Vid_Int+0x2da>
    15f0:	98 a3       	std	Y+32, r25	; 0x20
    15f2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15f4:	89 a1       	ldd	r24, Y+33	; 0x21
    15f6:	9a a1       	ldd	r25, Y+34	; 0x22
    15f8:	01 97       	sbiw	r24, 0x01	; 1
    15fa:	9a a3       	std	Y+34, r25	; 0x22
    15fc:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15fe:	89 a1       	ldd	r24, Y+33	; 0x21
    1600:	9a a1       	ldd	r25, Y+34	; 0x22
    1602:	00 97       	sbiw	r24, 0x00	; 0
    1604:	69 f7       	brne	.-38     	; 0x15e0 <H_LCD_Vid_Int+0x2ce>
    1606:	14 c0       	rjmp	.+40     	; 0x1630 <H_LCD_Vid_Int+0x31e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1608:	6b a1       	ldd	r22, Y+35	; 0x23
    160a:	7c a1       	ldd	r23, Y+36	; 0x24
    160c:	8d a1       	ldd	r24, Y+37	; 0x25
    160e:	9e a1       	ldd	r25, Y+38	; 0x26
    1610:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1614:	dc 01       	movw	r26, r24
    1616:	cb 01       	movw	r24, r22
    1618:	9a a3       	std	Y+34, r25	; 0x22
    161a:	89 a3       	std	Y+33, r24	; 0x21
    161c:	89 a1       	ldd	r24, Y+33	; 0x21
    161e:	9a a1       	ldd	r25, Y+34	; 0x22
    1620:	9e 8f       	std	Y+30, r25	; 0x1e
    1622:	8d 8f       	std	Y+29, r24	; 0x1d
    1624:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1626:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1628:	01 97       	sbiw	r24, 0x01	; 1
    162a:	f1 f7       	brne	.-4      	; 0x1628 <H_LCD_Vid_Int+0x316>
    162c:	9e 8f       	std	Y+30, r25	; 0x1e
    162e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	H_LCD_Vid_Wrt_Com(CLEAR_DISPLAY);
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <H_LCD_Vid_Wrt_Com>
    1636:	80 e0       	ldi	r24, 0x00	; 0
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	a0 e0       	ldi	r26, 0x00	; 0
    163c:	b0 e4       	ldi	r27, 0x40	; 64
    163e:	89 8f       	std	Y+25, r24	; 0x19
    1640:	9a 8f       	std	Y+26, r25	; 0x1a
    1642:	ab 8f       	std	Y+27, r26	; 0x1b
    1644:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1646:	69 8d       	ldd	r22, Y+25	; 0x19
    1648:	7a 8d       	ldd	r23, Y+26	; 0x1a
    164a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    164c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    164e:	20 e0       	ldi	r18, 0x00	; 0
    1650:	30 e0       	ldi	r19, 0x00	; 0
    1652:	4a ef       	ldi	r20, 0xFA	; 250
    1654:	54 e4       	ldi	r21, 0x44	; 68
    1656:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    165a:	dc 01       	movw	r26, r24
    165c:	cb 01       	movw	r24, r22
    165e:	8d 8b       	std	Y+21, r24	; 0x15
    1660:	9e 8b       	std	Y+22, r25	; 0x16
    1662:	af 8b       	std	Y+23, r26	; 0x17
    1664:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1666:	6d 89       	ldd	r22, Y+21	; 0x15
    1668:	7e 89       	ldd	r23, Y+22	; 0x16
    166a:	8f 89       	ldd	r24, Y+23	; 0x17
    166c:	98 8d       	ldd	r25, Y+24	; 0x18
    166e:	20 e0       	ldi	r18, 0x00	; 0
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	40 e8       	ldi	r20, 0x80	; 128
    1674:	5f e3       	ldi	r21, 0x3F	; 63
    1676:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    167a:	88 23       	and	r24, r24
    167c:	2c f4       	brge	.+10     	; 0x1688 <H_LCD_Vid_Int+0x376>
		__ticks = 1;
    167e:	81 e0       	ldi	r24, 0x01	; 1
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	9c 8b       	std	Y+20, r25	; 0x14
    1684:	8b 8b       	std	Y+19, r24	; 0x13
    1686:	3f c0       	rjmp	.+126    	; 0x1706 <H_LCD_Vid_Int+0x3f4>
	else if (__tmp > 65535)
    1688:	6d 89       	ldd	r22, Y+21	; 0x15
    168a:	7e 89       	ldd	r23, Y+22	; 0x16
    168c:	8f 89       	ldd	r24, Y+23	; 0x17
    168e:	98 8d       	ldd	r25, Y+24	; 0x18
    1690:	20 e0       	ldi	r18, 0x00	; 0
    1692:	3f ef       	ldi	r19, 0xFF	; 255
    1694:	4f e7       	ldi	r20, 0x7F	; 127
    1696:	57 e4       	ldi	r21, 0x47	; 71
    1698:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    169c:	18 16       	cp	r1, r24
    169e:	4c f5       	brge	.+82     	; 0x16f2 <H_LCD_Vid_Int+0x3e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16a0:	69 8d       	ldd	r22, Y+25	; 0x19
    16a2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16a4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16a6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16a8:	20 e0       	ldi	r18, 0x00	; 0
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	40 e2       	ldi	r20, 0x20	; 32
    16ae:	51 e4       	ldi	r21, 0x41	; 65
    16b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16b4:	dc 01       	movw	r26, r24
    16b6:	cb 01       	movw	r24, r22
    16b8:	bc 01       	movw	r22, r24
    16ba:	cd 01       	movw	r24, r26
    16bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	9c 8b       	std	Y+20, r25	; 0x14
    16c6:	8b 8b       	std	Y+19, r24	; 0x13
    16c8:	0f c0       	rjmp	.+30     	; 0x16e8 <H_LCD_Vid_Int+0x3d6>
    16ca:	88 ec       	ldi	r24, 0xC8	; 200
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	9a 8b       	std	Y+18, r25	; 0x12
    16d0:	89 8b       	std	Y+17, r24	; 0x11
    16d2:	89 89       	ldd	r24, Y+17	; 0x11
    16d4:	9a 89       	ldd	r25, Y+18	; 0x12
    16d6:	01 97       	sbiw	r24, 0x01	; 1
    16d8:	f1 f7       	brne	.-4      	; 0x16d6 <H_LCD_Vid_Int+0x3c4>
    16da:	9a 8b       	std	Y+18, r25	; 0x12
    16dc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16de:	8b 89       	ldd	r24, Y+19	; 0x13
    16e0:	9c 89       	ldd	r25, Y+20	; 0x14
    16e2:	01 97       	sbiw	r24, 0x01	; 1
    16e4:	9c 8b       	std	Y+20, r25	; 0x14
    16e6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16e8:	8b 89       	ldd	r24, Y+19	; 0x13
    16ea:	9c 89       	ldd	r25, Y+20	; 0x14
    16ec:	00 97       	sbiw	r24, 0x00	; 0
    16ee:	69 f7       	brne	.-38     	; 0x16ca <H_LCD_Vid_Int+0x3b8>
    16f0:	14 c0       	rjmp	.+40     	; 0x171a <H_LCD_Vid_Int+0x408>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16f2:	6d 89       	ldd	r22, Y+21	; 0x15
    16f4:	7e 89       	ldd	r23, Y+22	; 0x16
    16f6:	8f 89       	ldd	r24, Y+23	; 0x17
    16f8:	98 8d       	ldd	r25, Y+24	; 0x18
    16fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16fe:	dc 01       	movw	r26, r24
    1700:	cb 01       	movw	r24, r22
    1702:	9c 8b       	std	Y+20, r25	; 0x14
    1704:	8b 8b       	std	Y+19, r24	; 0x13
    1706:	8b 89       	ldd	r24, Y+19	; 0x13
    1708:	9c 89       	ldd	r25, Y+20	; 0x14
    170a:	98 8b       	std	Y+16, r25	; 0x10
    170c:	8f 87       	std	Y+15, r24	; 0x0f
    170e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1710:	98 89       	ldd	r25, Y+16	; 0x10
    1712:	01 97       	sbiw	r24, 0x01	; 1
    1714:	f1 f7       	brne	.-4      	; 0x1712 <H_LCD_Vid_Int+0x400>
    1716:	98 8b       	std	Y+16, r25	; 0x10
    1718:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	H_LCD_Vid_Wrt_Com(ENTRY_MODE);
    171a:	86 e0       	ldi	r24, 0x06	; 6
    171c:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <H_LCD_Vid_Wrt_Com>
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	a0 e0       	ldi	r26, 0x00	; 0
    1726:	b0 e4       	ldi	r27, 0x40	; 64
    1728:	8b 87       	std	Y+11, r24	; 0x0b
    172a:	9c 87       	std	Y+12, r25	; 0x0c
    172c:	ad 87       	std	Y+13, r26	; 0x0d
    172e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1730:	6b 85       	ldd	r22, Y+11	; 0x0b
    1732:	7c 85       	ldd	r23, Y+12	; 0x0c
    1734:	8d 85       	ldd	r24, Y+13	; 0x0d
    1736:	9e 85       	ldd	r25, Y+14	; 0x0e
    1738:	20 e0       	ldi	r18, 0x00	; 0
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	4a ef       	ldi	r20, 0xFA	; 250
    173e:	54 e4       	ldi	r21, 0x44	; 68
    1740:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1744:	dc 01       	movw	r26, r24
    1746:	cb 01       	movw	r24, r22
    1748:	8f 83       	std	Y+7, r24	; 0x07
    174a:	98 87       	std	Y+8, r25	; 0x08
    174c:	a9 87       	std	Y+9, r26	; 0x09
    174e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1750:	6f 81       	ldd	r22, Y+7	; 0x07
    1752:	78 85       	ldd	r23, Y+8	; 0x08
    1754:	89 85       	ldd	r24, Y+9	; 0x09
    1756:	9a 85       	ldd	r25, Y+10	; 0x0a
    1758:	20 e0       	ldi	r18, 0x00	; 0
    175a:	30 e0       	ldi	r19, 0x00	; 0
    175c:	40 e8       	ldi	r20, 0x80	; 128
    175e:	5f e3       	ldi	r21, 0x3F	; 63
    1760:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1764:	88 23       	and	r24, r24
    1766:	2c f4       	brge	.+10     	; 0x1772 <H_LCD_Vid_Int+0x460>
		__ticks = 1;
    1768:	81 e0       	ldi	r24, 0x01	; 1
    176a:	90 e0       	ldi	r25, 0x00	; 0
    176c:	9e 83       	std	Y+6, r25	; 0x06
    176e:	8d 83       	std	Y+5, r24	; 0x05
    1770:	3f c0       	rjmp	.+126    	; 0x17f0 <H_LCD_Vid_Int+0x4de>
	else if (__tmp > 65535)
    1772:	6f 81       	ldd	r22, Y+7	; 0x07
    1774:	78 85       	ldd	r23, Y+8	; 0x08
    1776:	89 85       	ldd	r24, Y+9	; 0x09
    1778:	9a 85       	ldd	r25, Y+10	; 0x0a
    177a:	20 e0       	ldi	r18, 0x00	; 0
    177c:	3f ef       	ldi	r19, 0xFF	; 255
    177e:	4f e7       	ldi	r20, 0x7F	; 127
    1780:	57 e4       	ldi	r21, 0x47	; 71
    1782:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1786:	18 16       	cp	r1, r24
    1788:	4c f5       	brge	.+82     	; 0x17dc <H_LCD_Vid_Int+0x4ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    178a:	6b 85       	ldd	r22, Y+11	; 0x0b
    178c:	7c 85       	ldd	r23, Y+12	; 0x0c
    178e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1790:	9e 85       	ldd	r25, Y+14	; 0x0e
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	40 e2       	ldi	r20, 0x20	; 32
    1798:	51 e4       	ldi	r21, 0x41	; 65
    179a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    179e:	dc 01       	movw	r26, r24
    17a0:	cb 01       	movw	r24, r22
    17a2:	bc 01       	movw	r22, r24
    17a4:	cd 01       	movw	r24, r26
    17a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17aa:	dc 01       	movw	r26, r24
    17ac:	cb 01       	movw	r24, r22
    17ae:	9e 83       	std	Y+6, r25	; 0x06
    17b0:	8d 83       	std	Y+5, r24	; 0x05
    17b2:	0f c0       	rjmp	.+30     	; 0x17d2 <H_LCD_Vid_Int+0x4c0>
    17b4:	88 ec       	ldi	r24, 0xC8	; 200
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	9c 83       	std	Y+4, r25	; 0x04
    17ba:	8b 83       	std	Y+3, r24	; 0x03
    17bc:	8b 81       	ldd	r24, Y+3	; 0x03
    17be:	9c 81       	ldd	r25, Y+4	; 0x04
    17c0:	01 97       	sbiw	r24, 0x01	; 1
    17c2:	f1 f7       	brne	.-4      	; 0x17c0 <H_LCD_Vid_Int+0x4ae>
    17c4:	9c 83       	std	Y+4, r25	; 0x04
    17c6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17c8:	8d 81       	ldd	r24, Y+5	; 0x05
    17ca:	9e 81       	ldd	r25, Y+6	; 0x06
    17cc:	01 97       	sbiw	r24, 0x01	; 1
    17ce:	9e 83       	std	Y+6, r25	; 0x06
    17d0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17d2:	8d 81       	ldd	r24, Y+5	; 0x05
    17d4:	9e 81       	ldd	r25, Y+6	; 0x06
    17d6:	00 97       	sbiw	r24, 0x00	; 0
    17d8:	69 f7       	brne	.-38     	; 0x17b4 <H_LCD_Vid_Int+0x4a2>
    17da:	14 c0       	rjmp	.+40     	; 0x1804 <H_LCD_Vid_Int+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17dc:	6f 81       	ldd	r22, Y+7	; 0x07
    17de:	78 85       	ldd	r23, Y+8	; 0x08
    17e0:	89 85       	ldd	r24, Y+9	; 0x09
    17e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    17e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17e8:	dc 01       	movw	r26, r24
    17ea:	cb 01       	movw	r24, r22
    17ec:	9e 83       	std	Y+6, r25	; 0x06
    17ee:	8d 83       	std	Y+5, r24	; 0x05
    17f0:	8d 81       	ldd	r24, Y+5	; 0x05
    17f2:	9e 81       	ldd	r25, Y+6	; 0x06
    17f4:	9a 83       	std	Y+2, r25	; 0x02
    17f6:	89 83       	std	Y+1, r24	; 0x01
    17f8:	89 81       	ldd	r24, Y+1	; 0x01
    17fa:	9a 81       	ldd	r25, Y+2	; 0x02
    17fc:	01 97       	sbiw	r24, 0x01	; 1
    17fe:	f1 f7       	brne	.-4      	; 0x17fc <H_LCD_Vid_Int+0x4ea>
    1800:	9a 83       	std	Y+2, r25	; 0x02
    1802:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

}
    1804:	ca 5b       	subi	r28, 0xBA	; 186
    1806:	df 4f       	sbci	r29, 0xFF	; 255
    1808:	0f b6       	in	r0, 0x3f	; 63
    180a:	f8 94       	cli
    180c:	de bf       	out	0x3e, r29	; 62
    180e:	0f be       	out	0x3f, r0	; 63
    1810:	cd bf       	out	0x3d, r28	; 61
    1812:	cf 91       	pop	r28
    1814:	df 91       	pop	r29
    1816:	1f 91       	pop	r17
    1818:	0f 91       	pop	r16
    181a:	08 95       	ret

0000181c <H_LCD_Vid_Wrt_CHr>:

/****TO WRITE on lcd you should determine if you want write command (Rs=0) or write data (Rs=1)****/

void H_LCD_Vid_Wrt_CHr(u8 Copy_u8_chr)
{
    181c:	df 93       	push	r29
    181e:	cf 93       	push	r28
    1820:	cd b7       	in	r28, 0x3d	; 61
    1822:	de b7       	in	r29, 0x3e	; 62
    1824:	ab 97       	sbiw	r28, 0x2b	; 43
    1826:	0f b6       	in	r0, 0x3f	; 63
    1828:	f8 94       	cli
    182a:	de bf       	out	0x3e, r29	; 62
    182c:	0f be       	out	0x3f, r0	; 63
    182e:	cd bf       	out	0x3d, r28	; 61
    1830:	8b a7       	std	Y+43, r24	; 0x2b
	/*SET RS AS HIGH FOR DATA REGISTER */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RS,M_DIO_HIGH);
    1832:	81 e0       	ldi	r24, 0x01	; 1
    1834:	60 e0       	ldi	r22, 0x00	; 0
    1836:	41 e0       	ldi	r20, 0x01	; 1
    1838:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>

	/* SET RW PIN AS LOW TO WRITE */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RW,M_DIO_LOW);
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	61 e0       	ldi	r22, 0x01	; 1
    1840:	40 e0       	ldi	r20, 0x00	; 0
    1842:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>


	/********to write data E must in falling and send data*********/

	/*SET E AS HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1846:	81 e0       	ldi	r24, 0x01	; 1
    1848:	62 e0       	ldi	r22, 0x02	; 2
    184a:	41 e0       	ldi	r20, 0x01	; 1
    184c:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>

	/*SEND DATA */
	M_DIO_Vid_WrtPortVal(LCD_Data_Port,Copy_u8_chr);
    1850:	83 e0       	ldi	r24, 0x03	; 3
    1852:	6b a5       	ldd	r22, Y+43	; 0x2b
    1854:	0e 94 06 09 	call	0x120c	; 0x120c <M_DIO_Vid_WrtPortVal>
    1858:	80 e0       	ldi	r24, 0x00	; 0
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	a0 e2       	ldi	r26, 0x20	; 32
    185e:	b1 e4       	ldi	r27, 0x41	; 65
    1860:	8f a3       	std	Y+39, r24	; 0x27
    1862:	98 a7       	std	Y+40, r25	; 0x28
    1864:	a9 a7       	std	Y+41, r26	; 0x29
    1866:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1868:	6f a1       	ldd	r22, Y+39	; 0x27
    186a:	78 a5       	ldd	r23, Y+40	; 0x28
    186c:	89 a5       	ldd	r24, Y+41	; 0x29
    186e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1870:	20 e0       	ldi	r18, 0x00	; 0
    1872:	30 e0       	ldi	r19, 0x00	; 0
    1874:	4a ef       	ldi	r20, 0xFA	; 250
    1876:	54 e4       	ldi	r21, 0x44	; 68
    1878:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    187c:	dc 01       	movw	r26, r24
    187e:	cb 01       	movw	r24, r22
    1880:	8b a3       	std	Y+35, r24	; 0x23
    1882:	9c a3       	std	Y+36, r25	; 0x24
    1884:	ad a3       	std	Y+37, r26	; 0x25
    1886:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1888:	6b a1       	ldd	r22, Y+35	; 0x23
    188a:	7c a1       	ldd	r23, Y+36	; 0x24
    188c:	8d a1       	ldd	r24, Y+37	; 0x25
    188e:	9e a1       	ldd	r25, Y+38	; 0x26
    1890:	20 e0       	ldi	r18, 0x00	; 0
    1892:	30 e0       	ldi	r19, 0x00	; 0
    1894:	40 e8       	ldi	r20, 0x80	; 128
    1896:	5f e3       	ldi	r21, 0x3F	; 63
    1898:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    189c:	88 23       	and	r24, r24
    189e:	2c f4       	brge	.+10     	; 0x18aa <H_LCD_Vid_Wrt_CHr+0x8e>
		__ticks = 1;
    18a0:	81 e0       	ldi	r24, 0x01	; 1
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	9a a3       	std	Y+34, r25	; 0x22
    18a6:	89 a3       	std	Y+33, r24	; 0x21
    18a8:	3f c0       	rjmp	.+126    	; 0x1928 <H_LCD_Vid_Wrt_CHr+0x10c>
	else if (__tmp > 65535)
    18aa:	6b a1       	ldd	r22, Y+35	; 0x23
    18ac:	7c a1       	ldd	r23, Y+36	; 0x24
    18ae:	8d a1       	ldd	r24, Y+37	; 0x25
    18b0:	9e a1       	ldd	r25, Y+38	; 0x26
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	3f ef       	ldi	r19, 0xFF	; 255
    18b6:	4f e7       	ldi	r20, 0x7F	; 127
    18b8:	57 e4       	ldi	r21, 0x47	; 71
    18ba:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    18be:	18 16       	cp	r1, r24
    18c0:	4c f5       	brge	.+82     	; 0x1914 <H_LCD_Vid_Wrt_CHr+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18c2:	6f a1       	ldd	r22, Y+39	; 0x27
    18c4:	78 a5       	ldd	r23, Y+40	; 0x28
    18c6:	89 a5       	ldd	r24, Y+41	; 0x29
    18c8:	9a a5       	ldd	r25, Y+42	; 0x2a
    18ca:	20 e0       	ldi	r18, 0x00	; 0
    18cc:	30 e0       	ldi	r19, 0x00	; 0
    18ce:	40 e2       	ldi	r20, 0x20	; 32
    18d0:	51 e4       	ldi	r21, 0x41	; 65
    18d2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18d6:	dc 01       	movw	r26, r24
    18d8:	cb 01       	movw	r24, r22
    18da:	bc 01       	movw	r22, r24
    18dc:	cd 01       	movw	r24, r26
    18de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18e2:	dc 01       	movw	r26, r24
    18e4:	cb 01       	movw	r24, r22
    18e6:	9a a3       	std	Y+34, r25	; 0x22
    18e8:	89 a3       	std	Y+33, r24	; 0x21
    18ea:	0f c0       	rjmp	.+30     	; 0x190a <H_LCD_Vid_Wrt_CHr+0xee>
    18ec:	88 ec       	ldi	r24, 0xC8	; 200
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	98 a3       	std	Y+32, r25	; 0x20
    18f2:	8f 8f       	std	Y+31, r24	; 0x1f
    18f4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    18f6:	98 a1       	ldd	r25, Y+32	; 0x20
    18f8:	01 97       	sbiw	r24, 0x01	; 1
    18fa:	f1 f7       	brne	.-4      	; 0x18f8 <H_LCD_Vid_Wrt_CHr+0xdc>
    18fc:	98 a3       	std	Y+32, r25	; 0x20
    18fe:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1900:	89 a1       	ldd	r24, Y+33	; 0x21
    1902:	9a a1       	ldd	r25, Y+34	; 0x22
    1904:	01 97       	sbiw	r24, 0x01	; 1
    1906:	9a a3       	std	Y+34, r25	; 0x22
    1908:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    190a:	89 a1       	ldd	r24, Y+33	; 0x21
    190c:	9a a1       	ldd	r25, Y+34	; 0x22
    190e:	00 97       	sbiw	r24, 0x00	; 0
    1910:	69 f7       	brne	.-38     	; 0x18ec <H_LCD_Vid_Wrt_CHr+0xd0>
    1912:	14 c0       	rjmp	.+40     	; 0x193c <H_LCD_Vid_Wrt_CHr+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1914:	6b a1       	ldd	r22, Y+35	; 0x23
    1916:	7c a1       	ldd	r23, Y+36	; 0x24
    1918:	8d a1       	ldd	r24, Y+37	; 0x25
    191a:	9e a1       	ldd	r25, Y+38	; 0x26
    191c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1920:	dc 01       	movw	r26, r24
    1922:	cb 01       	movw	r24, r22
    1924:	9a a3       	std	Y+34, r25	; 0x22
    1926:	89 a3       	std	Y+33, r24	; 0x21
    1928:	89 a1       	ldd	r24, Y+33	; 0x21
    192a:	9a a1       	ldd	r25, Y+34	; 0x22
    192c:	9e 8f       	std	Y+30, r25	; 0x1e
    192e:	8d 8f       	std	Y+29, r24	; 0x1d
    1930:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1932:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1934:	01 97       	sbiw	r24, 0x01	; 1
    1936:	f1 f7       	brne	.-4      	; 0x1934 <H_LCD_Vid_Wrt_CHr+0x118>
    1938:	9e 8f       	std	Y+30, r25	; 0x1e
    193a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);

	/*set E low*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_LOW);
    193c:	81 e0       	ldi	r24, 0x01	; 1
    193e:	62 e0       	ldi	r22, 0x02	; 2
    1940:	40 e0       	ldi	r20, 0x00	; 0
    1942:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>
    1946:	80 e0       	ldi	r24, 0x00	; 0
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	a0 e2       	ldi	r26, 0x20	; 32
    194c:	b1 e4       	ldi	r27, 0x41	; 65
    194e:	89 8f       	std	Y+25, r24	; 0x19
    1950:	9a 8f       	std	Y+26, r25	; 0x1a
    1952:	ab 8f       	std	Y+27, r26	; 0x1b
    1954:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1956:	69 8d       	ldd	r22, Y+25	; 0x19
    1958:	7a 8d       	ldd	r23, Y+26	; 0x1a
    195a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    195c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    195e:	20 e0       	ldi	r18, 0x00	; 0
    1960:	30 e0       	ldi	r19, 0x00	; 0
    1962:	4a ef       	ldi	r20, 0xFA	; 250
    1964:	54 e4       	ldi	r21, 0x44	; 68
    1966:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    196a:	dc 01       	movw	r26, r24
    196c:	cb 01       	movw	r24, r22
    196e:	8d 8b       	std	Y+21, r24	; 0x15
    1970:	9e 8b       	std	Y+22, r25	; 0x16
    1972:	af 8b       	std	Y+23, r26	; 0x17
    1974:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1976:	6d 89       	ldd	r22, Y+21	; 0x15
    1978:	7e 89       	ldd	r23, Y+22	; 0x16
    197a:	8f 89       	ldd	r24, Y+23	; 0x17
    197c:	98 8d       	ldd	r25, Y+24	; 0x18
    197e:	20 e0       	ldi	r18, 0x00	; 0
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	40 e8       	ldi	r20, 0x80	; 128
    1984:	5f e3       	ldi	r21, 0x3F	; 63
    1986:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    198a:	88 23       	and	r24, r24
    198c:	2c f4       	brge	.+10     	; 0x1998 <H_LCD_Vid_Wrt_CHr+0x17c>
		__ticks = 1;
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	9c 8b       	std	Y+20, r25	; 0x14
    1994:	8b 8b       	std	Y+19, r24	; 0x13
    1996:	3f c0       	rjmp	.+126    	; 0x1a16 <H_LCD_Vid_Wrt_CHr+0x1fa>
	else if (__tmp > 65535)
    1998:	6d 89       	ldd	r22, Y+21	; 0x15
    199a:	7e 89       	ldd	r23, Y+22	; 0x16
    199c:	8f 89       	ldd	r24, Y+23	; 0x17
    199e:	98 8d       	ldd	r25, Y+24	; 0x18
    19a0:	20 e0       	ldi	r18, 0x00	; 0
    19a2:	3f ef       	ldi	r19, 0xFF	; 255
    19a4:	4f e7       	ldi	r20, 0x7F	; 127
    19a6:	57 e4       	ldi	r21, 0x47	; 71
    19a8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    19ac:	18 16       	cp	r1, r24
    19ae:	4c f5       	brge	.+82     	; 0x1a02 <H_LCD_Vid_Wrt_CHr+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19b0:	69 8d       	ldd	r22, Y+25	; 0x19
    19b2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    19b4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19b6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	40 e2       	ldi	r20, 0x20	; 32
    19be:	51 e4       	ldi	r21, 0x41	; 65
    19c0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19c4:	dc 01       	movw	r26, r24
    19c6:	cb 01       	movw	r24, r22
    19c8:	bc 01       	movw	r22, r24
    19ca:	cd 01       	movw	r24, r26
    19cc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19d0:	dc 01       	movw	r26, r24
    19d2:	cb 01       	movw	r24, r22
    19d4:	9c 8b       	std	Y+20, r25	; 0x14
    19d6:	8b 8b       	std	Y+19, r24	; 0x13
    19d8:	0f c0       	rjmp	.+30     	; 0x19f8 <H_LCD_Vid_Wrt_CHr+0x1dc>
    19da:	88 ec       	ldi	r24, 0xC8	; 200
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	9a 8b       	std	Y+18, r25	; 0x12
    19e0:	89 8b       	std	Y+17, r24	; 0x11
    19e2:	89 89       	ldd	r24, Y+17	; 0x11
    19e4:	9a 89       	ldd	r25, Y+18	; 0x12
    19e6:	01 97       	sbiw	r24, 0x01	; 1
    19e8:	f1 f7       	brne	.-4      	; 0x19e6 <H_LCD_Vid_Wrt_CHr+0x1ca>
    19ea:	9a 8b       	std	Y+18, r25	; 0x12
    19ec:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ee:	8b 89       	ldd	r24, Y+19	; 0x13
    19f0:	9c 89       	ldd	r25, Y+20	; 0x14
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	9c 8b       	std	Y+20, r25	; 0x14
    19f6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19f8:	8b 89       	ldd	r24, Y+19	; 0x13
    19fa:	9c 89       	ldd	r25, Y+20	; 0x14
    19fc:	00 97       	sbiw	r24, 0x00	; 0
    19fe:	69 f7       	brne	.-38     	; 0x19da <H_LCD_Vid_Wrt_CHr+0x1be>
    1a00:	14 c0       	rjmp	.+40     	; 0x1a2a <H_LCD_Vid_Wrt_CHr+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a02:	6d 89       	ldd	r22, Y+21	; 0x15
    1a04:	7e 89       	ldd	r23, Y+22	; 0x16
    1a06:	8f 89       	ldd	r24, Y+23	; 0x17
    1a08:	98 8d       	ldd	r25, Y+24	; 0x18
    1a0a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a0e:	dc 01       	movw	r26, r24
    1a10:	cb 01       	movw	r24, r22
    1a12:	9c 8b       	std	Y+20, r25	; 0x14
    1a14:	8b 8b       	std	Y+19, r24	; 0x13
    1a16:	8b 89       	ldd	r24, Y+19	; 0x13
    1a18:	9c 89       	ldd	r25, Y+20	; 0x14
    1a1a:	98 8b       	std	Y+16, r25	; 0x10
    1a1c:	8f 87       	std	Y+15, r24	; 0x0f
    1a1e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a20:	98 89       	ldd	r25, Y+16	; 0x10
    1a22:	01 97       	sbiw	r24, 0x01	; 1
    1a24:	f1 f7       	brne	.-4      	; 0x1a22 <H_LCD_Vid_Wrt_CHr+0x206>
    1a26:	98 8b       	std	Y+16, r25	; 0x10
    1a28:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);

	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1a2a:	81 e0       	ldi	r24, 0x01	; 1
    1a2c:	62 e0       	ldi	r22, 0x02	; 2
    1a2e:	41 e0       	ldi	r20, 0x01	; 1
    1a30:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>
    1a34:	80 e0       	ldi	r24, 0x00	; 0
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	a0 e2       	ldi	r26, 0x20	; 32
    1a3a:	b1 e4       	ldi	r27, 0x41	; 65
    1a3c:	8b 87       	std	Y+11, r24	; 0x0b
    1a3e:	9c 87       	std	Y+12, r25	; 0x0c
    1a40:	ad 87       	std	Y+13, r26	; 0x0d
    1a42:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a44:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a46:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a48:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a4a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a4c:	20 e0       	ldi	r18, 0x00	; 0
    1a4e:	30 e0       	ldi	r19, 0x00	; 0
    1a50:	4a ef       	ldi	r20, 0xFA	; 250
    1a52:	54 e4       	ldi	r21, 0x44	; 68
    1a54:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a58:	dc 01       	movw	r26, r24
    1a5a:	cb 01       	movw	r24, r22
    1a5c:	8f 83       	std	Y+7, r24	; 0x07
    1a5e:	98 87       	std	Y+8, r25	; 0x08
    1a60:	a9 87       	std	Y+9, r26	; 0x09
    1a62:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a64:	6f 81       	ldd	r22, Y+7	; 0x07
    1a66:	78 85       	ldd	r23, Y+8	; 0x08
    1a68:	89 85       	ldd	r24, Y+9	; 0x09
    1a6a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a6c:	20 e0       	ldi	r18, 0x00	; 0
    1a6e:	30 e0       	ldi	r19, 0x00	; 0
    1a70:	40 e8       	ldi	r20, 0x80	; 128
    1a72:	5f e3       	ldi	r21, 0x3F	; 63
    1a74:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a78:	88 23       	and	r24, r24
    1a7a:	2c f4       	brge	.+10     	; 0x1a86 <H_LCD_Vid_Wrt_CHr+0x26a>
		__ticks = 1;
    1a7c:	81 e0       	ldi	r24, 0x01	; 1
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	9e 83       	std	Y+6, r25	; 0x06
    1a82:	8d 83       	std	Y+5, r24	; 0x05
    1a84:	3f c0       	rjmp	.+126    	; 0x1b04 <H_LCD_Vid_Wrt_CHr+0x2e8>
	else if (__tmp > 65535)
    1a86:	6f 81       	ldd	r22, Y+7	; 0x07
    1a88:	78 85       	ldd	r23, Y+8	; 0x08
    1a8a:	89 85       	ldd	r24, Y+9	; 0x09
    1a8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	3f ef       	ldi	r19, 0xFF	; 255
    1a92:	4f e7       	ldi	r20, 0x7F	; 127
    1a94:	57 e4       	ldi	r21, 0x47	; 71
    1a96:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1a9a:	18 16       	cp	r1, r24
    1a9c:	4c f5       	brge	.+82     	; 0x1af0 <H_LCD_Vid_Wrt_CHr+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a9e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1aa0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1aa2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1aa4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	30 e0       	ldi	r19, 0x00	; 0
    1aaa:	40 e2       	ldi	r20, 0x20	; 32
    1aac:	51 e4       	ldi	r21, 0x41	; 65
    1aae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ab2:	dc 01       	movw	r26, r24
    1ab4:	cb 01       	movw	r24, r22
    1ab6:	bc 01       	movw	r22, r24
    1ab8:	cd 01       	movw	r24, r26
    1aba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1abe:	dc 01       	movw	r26, r24
    1ac0:	cb 01       	movw	r24, r22
    1ac2:	9e 83       	std	Y+6, r25	; 0x06
    1ac4:	8d 83       	std	Y+5, r24	; 0x05
    1ac6:	0f c0       	rjmp	.+30     	; 0x1ae6 <H_LCD_Vid_Wrt_CHr+0x2ca>
    1ac8:	88 ec       	ldi	r24, 0xC8	; 200
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	9c 83       	std	Y+4, r25	; 0x04
    1ace:	8b 83       	std	Y+3, r24	; 0x03
    1ad0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ad2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ad4:	01 97       	sbiw	r24, 0x01	; 1
    1ad6:	f1 f7       	brne	.-4      	; 0x1ad4 <H_LCD_Vid_Wrt_CHr+0x2b8>
    1ad8:	9c 83       	std	Y+4, r25	; 0x04
    1ada:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1adc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ade:	9e 81       	ldd	r25, Y+6	; 0x06
    1ae0:	01 97       	sbiw	r24, 0x01	; 1
    1ae2:	9e 83       	std	Y+6, r25	; 0x06
    1ae4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ae6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae8:	9e 81       	ldd	r25, Y+6	; 0x06
    1aea:	00 97       	sbiw	r24, 0x00	; 0
    1aec:	69 f7       	brne	.-38     	; 0x1ac8 <H_LCD_Vid_Wrt_CHr+0x2ac>
    1aee:	14 c0       	rjmp	.+40     	; 0x1b18 <H_LCD_Vid_Wrt_CHr+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1af0:	6f 81       	ldd	r22, Y+7	; 0x07
    1af2:	78 85       	ldd	r23, Y+8	; 0x08
    1af4:	89 85       	ldd	r24, Y+9	; 0x09
    1af6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1afc:	dc 01       	movw	r26, r24
    1afe:	cb 01       	movw	r24, r22
    1b00:	9e 83       	std	Y+6, r25	; 0x06
    1b02:	8d 83       	std	Y+5, r24	; 0x05
    1b04:	8d 81       	ldd	r24, Y+5	; 0x05
    1b06:	9e 81       	ldd	r25, Y+6	; 0x06
    1b08:	9a 83       	std	Y+2, r25	; 0x02
    1b0a:	89 83       	std	Y+1, r24	; 0x01
    1b0c:	89 81       	ldd	r24, Y+1	; 0x01
    1b0e:	9a 81       	ldd	r25, Y+2	; 0x02
    1b10:	01 97       	sbiw	r24, 0x01	; 1
    1b12:	f1 f7       	brne	.-4      	; 0x1b10 <H_LCD_Vid_Wrt_CHr+0x2f4>
    1b14:	9a 83       	std	Y+2, r25	; 0x02
    1b16:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    1b18:	ab 96       	adiw	r28, 0x2b	; 43
    1b1a:	0f b6       	in	r0, 0x3f	; 63
    1b1c:	f8 94       	cli
    1b1e:	de bf       	out	0x3e, r29	; 62
    1b20:	0f be       	out	0x3f, r0	; 63
    1b22:	cd bf       	out	0x3d, r28	; 61
    1b24:	cf 91       	pop	r28
    1b26:	df 91       	pop	r29
    1b28:	08 95       	ret

00001b2a <H_LCD_Vid_Wrt_Str>:

void H_LCD_Vid_Wrt_Str(u8 *Ptr_u8_str)
{
    1b2a:	df 93       	push	r29
    1b2c:	cf 93       	push	r28
    1b2e:	00 d0       	rcall	.+0      	; 0x1b30 <H_LCD_Vid_Wrt_Str+0x6>
    1b30:	0f 92       	push	r0
    1b32:	cd b7       	in	r28, 0x3d	; 61
    1b34:	de b7       	in	r29, 0x3e	; 62
    1b36:	9b 83       	std	Y+3, r25	; 0x03
    1b38:	8a 83       	std	Y+2, r24	; 0x02
	u8 local_u8_counter=0;
    1b3a:	19 82       	std	Y+1, r1	; 0x01
    1b3c:	0e c0       	rjmp	.+28     	; 0x1b5a <H_LCD_Vid_Wrt_Str+0x30>
	while(Ptr_u8_str[local_u8_counter]!= '\0')
	{
		H_LCD_Vid_Wrt_CHr(Ptr_u8_str[local_u8_counter]);
    1b3e:	89 81       	ldd	r24, Y+1	; 0x01
    1b40:	28 2f       	mov	r18, r24
    1b42:	30 e0       	ldi	r19, 0x00	; 0
    1b44:	8a 81       	ldd	r24, Y+2	; 0x02
    1b46:	9b 81       	ldd	r25, Y+3	; 0x03
    1b48:	fc 01       	movw	r30, r24
    1b4a:	e2 0f       	add	r30, r18
    1b4c:	f3 1f       	adc	r31, r19
    1b4e:	80 81       	ld	r24, Z
    1b50:	0e 94 0e 0c 	call	0x181c	; 0x181c <H_LCD_Vid_Wrt_CHr>
		local_u8_counter++;
    1b54:	89 81       	ldd	r24, Y+1	; 0x01
    1b56:	8f 5f       	subi	r24, 0xFF	; 255
    1b58:	89 83       	std	Y+1, r24	; 0x01
}

void H_LCD_Vid_Wrt_Str(u8 *Ptr_u8_str)
{
	u8 local_u8_counter=0;
	while(Ptr_u8_str[local_u8_counter]!= '\0')
    1b5a:	89 81       	ldd	r24, Y+1	; 0x01
    1b5c:	28 2f       	mov	r18, r24
    1b5e:	30 e0       	ldi	r19, 0x00	; 0
    1b60:	8a 81       	ldd	r24, Y+2	; 0x02
    1b62:	9b 81       	ldd	r25, Y+3	; 0x03
    1b64:	fc 01       	movw	r30, r24
    1b66:	e2 0f       	add	r30, r18
    1b68:	f3 1f       	adc	r31, r19
    1b6a:	80 81       	ld	r24, Z
    1b6c:	88 23       	and	r24, r24
    1b6e:	39 f7       	brne	.-50     	; 0x1b3e <H_LCD_Vid_Wrt_Str+0x14>
	{
		H_LCD_Vid_Wrt_CHr(Ptr_u8_str[local_u8_counter]);
		local_u8_counter++;
	}
}
    1b70:	0f 90       	pop	r0
    1b72:	0f 90       	pop	r0
    1b74:	0f 90       	pop	r0
    1b76:	cf 91       	pop	r28
    1b78:	df 91       	pop	r29
    1b7a:	08 95       	ret

00001b7c <H_LCD_Vid_Wrt_Com>:

/****TO WRITE on lcd you should determine if you want write command (Rs=0) or write data (Rs=1)****/
void H_LCD_Vid_Wrt_Com(u8 Copy_u8_Com)
{
    1b7c:	df 93       	push	r29
    1b7e:	cf 93       	push	r28
    1b80:	cd b7       	in	r28, 0x3d	; 61
    1b82:	de b7       	in	r29, 0x3e	; 62
    1b84:	ab 97       	sbiw	r28, 0x2b	; 43
    1b86:	0f b6       	in	r0, 0x3f	; 63
    1b88:	f8 94       	cli
    1b8a:	de bf       	out	0x3e, r29	; 62
    1b8c:	0f be       	out	0x3f, r0	; 63
    1b8e:	cd bf       	out	0x3d, r28	; 61
    1b90:	8b a7       	std	Y+43, r24	; 0x2b
	/*SET RS AS HIGH FOR DATA REGISTER */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RS,M_DIO_LOW);
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	60 e0       	ldi	r22, 0x00	; 0
    1b96:	40 e0       	ldi	r20, 0x00	; 0
    1b98:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>

	/* SET RW PIN AS LOW TO WRITE */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RW,M_DIO_LOW);
    1b9c:	81 e0       	ldi	r24, 0x01	; 1
    1b9e:	61 e0       	ldi	r22, 0x01	; 1
    1ba0:	40 e0       	ldi	r20, 0x00	; 0
    1ba2:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>

	/*SET E AS HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1ba6:	81 e0       	ldi	r24, 0x01	; 1
    1ba8:	62 e0       	ldi	r22, 0x02	; 2
    1baa:	41 e0       	ldi	r20, 0x01	; 1
    1bac:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>

	/*SEND DATA */
	M_DIO_Vid_WrtPortVal(LCD_Data_Port,Copy_u8_Com);
    1bb0:	83 e0       	ldi	r24, 0x03	; 3
    1bb2:	6b a5       	ldd	r22, Y+43	; 0x2b
    1bb4:	0e 94 06 09 	call	0x120c	; 0x120c <M_DIO_Vid_WrtPortVal>
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	a0 e2       	ldi	r26, 0x20	; 32
    1bbe:	b1 e4       	ldi	r27, 0x41	; 65
    1bc0:	8f a3       	std	Y+39, r24	; 0x27
    1bc2:	98 a7       	std	Y+40, r25	; 0x28
    1bc4:	a9 a7       	std	Y+41, r26	; 0x29
    1bc6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bc8:	6f a1       	ldd	r22, Y+39	; 0x27
    1bca:	78 a5       	ldd	r23, Y+40	; 0x28
    1bcc:	89 a5       	ldd	r24, Y+41	; 0x29
    1bce:	9a a5       	ldd	r25, Y+42	; 0x2a
    1bd0:	20 e0       	ldi	r18, 0x00	; 0
    1bd2:	30 e0       	ldi	r19, 0x00	; 0
    1bd4:	4a ef       	ldi	r20, 0xFA	; 250
    1bd6:	54 e4       	ldi	r21, 0x44	; 68
    1bd8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bdc:	dc 01       	movw	r26, r24
    1bde:	cb 01       	movw	r24, r22
    1be0:	8b a3       	std	Y+35, r24	; 0x23
    1be2:	9c a3       	std	Y+36, r25	; 0x24
    1be4:	ad a3       	std	Y+37, r26	; 0x25
    1be6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1be8:	6b a1       	ldd	r22, Y+35	; 0x23
    1bea:	7c a1       	ldd	r23, Y+36	; 0x24
    1bec:	8d a1       	ldd	r24, Y+37	; 0x25
    1bee:	9e a1       	ldd	r25, Y+38	; 0x26
    1bf0:	20 e0       	ldi	r18, 0x00	; 0
    1bf2:	30 e0       	ldi	r19, 0x00	; 0
    1bf4:	40 e8       	ldi	r20, 0x80	; 128
    1bf6:	5f e3       	ldi	r21, 0x3F	; 63
    1bf8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1bfc:	88 23       	and	r24, r24
    1bfe:	2c f4       	brge	.+10     	; 0x1c0a <H_LCD_Vid_Wrt_Com+0x8e>
		__ticks = 1;
    1c00:	81 e0       	ldi	r24, 0x01	; 1
    1c02:	90 e0       	ldi	r25, 0x00	; 0
    1c04:	9a a3       	std	Y+34, r25	; 0x22
    1c06:	89 a3       	std	Y+33, r24	; 0x21
    1c08:	3f c0       	rjmp	.+126    	; 0x1c88 <H_LCD_Vid_Wrt_Com+0x10c>
	else if (__tmp > 65535)
    1c0a:	6b a1       	ldd	r22, Y+35	; 0x23
    1c0c:	7c a1       	ldd	r23, Y+36	; 0x24
    1c0e:	8d a1       	ldd	r24, Y+37	; 0x25
    1c10:	9e a1       	ldd	r25, Y+38	; 0x26
    1c12:	20 e0       	ldi	r18, 0x00	; 0
    1c14:	3f ef       	ldi	r19, 0xFF	; 255
    1c16:	4f e7       	ldi	r20, 0x7F	; 127
    1c18:	57 e4       	ldi	r21, 0x47	; 71
    1c1a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c1e:	18 16       	cp	r1, r24
    1c20:	4c f5       	brge	.+82     	; 0x1c74 <H_LCD_Vid_Wrt_Com+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c22:	6f a1       	ldd	r22, Y+39	; 0x27
    1c24:	78 a5       	ldd	r23, Y+40	; 0x28
    1c26:	89 a5       	ldd	r24, Y+41	; 0x29
    1c28:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c2a:	20 e0       	ldi	r18, 0x00	; 0
    1c2c:	30 e0       	ldi	r19, 0x00	; 0
    1c2e:	40 e2       	ldi	r20, 0x20	; 32
    1c30:	51 e4       	ldi	r21, 0x41	; 65
    1c32:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c36:	dc 01       	movw	r26, r24
    1c38:	cb 01       	movw	r24, r22
    1c3a:	bc 01       	movw	r22, r24
    1c3c:	cd 01       	movw	r24, r26
    1c3e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c42:	dc 01       	movw	r26, r24
    1c44:	cb 01       	movw	r24, r22
    1c46:	9a a3       	std	Y+34, r25	; 0x22
    1c48:	89 a3       	std	Y+33, r24	; 0x21
    1c4a:	0f c0       	rjmp	.+30     	; 0x1c6a <H_LCD_Vid_Wrt_Com+0xee>
    1c4c:	88 ec       	ldi	r24, 0xC8	; 200
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	98 a3       	std	Y+32, r25	; 0x20
    1c52:	8f 8f       	std	Y+31, r24	; 0x1f
    1c54:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c56:	98 a1       	ldd	r25, Y+32	; 0x20
    1c58:	01 97       	sbiw	r24, 0x01	; 1
    1c5a:	f1 f7       	brne	.-4      	; 0x1c58 <H_LCD_Vid_Wrt_Com+0xdc>
    1c5c:	98 a3       	std	Y+32, r25	; 0x20
    1c5e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c60:	89 a1       	ldd	r24, Y+33	; 0x21
    1c62:	9a a1       	ldd	r25, Y+34	; 0x22
    1c64:	01 97       	sbiw	r24, 0x01	; 1
    1c66:	9a a3       	std	Y+34, r25	; 0x22
    1c68:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c6a:	89 a1       	ldd	r24, Y+33	; 0x21
    1c6c:	9a a1       	ldd	r25, Y+34	; 0x22
    1c6e:	00 97       	sbiw	r24, 0x00	; 0
    1c70:	69 f7       	brne	.-38     	; 0x1c4c <H_LCD_Vid_Wrt_Com+0xd0>
    1c72:	14 c0       	rjmp	.+40     	; 0x1c9c <H_LCD_Vid_Wrt_Com+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c74:	6b a1       	ldd	r22, Y+35	; 0x23
    1c76:	7c a1       	ldd	r23, Y+36	; 0x24
    1c78:	8d a1       	ldd	r24, Y+37	; 0x25
    1c7a:	9e a1       	ldd	r25, Y+38	; 0x26
    1c7c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c80:	dc 01       	movw	r26, r24
    1c82:	cb 01       	movw	r24, r22
    1c84:	9a a3       	std	Y+34, r25	; 0x22
    1c86:	89 a3       	std	Y+33, r24	; 0x21
    1c88:	89 a1       	ldd	r24, Y+33	; 0x21
    1c8a:	9a a1       	ldd	r25, Y+34	; 0x22
    1c8c:	9e 8f       	std	Y+30, r25	; 0x1e
    1c8e:	8d 8f       	std	Y+29, r24	; 0x1d
    1c90:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c92:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c94:	01 97       	sbiw	r24, 0x01	; 1
    1c96:	f1 f7       	brne	.-4      	; 0x1c94 <H_LCD_Vid_Wrt_Com+0x118>
    1c98:	9e 8f       	std	Y+30, r25	; 0x1e
    1c9a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);

	/*set E low*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_LOW);
    1c9c:	81 e0       	ldi	r24, 0x01	; 1
    1c9e:	62 e0       	ldi	r22, 0x02	; 2
    1ca0:	40 e0       	ldi	r20, 0x00	; 0
    1ca2:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>
    1ca6:	80 e0       	ldi	r24, 0x00	; 0
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	a0 e2       	ldi	r26, 0x20	; 32
    1cac:	b1 e4       	ldi	r27, 0x41	; 65
    1cae:	89 8f       	std	Y+25, r24	; 0x19
    1cb0:	9a 8f       	std	Y+26, r25	; 0x1a
    1cb2:	ab 8f       	std	Y+27, r26	; 0x1b
    1cb4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cb6:	69 8d       	ldd	r22, Y+25	; 0x19
    1cb8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cba:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cbc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	30 e0       	ldi	r19, 0x00	; 0
    1cc2:	4a ef       	ldi	r20, 0xFA	; 250
    1cc4:	54 e4       	ldi	r21, 0x44	; 68
    1cc6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cca:	dc 01       	movw	r26, r24
    1ccc:	cb 01       	movw	r24, r22
    1cce:	8d 8b       	std	Y+21, r24	; 0x15
    1cd0:	9e 8b       	std	Y+22, r25	; 0x16
    1cd2:	af 8b       	std	Y+23, r26	; 0x17
    1cd4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1cd6:	6d 89       	ldd	r22, Y+21	; 0x15
    1cd8:	7e 89       	ldd	r23, Y+22	; 0x16
    1cda:	8f 89       	ldd	r24, Y+23	; 0x17
    1cdc:	98 8d       	ldd	r25, Y+24	; 0x18
    1cde:	20 e0       	ldi	r18, 0x00	; 0
    1ce0:	30 e0       	ldi	r19, 0x00	; 0
    1ce2:	40 e8       	ldi	r20, 0x80	; 128
    1ce4:	5f e3       	ldi	r21, 0x3F	; 63
    1ce6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1cea:	88 23       	and	r24, r24
    1cec:	2c f4       	brge	.+10     	; 0x1cf8 <H_LCD_Vid_Wrt_Com+0x17c>
		__ticks = 1;
    1cee:	81 e0       	ldi	r24, 0x01	; 1
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	9c 8b       	std	Y+20, r25	; 0x14
    1cf4:	8b 8b       	std	Y+19, r24	; 0x13
    1cf6:	3f c0       	rjmp	.+126    	; 0x1d76 <H_LCD_Vid_Wrt_Com+0x1fa>
	else if (__tmp > 65535)
    1cf8:	6d 89       	ldd	r22, Y+21	; 0x15
    1cfa:	7e 89       	ldd	r23, Y+22	; 0x16
    1cfc:	8f 89       	ldd	r24, Y+23	; 0x17
    1cfe:	98 8d       	ldd	r25, Y+24	; 0x18
    1d00:	20 e0       	ldi	r18, 0x00	; 0
    1d02:	3f ef       	ldi	r19, 0xFF	; 255
    1d04:	4f e7       	ldi	r20, 0x7F	; 127
    1d06:	57 e4       	ldi	r21, 0x47	; 71
    1d08:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d0c:	18 16       	cp	r1, r24
    1d0e:	4c f5       	brge	.+82     	; 0x1d62 <H_LCD_Vid_Wrt_Com+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d10:	69 8d       	ldd	r22, Y+25	; 0x19
    1d12:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d14:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d16:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d18:	20 e0       	ldi	r18, 0x00	; 0
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	40 e2       	ldi	r20, 0x20	; 32
    1d1e:	51 e4       	ldi	r21, 0x41	; 65
    1d20:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d24:	dc 01       	movw	r26, r24
    1d26:	cb 01       	movw	r24, r22
    1d28:	bc 01       	movw	r22, r24
    1d2a:	cd 01       	movw	r24, r26
    1d2c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d30:	dc 01       	movw	r26, r24
    1d32:	cb 01       	movw	r24, r22
    1d34:	9c 8b       	std	Y+20, r25	; 0x14
    1d36:	8b 8b       	std	Y+19, r24	; 0x13
    1d38:	0f c0       	rjmp	.+30     	; 0x1d58 <H_LCD_Vid_Wrt_Com+0x1dc>
    1d3a:	88 ec       	ldi	r24, 0xC8	; 200
    1d3c:	90 e0       	ldi	r25, 0x00	; 0
    1d3e:	9a 8b       	std	Y+18, r25	; 0x12
    1d40:	89 8b       	std	Y+17, r24	; 0x11
    1d42:	89 89       	ldd	r24, Y+17	; 0x11
    1d44:	9a 89       	ldd	r25, Y+18	; 0x12
    1d46:	01 97       	sbiw	r24, 0x01	; 1
    1d48:	f1 f7       	brne	.-4      	; 0x1d46 <H_LCD_Vid_Wrt_Com+0x1ca>
    1d4a:	9a 8b       	std	Y+18, r25	; 0x12
    1d4c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d4e:	8b 89       	ldd	r24, Y+19	; 0x13
    1d50:	9c 89       	ldd	r25, Y+20	; 0x14
    1d52:	01 97       	sbiw	r24, 0x01	; 1
    1d54:	9c 8b       	std	Y+20, r25	; 0x14
    1d56:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d58:	8b 89       	ldd	r24, Y+19	; 0x13
    1d5a:	9c 89       	ldd	r25, Y+20	; 0x14
    1d5c:	00 97       	sbiw	r24, 0x00	; 0
    1d5e:	69 f7       	brne	.-38     	; 0x1d3a <H_LCD_Vid_Wrt_Com+0x1be>
    1d60:	14 c0       	rjmp	.+40     	; 0x1d8a <H_LCD_Vid_Wrt_Com+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d62:	6d 89       	ldd	r22, Y+21	; 0x15
    1d64:	7e 89       	ldd	r23, Y+22	; 0x16
    1d66:	8f 89       	ldd	r24, Y+23	; 0x17
    1d68:	98 8d       	ldd	r25, Y+24	; 0x18
    1d6a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d6e:	dc 01       	movw	r26, r24
    1d70:	cb 01       	movw	r24, r22
    1d72:	9c 8b       	std	Y+20, r25	; 0x14
    1d74:	8b 8b       	std	Y+19, r24	; 0x13
    1d76:	8b 89       	ldd	r24, Y+19	; 0x13
    1d78:	9c 89       	ldd	r25, Y+20	; 0x14
    1d7a:	98 8b       	std	Y+16, r25	; 0x10
    1d7c:	8f 87       	std	Y+15, r24	; 0x0f
    1d7e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d80:	98 89       	ldd	r25, Y+16	; 0x10
    1d82:	01 97       	sbiw	r24, 0x01	; 1
    1d84:	f1 f7       	brne	.-4      	; 0x1d82 <H_LCD_Vid_Wrt_Com+0x206>
    1d86:	98 8b       	std	Y+16, r25	; 0x10
    1d88:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);

	/*set E HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1d8a:	81 e0       	ldi	r24, 0x01	; 1
    1d8c:	62 e0       	ldi	r22, 0x02	; 2
    1d8e:	41 e0       	ldi	r20, 0x01	; 1
    1d90:	0e 94 90 07 	call	0xf20	; 0xf20 <M_DIO_Vid_wrtPinVal>
    1d94:	80 e0       	ldi	r24, 0x00	; 0
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	a0 e2       	ldi	r26, 0x20	; 32
    1d9a:	b1 e4       	ldi	r27, 0x41	; 65
    1d9c:	8b 87       	std	Y+11, r24	; 0x0b
    1d9e:	9c 87       	std	Y+12, r25	; 0x0c
    1da0:	ad 87       	std	Y+13, r26	; 0x0d
    1da2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1da4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1da6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1da8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1daa:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dac:	20 e0       	ldi	r18, 0x00	; 0
    1dae:	30 e0       	ldi	r19, 0x00	; 0
    1db0:	4a ef       	ldi	r20, 0xFA	; 250
    1db2:	54 e4       	ldi	r21, 0x44	; 68
    1db4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1db8:	dc 01       	movw	r26, r24
    1dba:	cb 01       	movw	r24, r22
    1dbc:	8f 83       	std	Y+7, r24	; 0x07
    1dbe:	98 87       	std	Y+8, r25	; 0x08
    1dc0:	a9 87       	std	Y+9, r26	; 0x09
    1dc2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1dc4:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc6:	78 85       	ldd	r23, Y+8	; 0x08
    1dc8:	89 85       	ldd	r24, Y+9	; 0x09
    1dca:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dcc:	20 e0       	ldi	r18, 0x00	; 0
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	40 e8       	ldi	r20, 0x80	; 128
    1dd2:	5f e3       	ldi	r21, 0x3F	; 63
    1dd4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1dd8:	88 23       	and	r24, r24
    1dda:	2c f4       	brge	.+10     	; 0x1de6 <H_LCD_Vid_Wrt_Com+0x26a>
		__ticks = 1;
    1ddc:	81 e0       	ldi	r24, 0x01	; 1
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	9e 83       	std	Y+6, r25	; 0x06
    1de2:	8d 83       	std	Y+5, r24	; 0x05
    1de4:	3f c0       	rjmp	.+126    	; 0x1e64 <H_LCD_Vid_Wrt_Com+0x2e8>
	else if (__tmp > 65535)
    1de6:	6f 81       	ldd	r22, Y+7	; 0x07
    1de8:	78 85       	ldd	r23, Y+8	; 0x08
    1dea:	89 85       	ldd	r24, Y+9	; 0x09
    1dec:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dee:	20 e0       	ldi	r18, 0x00	; 0
    1df0:	3f ef       	ldi	r19, 0xFF	; 255
    1df2:	4f e7       	ldi	r20, 0x7F	; 127
    1df4:	57 e4       	ldi	r21, 0x47	; 71
    1df6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1dfa:	18 16       	cp	r1, r24
    1dfc:	4c f5       	brge	.+82     	; 0x1e50 <H_LCD_Vid_Wrt_Com+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dfe:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e00:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e02:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e04:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e06:	20 e0       	ldi	r18, 0x00	; 0
    1e08:	30 e0       	ldi	r19, 0x00	; 0
    1e0a:	40 e2       	ldi	r20, 0x20	; 32
    1e0c:	51 e4       	ldi	r21, 0x41	; 65
    1e0e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e12:	dc 01       	movw	r26, r24
    1e14:	cb 01       	movw	r24, r22
    1e16:	bc 01       	movw	r22, r24
    1e18:	cd 01       	movw	r24, r26
    1e1a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e1e:	dc 01       	movw	r26, r24
    1e20:	cb 01       	movw	r24, r22
    1e22:	9e 83       	std	Y+6, r25	; 0x06
    1e24:	8d 83       	std	Y+5, r24	; 0x05
    1e26:	0f c0       	rjmp	.+30     	; 0x1e46 <H_LCD_Vid_Wrt_Com+0x2ca>
    1e28:	88 ec       	ldi	r24, 0xC8	; 200
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	9c 83       	std	Y+4, r25	; 0x04
    1e2e:	8b 83       	std	Y+3, r24	; 0x03
    1e30:	8b 81       	ldd	r24, Y+3	; 0x03
    1e32:	9c 81       	ldd	r25, Y+4	; 0x04
    1e34:	01 97       	sbiw	r24, 0x01	; 1
    1e36:	f1 f7       	brne	.-4      	; 0x1e34 <H_LCD_Vid_Wrt_Com+0x2b8>
    1e38:	9c 83       	std	Y+4, r25	; 0x04
    1e3a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e3c:	8d 81       	ldd	r24, Y+5	; 0x05
    1e3e:	9e 81       	ldd	r25, Y+6	; 0x06
    1e40:	01 97       	sbiw	r24, 0x01	; 1
    1e42:	9e 83       	std	Y+6, r25	; 0x06
    1e44:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e46:	8d 81       	ldd	r24, Y+5	; 0x05
    1e48:	9e 81       	ldd	r25, Y+6	; 0x06
    1e4a:	00 97       	sbiw	r24, 0x00	; 0
    1e4c:	69 f7       	brne	.-38     	; 0x1e28 <H_LCD_Vid_Wrt_Com+0x2ac>
    1e4e:	14 c0       	rjmp	.+40     	; 0x1e78 <H_LCD_Vid_Wrt_Com+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e50:	6f 81       	ldd	r22, Y+7	; 0x07
    1e52:	78 85       	ldd	r23, Y+8	; 0x08
    1e54:	89 85       	ldd	r24, Y+9	; 0x09
    1e56:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e58:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	cb 01       	movw	r24, r22
    1e60:	9e 83       	std	Y+6, r25	; 0x06
    1e62:	8d 83       	std	Y+5, r24	; 0x05
    1e64:	8d 81       	ldd	r24, Y+5	; 0x05
    1e66:	9e 81       	ldd	r25, Y+6	; 0x06
    1e68:	9a 83       	std	Y+2, r25	; 0x02
    1e6a:	89 83       	std	Y+1, r24	; 0x01
    1e6c:	89 81       	ldd	r24, Y+1	; 0x01
    1e6e:	9a 81       	ldd	r25, Y+2	; 0x02
    1e70:	01 97       	sbiw	r24, 0x01	; 1
    1e72:	f1 f7       	brne	.-4      	; 0x1e70 <H_LCD_Vid_Wrt_Com+0x2f4>
    1e74:	9a 83       	std	Y+2, r25	; 0x02
    1e76:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    1e78:	ab 96       	adiw	r28, 0x2b	; 43
    1e7a:	0f b6       	in	r0, 0x3f	; 63
    1e7c:	f8 94       	cli
    1e7e:	de bf       	out	0x3e, r29	; 62
    1e80:	0f be       	out	0x3f, r0	; 63
    1e82:	cd bf       	out	0x3d, r28	; 61
    1e84:	cf 91       	pop	r28
    1e86:	df 91       	pop	r29
    1e88:	08 95       	ret

00001e8a <H_LCD_Vid_Clear>:
void H_LCD_Vid_Clear()
{
    1e8a:	df 93       	push	r29
    1e8c:	cf 93       	push	r28
    1e8e:	cd b7       	in	r28, 0x3d	; 61
    1e90:	de b7       	in	r29, 0x3e	; 62
	H_LCD_Vid_Wrt_Com(CLEAR_DISPLAY);
    1e92:	81 e0       	ldi	r24, 0x01	; 1
    1e94:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <H_LCD_Vid_Wrt_Com>
}
    1e98:	cf 91       	pop	r28
    1e9a:	df 91       	pop	r29
    1e9c:	08 95       	ret

00001e9e <H_LCD_Vid_GotoRowCol>:
void H_LCD_Vid_GotoRowCol(u8 Copy_u8_Row,u8 Copy_u8_COL)
{
    1e9e:	df 93       	push	r29
    1ea0:	cf 93       	push	r28
    1ea2:	00 d0       	rcall	.+0      	; 0x1ea4 <H_LCD_Vid_GotoRowCol+0x6>
    1ea4:	0f 92       	push	r0
    1ea6:	cd b7       	in	r28, 0x3d	; 61
    1ea8:	de b7       	in	r29, 0x3e	; 62
    1eaa:	8a 83       	std	Y+2, r24	; 0x02
    1eac:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8_address=0;
    1eae:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8_Row==H_LCD_ROW0)
    1eb0:	8a 81       	ldd	r24, Y+2	; 0x02
    1eb2:	88 23       	and	r24, r24
    1eb4:	19 f4       	brne	.+6      	; 0x1ebc <H_LCD_Vid_GotoRowCol+0x1e>
	{
		local_u8_address=Copy_u8_COL+0x00;       //address of  first row is 0x00 and then increase by one for next column
    1eb6:	8b 81       	ldd	r24, Y+3	; 0x03
    1eb8:	89 83       	std	Y+1, r24	; 0x01
    1eba:	03 c0       	rjmp	.+6      	; 0x1ec2 <H_LCD_Vid_GotoRowCol+0x24>
	}else
	{
		local_u8_address=Copy_u8_COL+0x40;       //address of second row is 0x40 and then increase by one for next column
    1ebc:	8b 81       	ldd	r24, Y+3	; 0x03
    1ebe:	80 5c       	subi	r24, 0xC0	; 192
    1ec0:	89 83       	std	Y+1, r24	; 0x01
	}
	H_LCD_Vid_Wrt_Com(128+local_u8_address);
    1ec2:	89 81       	ldd	r24, Y+1	; 0x01
    1ec4:	80 58       	subi	r24, 0x80	; 128
    1ec6:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <H_LCD_Vid_Wrt_Com>
}
    1eca:	0f 90       	pop	r0
    1ecc:	0f 90       	pop	r0
    1ece:	0f 90       	pop	r0
    1ed0:	cf 91       	pop	r28
    1ed2:	df 91       	pop	r29
    1ed4:	08 95       	ret

00001ed6 <H_LCD_Vid_Wrt_Special_CHr>:
/* ****8interface to print special char*/
void H_LCD_Vid_Wrt_Special_CHr(u8 *Ptr_u8_Pattern,u8 Copy_num_pattern,u8 Copy_u8_xpos,u8 Copy_u8_ypos)
{
    1ed6:	df 93       	push	r29
    1ed8:	cf 93       	push	r28
    1eda:	cd b7       	in	r28, 0x3d	; 61
    1edc:	de b7       	in	r29, 0x3e	; 62
    1ede:	27 97       	sbiw	r28, 0x07	; 7
    1ee0:	0f b6       	in	r0, 0x3f	; 63
    1ee2:	f8 94       	cli
    1ee4:	de bf       	out	0x3e, r29	; 62
    1ee6:	0f be       	out	0x3f, r0	; 63
    1ee8:	cd bf       	out	0x3d, r28	; 61
    1eea:	9c 83       	std	Y+4, r25	; 0x04
    1eec:	8b 83       	std	Y+3, r24	; 0x03
    1eee:	6d 83       	std	Y+5, r22	; 0x05
    1ef0:	4e 83       	std	Y+6, r20	; 0x06
    1ef2:	2f 83       	std	Y+7, r18	; 0x07
	u8 local_u8_address=0;
    1ef4:	1a 82       	std	Y+2, r1	; 0x02
	local_u8_address=8*Copy_num_pattern;
    1ef6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ef8:	88 2f       	mov	r24, r24
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	88 0f       	add	r24, r24
    1efe:	99 1f       	adc	r25, r25
    1f00:	88 0f       	add	r24, r24
    1f02:	99 1f       	adc	r25, r25
    1f04:	88 0f       	add	r24, r24
    1f06:	99 1f       	adc	r25, r25
    1f08:	8a 83       	std	Y+2, r24	; 0x02
	H_LCD_Vid_Wrt_Com( 0x40 | local_u8_address);
    1f0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f0c:	80 64       	ori	r24, 0x40	; 64
    1f0e:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <H_LCD_Vid_Wrt_Com>
	for(u8 i=0;i<8;i++)
    1f12:	19 82       	std	Y+1, r1	; 0x01
    1f14:	03 c0       	rjmp	.+6      	; 0x1f1c <H_LCD_Vid_Wrt_Special_CHr+0x46>
    1f16:	89 81       	ldd	r24, Y+1	; 0x01
    1f18:	8f 5f       	subi	r24, 0xFF	; 255
    1f1a:	89 83       	std	Y+1, r24	; 0x01
    1f1c:	89 81       	ldd	r24, Y+1	; 0x01
    1f1e:	88 30       	cpi	r24, 0x08	; 8
    1f20:	d0 f3       	brcs	.-12     	; 0x1f16 <H_LCD_Vid_Wrt_Special_CHr+0x40>
	{

	}
}
    1f22:	27 96       	adiw	r28, 0x07	; 7
    1f24:	0f b6       	in	r0, 0x3f	; 63
    1f26:	f8 94       	cli
    1f28:	de bf       	out	0x3e, r29	; 62
    1f2a:	0f be       	out	0x3f, r0	; 63
    1f2c:	cd bf       	out	0x3d, r28	; 61
    1f2e:	cf 91       	pop	r28
    1f30:	df 91       	pop	r29
    1f32:	08 95       	ret

00001f34 <main>:
#include "ADC_int.h"
#include "LCD_int.h"
#include "string.h"
u8 arr[15]={0};
int main(void)
{
    1f34:	df 93       	push	r29
    1f36:	cf 93       	push	r28
    1f38:	00 d0       	rcall	.+0      	; 0x1f3a <main+0x6>
    1f3a:	0f 92       	push	r0
    1f3c:	cd b7       	in	r28, 0x3d	; 61
    1f3e:	de b7       	in	r29, 0x3e	; 62
	u8 temp;
	M_ADC_Vid_Init(Prescalar_128,Right_Adjusted);
    1f40:	80 e0       	ldi	r24, 0x00	; 0
    1f42:	60 e0       	ldi	r22, 0x00	; 0
    1f44:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_ADC_Vid_Init>
	H_LCD_Vid_Int();
    1f48:	0e 94 89 09 	call	0x1312	; 0x1312 <H_LCD_Vid_Int>
	u16 local_digital_read;
	while(1)
	{
		local_digital_read=M_ADC_U16_ReadDigital(ADC_Channel0);
    1f4c:	80 e0       	ldi	r24, 0x00	; 0
    1f4e:	0e 94 9d 06 	call	0xd3a	; 0xd3a <M_ADC_U16_ReadDigital>
    1f52:	9a 83       	std	Y+2, r25	; 0x02
    1f54:	89 83       	std	Y+1, r24	; 0x01
		temp=(local_digital_read*5000UL/1024)/10 ;
    1f56:	89 81       	ldd	r24, Y+1	; 0x01
    1f58:	9a 81       	ldd	r25, Y+2	; 0x02
    1f5a:	cc 01       	movw	r24, r24
    1f5c:	a0 e0       	ldi	r26, 0x00	; 0
    1f5e:	b0 e0       	ldi	r27, 0x00	; 0
    1f60:	28 e8       	ldi	r18, 0x88	; 136
    1f62:	33 e1       	ldi	r19, 0x13	; 19
    1f64:	40 e0       	ldi	r20, 0x00	; 0
    1f66:	50 e0       	ldi	r21, 0x00	; 0
    1f68:	bc 01       	movw	r22, r24
    1f6a:	cd 01       	movw	r24, r26
    1f6c:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <__mulsi3>
    1f70:	dc 01       	movw	r26, r24
    1f72:	cb 01       	movw	r24, r22
    1f74:	20 e0       	ldi	r18, 0x00	; 0
    1f76:	38 e2       	ldi	r19, 0x28	; 40
    1f78:	40 e0       	ldi	r20, 0x00	; 0
    1f7a:	50 e0       	ldi	r21, 0x00	; 0
    1f7c:	bc 01       	movw	r22, r24
    1f7e:	cd 01       	movw	r24, r26
    1f80:	0e 94 0a 10 	call	0x2014	; 0x2014 <__udivmodsi4>
    1f84:	da 01       	movw	r26, r20
    1f86:	c9 01       	movw	r24, r18
    1f88:	8b 83       	std	Y+3, r24	; 0x03
		sprintf(arr,"%d",temp);
    1f8a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f8c:	28 2f       	mov	r18, r24
    1f8e:	30 e0       	ldi	r19, 0x00	; 0
    1f90:	00 d0       	rcall	.+0      	; 0x1f92 <main+0x5e>
    1f92:	00 d0       	rcall	.+0      	; 0x1f94 <main+0x60>
    1f94:	00 d0       	rcall	.+0      	; 0x1f96 <main+0x62>
    1f96:	ed b7       	in	r30, 0x3d	; 61
    1f98:	fe b7       	in	r31, 0x3e	; 62
    1f9a:	31 96       	adiw	r30, 0x01	; 1
    1f9c:	8c e6       	ldi	r24, 0x6C	; 108
    1f9e:	90 e0       	ldi	r25, 0x00	; 0
    1fa0:	91 83       	std	Z+1, r25	; 0x01
    1fa2:	80 83       	st	Z, r24
    1fa4:	80 e6       	ldi	r24, 0x60	; 96
    1fa6:	90 e0       	ldi	r25, 0x00	; 0
    1fa8:	93 83       	std	Z+3, r25	; 0x03
    1faa:	82 83       	std	Z+2, r24	; 0x02
    1fac:	35 83       	std	Z+5, r19	; 0x05
    1fae:	24 83       	std	Z+4, r18	; 0x04
    1fb0:	0e 94 63 10 	call	0x20c6	; 0x20c6 <sprintf>
    1fb4:	8d b7       	in	r24, 0x3d	; 61
    1fb6:	9e b7       	in	r25, 0x3e	; 62
    1fb8:	06 96       	adiw	r24, 0x06	; 6
    1fba:	0f b6       	in	r0, 0x3f	; 63
    1fbc:	f8 94       	cli
    1fbe:	9e bf       	out	0x3e, r25	; 62
    1fc0:	0f be       	out	0x3f, r0	; 63
    1fc2:	8d bf       	out	0x3d, r24	; 61
		H_LCD_Vid_GotoRowCol(H_LCD_ROW0,H_LCD_COL00);
    1fc4:	80 e0       	ldi	r24, 0x00	; 0
    1fc6:	60 e0       	ldi	r22, 0x00	; 0
    1fc8:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <H_LCD_Vid_GotoRowCol>
		H_LCD_Vid_Wrt_Str(arr);
    1fcc:	8c e6       	ldi	r24, 0x6C	; 108
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <H_LCD_Vid_Wrt_Str>
    1fd4:	bb cf       	rjmp	.-138    	; 0x1f4c <main+0x18>

00001fd6 <__mulsi3>:
    1fd6:	62 9f       	mul	r22, r18
    1fd8:	d0 01       	movw	r26, r0
    1fda:	73 9f       	mul	r23, r19
    1fdc:	f0 01       	movw	r30, r0
    1fde:	82 9f       	mul	r24, r18
    1fe0:	e0 0d       	add	r30, r0
    1fe2:	f1 1d       	adc	r31, r1
    1fe4:	64 9f       	mul	r22, r20
    1fe6:	e0 0d       	add	r30, r0
    1fe8:	f1 1d       	adc	r31, r1
    1fea:	92 9f       	mul	r25, r18
    1fec:	f0 0d       	add	r31, r0
    1fee:	83 9f       	mul	r24, r19
    1ff0:	f0 0d       	add	r31, r0
    1ff2:	74 9f       	mul	r23, r20
    1ff4:	f0 0d       	add	r31, r0
    1ff6:	65 9f       	mul	r22, r21
    1ff8:	f0 0d       	add	r31, r0
    1ffa:	99 27       	eor	r25, r25
    1ffc:	72 9f       	mul	r23, r18
    1ffe:	b0 0d       	add	r27, r0
    2000:	e1 1d       	adc	r30, r1
    2002:	f9 1f       	adc	r31, r25
    2004:	63 9f       	mul	r22, r19
    2006:	b0 0d       	add	r27, r0
    2008:	e1 1d       	adc	r30, r1
    200a:	f9 1f       	adc	r31, r25
    200c:	bd 01       	movw	r22, r26
    200e:	cf 01       	movw	r24, r30
    2010:	11 24       	eor	r1, r1
    2012:	08 95       	ret

00002014 <__udivmodsi4>:
    2014:	a1 e2       	ldi	r26, 0x21	; 33
    2016:	1a 2e       	mov	r1, r26
    2018:	aa 1b       	sub	r26, r26
    201a:	bb 1b       	sub	r27, r27
    201c:	fd 01       	movw	r30, r26
    201e:	0d c0       	rjmp	.+26     	; 0x203a <__udivmodsi4_ep>

00002020 <__udivmodsi4_loop>:
    2020:	aa 1f       	adc	r26, r26
    2022:	bb 1f       	adc	r27, r27
    2024:	ee 1f       	adc	r30, r30
    2026:	ff 1f       	adc	r31, r31
    2028:	a2 17       	cp	r26, r18
    202a:	b3 07       	cpc	r27, r19
    202c:	e4 07       	cpc	r30, r20
    202e:	f5 07       	cpc	r31, r21
    2030:	20 f0       	brcs	.+8      	; 0x203a <__udivmodsi4_ep>
    2032:	a2 1b       	sub	r26, r18
    2034:	b3 0b       	sbc	r27, r19
    2036:	e4 0b       	sbc	r30, r20
    2038:	f5 0b       	sbc	r31, r21

0000203a <__udivmodsi4_ep>:
    203a:	66 1f       	adc	r22, r22
    203c:	77 1f       	adc	r23, r23
    203e:	88 1f       	adc	r24, r24
    2040:	99 1f       	adc	r25, r25
    2042:	1a 94       	dec	r1
    2044:	69 f7       	brne	.-38     	; 0x2020 <__udivmodsi4_loop>
    2046:	60 95       	com	r22
    2048:	70 95       	com	r23
    204a:	80 95       	com	r24
    204c:	90 95       	com	r25
    204e:	9b 01       	movw	r18, r22
    2050:	ac 01       	movw	r20, r24
    2052:	bd 01       	movw	r22, r26
    2054:	cf 01       	movw	r24, r30
    2056:	08 95       	ret

00002058 <__prologue_saves__>:
    2058:	2f 92       	push	r2
    205a:	3f 92       	push	r3
    205c:	4f 92       	push	r4
    205e:	5f 92       	push	r5
    2060:	6f 92       	push	r6
    2062:	7f 92       	push	r7
    2064:	8f 92       	push	r8
    2066:	9f 92       	push	r9
    2068:	af 92       	push	r10
    206a:	bf 92       	push	r11
    206c:	cf 92       	push	r12
    206e:	df 92       	push	r13
    2070:	ef 92       	push	r14
    2072:	ff 92       	push	r15
    2074:	0f 93       	push	r16
    2076:	1f 93       	push	r17
    2078:	cf 93       	push	r28
    207a:	df 93       	push	r29
    207c:	cd b7       	in	r28, 0x3d	; 61
    207e:	de b7       	in	r29, 0x3e	; 62
    2080:	ca 1b       	sub	r28, r26
    2082:	db 0b       	sbc	r29, r27
    2084:	0f b6       	in	r0, 0x3f	; 63
    2086:	f8 94       	cli
    2088:	de bf       	out	0x3e, r29	; 62
    208a:	0f be       	out	0x3f, r0	; 63
    208c:	cd bf       	out	0x3d, r28	; 61
    208e:	09 94       	ijmp

00002090 <__epilogue_restores__>:
    2090:	2a 88       	ldd	r2, Y+18	; 0x12
    2092:	39 88       	ldd	r3, Y+17	; 0x11
    2094:	48 88       	ldd	r4, Y+16	; 0x10
    2096:	5f 84       	ldd	r5, Y+15	; 0x0f
    2098:	6e 84       	ldd	r6, Y+14	; 0x0e
    209a:	7d 84       	ldd	r7, Y+13	; 0x0d
    209c:	8c 84       	ldd	r8, Y+12	; 0x0c
    209e:	9b 84       	ldd	r9, Y+11	; 0x0b
    20a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    20a2:	b9 84       	ldd	r11, Y+9	; 0x09
    20a4:	c8 84       	ldd	r12, Y+8	; 0x08
    20a6:	df 80       	ldd	r13, Y+7	; 0x07
    20a8:	ee 80       	ldd	r14, Y+6	; 0x06
    20aa:	fd 80       	ldd	r15, Y+5	; 0x05
    20ac:	0c 81       	ldd	r16, Y+4	; 0x04
    20ae:	1b 81       	ldd	r17, Y+3	; 0x03
    20b0:	aa 81       	ldd	r26, Y+2	; 0x02
    20b2:	b9 81       	ldd	r27, Y+1	; 0x01
    20b4:	ce 0f       	add	r28, r30
    20b6:	d1 1d       	adc	r29, r1
    20b8:	0f b6       	in	r0, 0x3f	; 63
    20ba:	f8 94       	cli
    20bc:	de bf       	out	0x3e, r29	; 62
    20be:	0f be       	out	0x3f, r0	; 63
    20c0:	cd bf       	out	0x3d, r28	; 61
    20c2:	ed 01       	movw	r28, r26
    20c4:	08 95       	ret

000020c6 <sprintf>:
    20c6:	ae e0       	ldi	r26, 0x0E	; 14
    20c8:	b0 e0       	ldi	r27, 0x00	; 0
    20ca:	e9 e6       	ldi	r30, 0x69	; 105
    20cc:	f0 e1       	ldi	r31, 0x10	; 16
    20ce:	0c 94 3a 10 	jmp	0x2074	; 0x2074 <__prologue_saves__+0x1c>
    20d2:	0d 89       	ldd	r16, Y+21	; 0x15
    20d4:	1e 89       	ldd	r17, Y+22	; 0x16
    20d6:	86 e0       	ldi	r24, 0x06	; 6
    20d8:	8c 83       	std	Y+4, r24	; 0x04
    20da:	1a 83       	std	Y+2, r17	; 0x02
    20dc:	09 83       	std	Y+1, r16	; 0x01
    20de:	8f ef       	ldi	r24, 0xFF	; 255
    20e0:	9f e7       	ldi	r25, 0x7F	; 127
    20e2:	9e 83       	std	Y+6, r25	; 0x06
    20e4:	8d 83       	std	Y+5, r24	; 0x05
    20e6:	9e 01       	movw	r18, r28
    20e8:	27 5e       	subi	r18, 0xE7	; 231
    20ea:	3f 4f       	sbci	r19, 0xFF	; 255
    20ec:	ce 01       	movw	r24, r28
    20ee:	01 96       	adiw	r24, 0x01	; 1
    20f0:	6f 89       	ldd	r22, Y+23	; 0x17
    20f2:	78 8d       	ldd	r23, Y+24	; 0x18
    20f4:	a9 01       	movw	r20, r18
    20f6:	0e 94 87 10 	call	0x210e	; 0x210e <vfprintf>
    20fa:	2f 81       	ldd	r18, Y+7	; 0x07
    20fc:	38 85       	ldd	r19, Y+8	; 0x08
    20fe:	02 0f       	add	r16, r18
    2100:	13 1f       	adc	r17, r19
    2102:	f8 01       	movw	r30, r16
    2104:	10 82       	st	Z, r1
    2106:	2e 96       	adiw	r28, 0x0e	; 14
    2108:	e4 e0       	ldi	r30, 0x04	; 4
    210a:	0c 94 56 10 	jmp	0x20ac	; 0x20ac <__epilogue_restores__+0x1c>

0000210e <vfprintf>:
    210e:	ab e0       	ldi	r26, 0x0B	; 11
    2110:	b0 e0       	ldi	r27, 0x00	; 0
    2112:	ed e8       	ldi	r30, 0x8D	; 141
    2114:	f0 e1       	ldi	r31, 0x10	; 16
    2116:	0c 94 2c 10 	jmp	0x2058	; 0x2058 <__prologue_saves__>
    211a:	3c 01       	movw	r6, r24
    211c:	2b 01       	movw	r4, r22
    211e:	5a 01       	movw	r10, r20
    2120:	fc 01       	movw	r30, r24
    2122:	17 82       	std	Z+7, r1	; 0x07
    2124:	16 82       	std	Z+6, r1	; 0x06
    2126:	83 81       	ldd	r24, Z+3	; 0x03
    2128:	81 fd       	sbrc	r24, 1
    212a:	03 c0       	rjmp	.+6      	; 0x2132 <vfprintf+0x24>
    212c:	6f ef       	ldi	r22, 0xFF	; 255
    212e:	7f ef       	ldi	r23, 0xFF	; 255
    2130:	c6 c1       	rjmp	.+908    	; 0x24be <vfprintf+0x3b0>
    2132:	9a e0       	ldi	r25, 0x0A	; 10
    2134:	89 2e       	mov	r8, r25
    2136:	1e 01       	movw	r2, r28
    2138:	08 94       	sec
    213a:	21 1c       	adc	r2, r1
    213c:	31 1c       	adc	r3, r1
    213e:	f3 01       	movw	r30, r6
    2140:	23 81       	ldd	r18, Z+3	; 0x03
    2142:	f2 01       	movw	r30, r4
    2144:	23 fd       	sbrc	r18, 3
    2146:	85 91       	lpm	r24, Z+
    2148:	23 ff       	sbrs	r18, 3
    214a:	81 91       	ld	r24, Z+
    214c:	2f 01       	movw	r4, r30
    214e:	88 23       	and	r24, r24
    2150:	09 f4       	brne	.+2      	; 0x2154 <vfprintf+0x46>
    2152:	b2 c1       	rjmp	.+868    	; 0x24b8 <vfprintf+0x3aa>
    2154:	85 32       	cpi	r24, 0x25	; 37
    2156:	39 f4       	brne	.+14     	; 0x2166 <vfprintf+0x58>
    2158:	23 fd       	sbrc	r18, 3
    215a:	85 91       	lpm	r24, Z+
    215c:	23 ff       	sbrs	r18, 3
    215e:	81 91       	ld	r24, Z+
    2160:	2f 01       	movw	r4, r30
    2162:	85 32       	cpi	r24, 0x25	; 37
    2164:	29 f4       	brne	.+10     	; 0x2170 <vfprintf+0x62>
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	b3 01       	movw	r22, r6
    216a:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    216e:	e7 cf       	rjmp	.-50     	; 0x213e <vfprintf+0x30>
    2170:	98 2f       	mov	r25, r24
    2172:	ff 24       	eor	r15, r15
    2174:	ee 24       	eor	r14, r14
    2176:	99 24       	eor	r9, r9
    2178:	ff e1       	ldi	r31, 0x1F	; 31
    217a:	ff 15       	cp	r31, r15
    217c:	d0 f0       	brcs	.+52     	; 0x21b2 <vfprintf+0xa4>
    217e:	9b 32       	cpi	r25, 0x2B	; 43
    2180:	69 f0       	breq	.+26     	; 0x219c <vfprintf+0x8e>
    2182:	9c 32       	cpi	r25, 0x2C	; 44
    2184:	28 f4       	brcc	.+10     	; 0x2190 <vfprintf+0x82>
    2186:	90 32       	cpi	r25, 0x20	; 32
    2188:	59 f0       	breq	.+22     	; 0x21a0 <vfprintf+0x92>
    218a:	93 32       	cpi	r25, 0x23	; 35
    218c:	91 f4       	brne	.+36     	; 0x21b2 <vfprintf+0xa4>
    218e:	0e c0       	rjmp	.+28     	; 0x21ac <vfprintf+0x9e>
    2190:	9d 32       	cpi	r25, 0x2D	; 45
    2192:	49 f0       	breq	.+18     	; 0x21a6 <vfprintf+0x98>
    2194:	90 33       	cpi	r25, 0x30	; 48
    2196:	69 f4       	brne	.+26     	; 0x21b2 <vfprintf+0xa4>
    2198:	41 e0       	ldi	r20, 0x01	; 1
    219a:	24 c0       	rjmp	.+72     	; 0x21e4 <vfprintf+0xd6>
    219c:	52 e0       	ldi	r21, 0x02	; 2
    219e:	f5 2a       	or	r15, r21
    21a0:	84 e0       	ldi	r24, 0x04	; 4
    21a2:	f8 2a       	or	r15, r24
    21a4:	28 c0       	rjmp	.+80     	; 0x21f6 <vfprintf+0xe8>
    21a6:	98 e0       	ldi	r25, 0x08	; 8
    21a8:	f9 2a       	or	r15, r25
    21aa:	25 c0       	rjmp	.+74     	; 0x21f6 <vfprintf+0xe8>
    21ac:	e0 e1       	ldi	r30, 0x10	; 16
    21ae:	fe 2a       	or	r15, r30
    21b0:	22 c0       	rjmp	.+68     	; 0x21f6 <vfprintf+0xe8>
    21b2:	f7 fc       	sbrc	r15, 7
    21b4:	29 c0       	rjmp	.+82     	; 0x2208 <vfprintf+0xfa>
    21b6:	89 2f       	mov	r24, r25
    21b8:	80 53       	subi	r24, 0x30	; 48
    21ba:	8a 30       	cpi	r24, 0x0A	; 10
    21bc:	70 f4       	brcc	.+28     	; 0x21da <vfprintf+0xcc>
    21be:	f6 fe       	sbrs	r15, 6
    21c0:	05 c0       	rjmp	.+10     	; 0x21cc <vfprintf+0xbe>
    21c2:	98 9c       	mul	r9, r8
    21c4:	90 2c       	mov	r9, r0
    21c6:	11 24       	eor	r1, r1
    21c8:	98 0e       	add	r9, r24
    21ca:	15 c0       	rjmp	.+42     	; 0x21f6 <vfprintf+0xe8>
    21cc:	e8 9c       	mul	r14, r8
    21ce:	e0 2c       	mov	r14, r0
    21d0:	11 24       	eor	r1, r1
    21d2:	e8 0e       	add	r14, r24
    21d4:	f0 e2       	ldi	r31, 0x20	; 32
    21d6:	ff 2a       	or	r15, r31
    21d8:	0e c0       	rjmp	.+28     	; 0x21f6 <vfprintf+0xe8>
    21da:	9e 32       	cpi	r25, 0x2E	; 46
    21dc:	29 f4       	brne	.+10     	; 0x21e8 <vfprintf+0xda>
    21de:	f6 fc       	sbrc	r15, 6
    21e0:	6b c1       	rjmp	.+726    	; 0x24b8 <vfprintf+0x3aa>
    21e2:	40 e4       	ldi	r20, 0x40	; 64
    21e4:	f4 2a       	or	r15, r20
    21e6:	07 c0       	rjmp	.+14     	; 0x21f6 <vfprintf+0xe8>
    21e8:	9c 36       	cpi	r25, 0x6C	; 108
    21ea:	19 f4       	brne	.+6      	; 0x21f2 <vfprintf+0xe4>
    21ec:	50 e8       	ldi	r21, 0x80	; 128
    21ee:	f5 2a       	or	r15, r21
    21f0:	02 c0       	rjmp	.+4      	; 0x21f6 <vfprintf+0xe8>
    21f2:	98 36       	cpi	r25, 0x68	; 104
    21f4:	49 f4       	brne	.+18     	; 0x2208 <vfprintf+0xfa>
    21f6:	f2 01       	movw	r30, r4
    21f8:	23 fd       	sbrc	r18, 3
    21fa:	95 91       	lpm	r25, Z+
    21fc:	23 ff       	sbrs	r18, 3
    21fe:	91 91       	ld	r25, Z+
    2200:	2f 01       	movw	r4, r30
    2202:	99 23       	and	r25, r25
    2204:	09 f0       	breq	.+2      	; 0x2208 <vfprintf+0xfa>
    2206:	b8 cf       	rjmp	.-144    	; 0x2178 <vfprintf+0x6a>
    2208:	89 2f       	mov	r24, r25
    220a:	85 54       	subi	r24, 0x45	; 69
    220c:	83 30       	cpi	r24, 0x03	; 3
    220e:	18 f0       	brcs	.+6      	; 0x2216 <vfprintf+0x108>
    2210:	80 52       	subi	r24, 0x20	; 32
    2212:	83 30       	cpi	r24, 0x03	; 3
    2214:	38 f4       	brcc	.+14     	; 0x2224 <vfprintf+0x116>
    2216:	44 e0       	ldi	r20, 0x04	; 4
    2218:	50 e0       	ldi	r21, 0x00	; 0
    221a:	a4 0e       	add	r10, r20
    221c:	b5 1e       	adc	r11, r21
    221e:	5f e3       	ldi	r21, 0x3F	; 63
    2220:	59 83       	std	Y+1, r21	; 0x01
    2222:	0f c0       	rjmp	.+30     	; 0x2242 <vfprintf+0x134>
    2224:	93 36       	cpi	r25, 0x63	; 99
    2226:	31 f0       	breq	.+12     	; 0x2234 <vfprintf+0x126>
    2228:	93 37       	cpi	r25, 0x73	; 115
    222a:	79 f0       	breq	.+30     	; 0x224a <vfprintf+0x13c>
    222c:	93 35       	cpi	r25, 0x53	; 83
    222e:	09 f0       	breq	.+2      	; 0x2232 <vfprintf+0x124>
    2230:	56 c0       	rjmp	.+172    	; 0x22de <vfprintf+0x1d0>
    2232:	20 c0       	rjmp	.+64     	; 0x2274 <vfprintf+0x166>
    2234:	f5 01       	movw	r30, r10
    2236:	80 81       	ld	r24, Z
    2238:	89 83       	std	Y+1, r24	; 0x01
    223a:	42 e0       	ldi	r20, 0x02	; 2
    223c:	50 e0       	ldi	r21, 0x00	; 0
    223e:	a4 0e       	add	r10, r20
    2240:	b5 1e       	adc	r11, r21
    2242:	61 01       	movw	r12, r2
    2244:	01 e0       	ldi	r16, 0x01	; 1
    2246:	10 e0       	ldi	r17, 0x00	; 0
    2248:	12 c0       	rjmp	.+36     	; 0x226e <vfprintf+0x160>
    224a:	f5 01       	movw	r30, r10
    224c:	c0 80       	ld	r12, Z
    224e:	d1 80       	ldd	r13, Z+1	; 0x01
    2250:	f6 fc       	sbrc	r15, 6
    2252:	03 c0       	rjmp	.+6      	; 0x225a <vfprintf+0x14c>
    2254:	6f ef       	ldi	r22, 0xFF	; 255
    2256:	7f ef       	ldi	r23, 0xFF	; 255
    2258:	02 c0       	rjmp	.+4      	; 0x225e <vfprintf+0x150>
    225a:	69 2d       	mov	r22, r9
    225c:	70 e0       	ldi	r23, 0x00	; 0
    225e:	42 e0       	ldi	r20, 0x02	; 2
    2260:	50 e0       	ldi	r21, 0x00	; 0
    2262:	a4 0e       	add	r10, r20
    2264:	b5 1e       	adc	r11, r21
    2266:	c6 01       	movw	r24, r12
    2268:	0e 94 6f 12 	call	0x24de	; 0x24de <strnlen>
    226c:	8c 01       	movw	r16, r24
    226e:	5f e7       	ldi	r21, 0x7F	; 127
    2270:	f5 22       	and	r15, r21
    2272:	14 c0       	rjmp	.+40     	; 0x229c <vfprintf+0x18e>
    2274:	f5 01       	movw	r30, r10
    2276:	c0 80       	ld	r12, Z
    2278:	d1 80       	ldd	r13, Z+1	; 0x01
    227a:	f6 fc       	sbrc	r15, 6
    227c:	03 c0       	rjmp	.+6      	; 0x2284 <vfprintf+0x176>
    227e:	6f ef       	ldi	r22, 0xFF	; 255
    2280:	7f ef       	ldi	r23, 0xFF	; 255
    2282:	02 c0       	rjmp	.+4      	; 0x2288 <vfprintf+0x17a>
    2284:	69 2d       	mov	r22, r9
    2286:	70 e0       	ldi	r23, 0x00	; 0
    2288:	42 e0       	ldi	r20, 0x02	; 2
    228a:	50 e0       	ldi	r21, 0x00	; 0
    228c:	a4 0e       	add	r10, r20
    228e:	b5 1e       	adc	r11, r21
    2290:	c6 01       	movw	r24, r12
    2292:	0e 94 64 12 	call	0x24c8	; 0x24c8 <strnlen_P>
    2296:	8c 01       	movw	r16, r24
    2298:	50 e8       	ldi	r21, 0x80	; 128
    229a:	f5 2a       	or	r15, r21
    229c:	f3 fe       	sbrs	r15, 3
    229e:	07 c0       	rjmp	.+14     	; 0x22ae <vfprintf+0x1a0>
    22a0:	1a c0       	rjmp	.+52     	; 0x22d6 <vfprintf+0x1c8>
    22a2:	80 e2       	ldi	r24, 0x20	; 32
    22a4:	90 e0       	ldi	r25, 0x00	; 0
    22a6:	b3 01       	movw	r22, r6
    22a8:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    22ac:	ea 94       	dec	r14
    22ae:	8e 2d       	mov	r24, r14
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	08 17       	cp	r16, r24
    22b4:	19 07       	cpc	r17, r25
    22b6:	a8 f3       	brcs	.-22     	; 0x22a2 <vfprintf+0x194>
    22b8:	0e c0       	rjmp	.+28     	; 0x22d6 <vfprintf+0x1c8>
    22ba:	f6 01       	movw	r30, r12
    22bc:	f7 fc       	sbrc	r15, 7
    22be:	85 91       	lpm	r24, Z+
    22c0:	f7 fe       	sbrs	r15, 7
    22c2:	81 91       	ld	r24, Z+
    22c4:	6f 01       	movw	r12, r30
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	b3 01       	movw	r22, r6
    22ca:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    22ce:	e1 10       	cpse	r14, r1
    22d0:	ea 94       	dec	r14
    22d2:	01 50       	subi	r16, 0x01	; 1
    22d4:	10 40       	sbci	r17, 0x00	; 0
    22d6:	01 15       	cp	r16, r1
    22d8:	11 05       	cpc	r17, r1
    22da:	79 f7       	brne	.-34     	; 0x22ba <vfprintf+0x1ac>
    22dc:	ea c0       	rjmp	.+468    	; 0x24b2 <vfprintf+0x3a4>
    22de:	94 36       	cpi	r25, 0x64	; 100
    22e0:	11 f0       	breq	.+4      	; 0x22e6 <vfprintf+0x1d8>
    22e2:	99 36       	cpi	r25, 0x69	; 105
    22e4:	69 f5       	brne	.+90     	; 0x2340 <vfprintf+0x232>
    22e6:	f7 fe       	sbrs	r15, 7
    22e8:	08 c0       	rjmp	.+16     	; 0x22fa <vfprintf+0x1ec>
    22ea:	f5 01       	movw	r30, r10
    22ec:	20 81       	ld	r18, Z
    22ee:	31 81       	ldd	r19, Z+1	; 0x01
    22f0:	42 81       	ldd	r20, Z+2	; 0x02
    22f2:	53 81       	ldd	r21, Z+3	; 0x03
    22f4:	84 e0       	ldi	r24, 0x04	; 4
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	0a c0       	rjmp	.+20     	; 0x230e <vfprintf+0x200>
    22fa:	f5 01       	movw	r30, r10
    22fc:	80 81       	ld	r24, Z
    22fe:	91 81       	ldd	r25, Z+1	; 0x01
    2300:	9c 01       	movw	r18, r24
    2302:	44 27       	eor	r20, r20
    2304:	37 fd       	sbrc	r19, 7
    2306:	40 95       	com	r20
    2308:	54 2f       	mov	r21, r20
    230a:	82 e0       	ldi	r24, 0x02	; 2
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	a8 0e       	add	r10, r24
    2310:	b9 1e       	adc	r11, r25
    2312:	9f e6       	ldi	r25, 0x6F	; 111
    2314:	f9 22       	and	r15, r25
    2316:	57 ff       	sbrs	r21, 7
    2318:	09 c0       	rjmp	.+18     	; 0x232c <vfprintf+0x21e>
    231a:	50 95       	com	r21
    231c:	40 95       	com	r20
    231e:	30 95       	com	r19
    2320:	21 95       	neg	r18
    2322:	3f 4f       	sbci	r19, 0xFF	; 255
    2324:	4f 4f       	sbci	r20, 0xFF	; 255
    2326:	5f 4f       	sbci	r21, 0xFF	; 255
    2328:	e0 e8       	ldi	r30, 0x80	; 128
    232a:	fe 2a       	or	r15, r30
    232c:	ca 01       	movw	r24, r20
    232e:	b9 01       	movw	r22, r18
    2330:	a1 01       	movw	r20, r2
    2332:	2a e0       	ldi	r18, 0x0A	; 10
    2334:	30 e0       	ldi	r19, 0x00	; 0
    2336:	0e 94 a6 12 	call	0x254c	; 0x254c <__ultoa_invert>
    233a:	d8 2e       	mov	r13, r24
    233c:	d2 18       	sub	r13, r2
    233e:	40 c0       	rjmp	.+128    	; 0x23c0 <vfprintf+0x2b2>
    2340:	95 37       	cpi	r25, 0x75	; 117
    2342:	29 f4       	brne	.+10     	; 0x234e <vfprintf+0x240>
    2344:	1f 2d       	mov	r17, r15
    2346:	1f 7e       	andi	r17, 0xEF	; 239
    2348:	2a e0       	ldi	r18, 0x0A	; 10
    234a:	30 e0       	ldi	r19, 0x00	; 0
    234c:	1d c0       	rjmp	.+58     	; 0x2388 <vfprintf+0x27a>
    234e:	1f 2d       	mov	r17, r15
    2350:	19 7f       	andi	r17, 0xF9	; 249
    2352:	9f 36       	cpi	r25, 0x6F	; 111
    2354:	61 f0       	breq	.+24     	; 0x236e <vfprintf+0x260>
    2356:	90 37       	cpi	r25, 0x70	; 112
    2358:	20 f4       	brcc	.+8      	; 0x2362 <vfprintf+0x254>
    235a:	98 35       	cpi	r25, 0x58	; 88
    235c:	09 f0       	breq	.+2      	; 0x2360 <vfprintf+0x252>
    235e:	ac c0       	rjmp	.+344    	; 0x24b8 <vfprintf+0x3aa>
    2360:	0f c0       	rjmp	.+30     	; 0x2380 <vfprintf+0x272>
    2362:	90 37       	cpi	r25, 0x70	; 112
    2364:	39 f0       	breq	.+14     	; 0x2374 <vfprintf+0x266>
    2366:	98 37       	cpi	r25, 0x78	; 120
    2368:	09 f0       	breq	.+2      	; 0x236c <vfprintf+0x25e>
    236a:	a6 c0       	rjmp	.+332    	; 0x24b8 <vfprintf+0x3aa>
    236c:	04 c0       	rjmp	.+8      	; 0x2376 <vfprintf+0x268>
    236e:	28 e0       	ldi	r18, 0x08	; 8
    2370:	30 e0       	ldi	r19, 0x00	; 0
    2372:	0a c0       	rjmp	.+20     	; 0x2388 <vfprintf+0x27a>
    2374:	10 61       	ori	r17, 0x10	; 16
    2376:	14 fd       	sbrc	r17, 4
    2378:	14 60       	ori	r17, 0x04	; 4
    237a:	20 e1       	ldi	r18, 0x10	; 16
    237c:	30 e0       	ldi	r19, 0x00	; 0
    237e:	04 c0       	rjmp	.+8      	; 0x2388 <vfprintf+0x27a>
    2380:	14 fd       	sbrc	r17, 4
    2382:	16 60       	ori	r17, 0x06	; 6
    2384:	20 e1       	ldi	r18, 0x10	; 16
    2386:	32 e0       	ldi	r19, 0x02	; 2
    2388:	17 ff       	sbrs	r17, 7
    238a:	08 c0       	rjmp	.+16     	; 0x239c <vfprintf+0x28e>
    238c:	f5 01       	movw	r30, r10
    238e:	60 81       	ld	r22, Z
    2390:	71 81       	ldd	r23, Z+1	; 0x01
    2392:	82 81       	ldd	r24, Z+2	; 0x02
    2394:	93 81       	ldd	r25, Z+3	; 0x03
    2396:	44 e0       	ldi	r20, 0x04	; 4
    2398:	50 e0       	ldi	r21, 0x00	; 0
    239a:	08 c0       	rjmp	.+16     	; 0x23ac <vfprintf+0x29e>
    239c:	f5 01       	movw	r30, r10
    239e:	80 81       	ld	r24, Z
    23a0:	91 81       	ldd	r25, Z+1	; 0x01
    23a2:	bc 01       	movw	r22, r24
    23a4:	80 e0       	ldi	r24, 0x00	; 0
    23a6:	90 e0       	ldi	r25, 0x00	; 0
    23a8:	42 e0       	ldi	r20, 0x02	; 2
    23aa:	50 e0       	ldi	r21, 0x00	; 0
    23ac:	a4 0e       	add	r10, r20
    23ae:	b5 1e       	adc	r11, r21
    23b0:	a1 01       	movw	r20, r2
    23b2:	0e 94 a6 12 	call	0x254c	; 0x254c <__ultoa_invert>
    23b6:	d8 2e       	mov	r13, r24
    23b8:	d2 18       	sub	r13, r2
    23ba:	8f e7       	ldi	r24, 0x7F	; 127
    23bc:	f8 2e       	mov	r15, r24
    23be:	f1 22       	and	r15, r17
    23c0:	f6 fe       	sbrs	r15, 6
    23c2:	0b c0       	rjmp	.+22     	; 0x23da <vfprintf+0x2cc>
    23c4:	5e ef       	ldi	r21, 0xFE	; 254
    23c6:	f5 22       	and	r15, r21
    23c8:	d9 14       	cp	r13, r9
    23ca:	38 f4       	brcc	.+14     	; 0x23da <vfprintf+0x2cc>
    23cc:	f4 fe       	sbrs	r15, 4
    23ce:	07 c0       	rjmp	.+14     	; 0x23de <vfprintf+0x2d0>
    23d0:	f2 fc       	sbrc	r15, 2
    23d2:	05 c0       	rjmp	.+10     	; 0x23de <vfprintf+0x2d0>
    23d4:	8f ee       	ldi	r24, 0xEF	; 239
    23d6:	f8 22       	and	r15, r24
    23d8:	02 c0       	rjmp	.+4      	; 0x23de <vfprintf+0x2d0>
    23da:	1d 2d       	mov	r17, r13
    23dc:	01 c0       	rjmp	.+2      	; 0x23e0 <vfprintf+0x2d2>
    23de:	19 2d       	mov	r17, r9
    23e0:	f4 fe       	sbrs	r15, 4
    23e2:	0d c0       	rjmp	.+26     	; 0x23fe <vfprintf+0x2f0>
    23e4:	fe 01       	movw	r30, r28
    23e6:	ed 0d       	add	r30, r13
    23e8:	f1 1d       	adc	r31, r1
    23ea:	80 81       	ld	r24, Z
    23ec:	80 33       	cpi	r24, 0x30	; 48
    23ee:	19 f4       	brne	.+6      	; 0x23f6 <vfprintf+0x2e8>
    23f0:	99 ee       	ldi	r25, 0xE9	; 233
    23f2:	f9 22       	and	r15, r25
    23f4:	08 c0       	rjmp	.+16     	; 0x2406 <vfprintf+0x2f8>
    23f6:	1f 5f       	subi	r17, 0xFF	; 255
    23f8:	f2 fe       	sbrs	r15, 2
    23fa:	05 c0       	rjmp	.+10     	; 0x2406 <vfprintf+0x2f8>
    23fc:	03 c0       	rjmp	.+6      	; 0x2404 <vfprintf+0x2f6>
    23fe:	8f 2d       	mov	r24, r15
    2400:	86 78       	andi	r24, 0x86	; 134
    2402:	09 f0       	breq	.+2      	; 0x2406 <vfprintf+0x2f8>
    2404:	1f 5f       	subi	r17, 0xFF	; 255
    2406:	0f 2d       	mov	r16, r15
    2408:	f3 fc       	sbrc	r15, 3
    240a:	14 c0       	rjmp	.+40     	; 0x2434 <vfprintf+0x326>
    240c:	f0 fe       	sbrs	r15, 0
    240e:	0f c0       	rjmp	.+30     	; 0x242e <vfprintf+0x320>
    2410:	1e 15       	cp	r17, r14
    2412:	10 f0       	brcs	.+4      	; 0x2418 <vfprintf+0x30a>
    2414:	9d 2c       	mov	r9, r13
    2416:	0b c0       	rjmp	.+22     	; 0x242e <vfprintf+0x320>
    2418:	9d 2c       	mov	r9, r13
    241a:	9e 0c       	add	r9, r14
    241c:	91 1a       	sub	r9, r17
    241e:	1e 2d       	mov	r17, r14
    2420:	06 c0       	rjmp	.+12     	; 0x242e <vfprintf+0x320>
    2422:	80 e2       	ldi	r24, 0x20	; 32
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	b3 01       	movw	r22, r6
    2428:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    242c:	1f 5f       	subi	r17, 0xFF	; 255
    242e:	1e 15       	cp	r17, r14
    2430:	c0 f3       	brcs	.-16     	; 0x2422 <vfprintf+0x314>
    2432:	04 c0       	rjmp	.+8      	; 0x243c <vfprintf+0x32e>
    2434:	1e 15       	cp	r17, r14
    2436:	10 f4       	brcc	.+4      	; 0x243c <vfprintf+0x32e>
    2438:	e1 1a       	sub	r14, r17
    243a:	01 c0       	rjmp	.+2      	; 0x243e <vfprintf+0x330>
    243c:	ee 24       	eor	r14, r14
    243e:	04 ff       	sbrs	r16, 4
    2440:	0f c0       	rjmp	.+30     	; 0x2460 <vfprintf+0x352>
    2442:	80 e3       	ldi	r24, 0x30	; 48
    2444:	90 e0       	ldi	r25, 0x00	; 0
    2446:	b3 01       	movw	r22, r6
    2448:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    244c:	02 ff       	sbrs	r16, 2
    244e:	1d c0       	rjmp	.+58     	; 0x248a <vfprintf+0x37c>
    2450:	01 fd       	sbrc	r16, 1
    2452:	03 c0       	rjmp	.+6      	; 0x245a <vfprintf+0x34c>
    2454:	88 e7       	ldi	r24, 0x78	; 120
    2456:	90 e0       	ldi	r25, 0x00	; 0
    2458:	0e c0       	rjmp	.+28     	; 0x2476 <vfprintf+0x368>
    245a:	88 e5       	ldi	r24, 0x58	; 88
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	0b c0       	rjmp	.+22     	; 0x2476 <vfprintf+0x368>
    2460:	80 2f       	mov	r24, r16
    2462:	86 78       	andi	r24, 0x86	; 134
    2464:	91 f0       	breq	.+36     	; 0x248a <vfprintf+0x37c>
    2466:	01 ff       	sbrs	r16, 1
    2468:	02 c0       	rjmp	.+4      	; 0x246e <vfprintf+0x360>
    246a:	8b e2       	ldi	r24, 0x2B	; 43
    246c:	01 c0       	rjmp	.+2      	; 0x2470 <vfprintf+0x362>
    246e:	80 e2       	ldi	r24, 0x20	; 32
    2470:	f7 fc       	sbrc	r15, 7
    2472:	8d e2       	ldi	r24, 0x2D	; 45
    2474:	90 e0       	ldi	r25, 0x00	; 0
    2476:	b3 01       	movw	r22, r6
    2478:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    247c:	06 c0       	rjmp	.+12     	; 0x248a <vfprintf+0x37c>
    247e:	80 e3       	ldi	r24, 0x30	; 48
    2480:	90 e0       	ldi	r25, 0x00	; 0
    2482:	b3 01       	movw	r22, r6
    2484:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    2488:	9a 94       	dec	r9
    248a:	d9 14       	cp	r13, r9
    248c:	c0 f3       	brcs	.-16     	; 0x247e <vfprintf+0x370>
    248e:	da 94       	dec	r13
    2490:	f1 01       	movw	r30, r2
    2492:	ed 0d       	add	r30, r13
    2494:	f1 1d       	adc	r31, r1
    2496:	80 81       	ld	r24, Z
    2498:	90 e0       	ldi	r25, 0x00	; 0
    249a:	b3 01       	movw	r22, r6
    249c:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    24a0:	dd 20       	and	r13, r13
    24a2:	a9 f7       	brne	.-22     	; 0x248e <vfprintf+0x380>
    24a4:	06 c0       	rjmp	.+12     	; 0x24b2 <vfprintf+0x3a4>
    24a6:	80 e2       	ldi	r24, 0x20	; 32
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	b3 01       	movw	r22, r6
    24ac:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <fputc>
    24b0:	ea 94       	dec	r14
    24b2:	ee 20       	and	r14, r14
    24b4:	c1 f7       	brne	.-16     	; 0x24a6 <vfprintf+0x398>
    24b6:	43 ce       	rjmp	.-890    	; 0x213e <vfprintf+0x30>
    24b8:	f3 01       	movw	r30, r6
    24ba:	66 81       	ldd	r22, Z+6	; 0x06
    24bc:	77 81       	ldd	r23, Z+7	; 0x07
    24be:	cb 01       	movw	r24, r22
    24c0:	2b 96       	adiw	r28, 0x0b	; 11
    24c2:	e2 e1       	ldi	r30, 0x12	; 18
    24c4:	0c 94 48 10 	jmp	0x2090	; 0x2090 <__epilogue_restores__>

000024c8 <strnlen_P>:
    24c8:	fc 01       	movw	r30, r24
    24ca:	05 90       	lpm	r0, Z+
    24cc:	61 50       	subi	r22, 0x01	; 1
    24ce:	70 40       	sbci	r23, 0x00	; 0
    24d0:	01 10       	cpse	r0, r1
    24d2:	d8 f7       	brcc	.-10     	; 0x24ca <strnlen_P+0x2>
    24d4:	80 95       	com	r24
    24d6:	90 95       	com	r25
    24d8:	8e 0f       	add	r24, r30
    24da:	9f 1f       	adc	r25, r31
    24dc:	08 95       	ret

000024de <strnlen>:
    24de:	fc 01       	movw	r30, r24
    24e0:	61 50       	subi	r22, 0x01	; 1
    24e2:	70 40       	sbci	r23, 0x00	; 0
    24e4:	01 90       	ld	r0, Z+
    24e6:	01 10       	cpse	r0, r1
    24e8:	d8 f7       	brcc	.-10     	; 0x24e0 <strnlen+0x2>
    24ea:	80 95       	com	r24
    24ec:	90 95       	com	r25
    24ee:	8e 0f       	add	r24, r30
    24f0:	9f 1f       	adc	r25, r31
    24f2:	08 95       	ret

000024f4 <fputc>:
    24f4:	0f 93       	push	r16
    24f6:	1f 93       	push	r17
    24f8:	cf 93       	push	r28
    24fa:	df 93       	push	r29
    24fc:	8c 01       	movw	r16, r24
    24fe:	eb 01       	movw	r28, r22
    2500:	8b 81       	ldd	r24, Y+3	; 0x03
    2502:	81 ff       	sbrs	r24, 1
    2504:	1b c0       	rjmp	.+54     	; 0x253c <fputc+0x48>
    2506:	82 ff       	sbrs	r24, 2
    2508:	0d c0       	rjmp	.+26     	; 0x2524 <fputc+0x30>
    250a:	2e 81       	ldd	r18, Y+6	; 0x06
    250c:	3f 81       	ldd	r19, Y+7	; 0x07
    250e:	8c 81       	ldd	r24, Y+4	; 0x04
    2510:	9d 81       	ldd	r25, Y+5	; 0x05
    2512:	28 17       	cp	r18, r24
    2514:	39 07       	cpc	r19, r25
    2516:	64 f4       	brge	.+24     	; 0x2530 <fputc+0x3c>
    2518:	e8 81       	ld	r30, Y
    251a:	f9 81       	ldd	r31, Y+1	; 0x01
    251c:	01 93       	st	Z+, r16
    251e:	f9 83       	std	Y+1, r31	; 0x01
    2520:	e8 83       	st	Y, r30
    2522:	06 c0       	rjmp	.+12     	; 0x2530 <fputc+0x3c>
    2524:	e8 85       	ldd	r30, Y+8	; 0x08
    2526:	f9 85       	ldd	r31, Y+9	; 0x09
    2528:	80 2f       	mov	r24, r16
    252a:	09 95       	icall
    252c:	89 2b       	or	r24, r25
    252e:	31 f4       	brne	.+12     	; 0x253c <fputc+0x48>
    2530:	8e 81       	ldd	r24, Y+6	; 0x06
    2532:	9f 81       	ldd	r25, Y+7	; 0x07
    2534:	01 96       	adiw	r24, 0x01	; 1
    2536:	9f 83       	std	Y+7, r25	; 0x07
    2538:	8e 83       	std	Y+6, r24	; 0x06
    253a:	02 c0       	rjmp	.+4      	; 0x2540 <fputc+0x4c>
    253c:	0f ef       	ldi	r16, 0xFF	; 255
    253e:	1f ef       	ldi	r17, 0xFF	; 255
    2540:	c8 01       	movw	r24, r16
    2542:	df 91       	pop	r29
    2544:	cf 91       	pop	r28
    2546:	1f 91       	pop	r17
    2548:	0f 91       	pop	r16
    254a:	08 95       	ret

0000254c <__ultoa_invert>:
    254c:	fa 01       	movw	r30, r20
    254e:	aa 27       	eor	r26, r26
    2550:	28 30       	cpi	r18, 0x08	; 8
    2552:	51 f1       	breq	.+84     	; 0x25a8 <__ultoa_invert+0x5c>
    2554:	20 31       	cpi	r18, 0x10	; 16
    2556:	81 f1       	breq	.+96     	; 0x25b8 <__ultoa_invert+0x6c>
    2558:	e8 94       	clt
    255a:	6f 93       	push	r22
    255c:	6e 7f       	andi	r22, 0xFE	; 254
    255e:	6e 5f       	subi	r22, 0xFE	; 254
    2560:	7f 4f       	sbci	r23, 0xFF	; 255
    2562:	8f 4f       	sbci	r24, 0xFF	; 255
    2564:	9f 4f       	sbci	r25, 0xFF	; 255
    2566:	af 4f       	sbci	r26, 0xFF	; 255
    2568:	b1 e0       	ldi	r27, 0x01	; 1
    256a:	3e d0       	rcall	.+124    	; 0x25e8 <__ultoa_invert+0x9c>
    256c:	b4 e0       	ldi	r27, 0x04	; 4
    256e:	3c d0       	rcall	.+120    	; 0x25e8 <__ultoa_invert+0x9c>
    2570:	67 0f       	add	r22, r23
    2572:	78 1f       	adc	r23, r24
    2574:	89 1f       	adc	r24, r25
    2576:	9a 1f       	adc	r25, r26
    2578:	a1 1d       	adc	r26, r1
    257a:	68 0f       	add	r22, r24
    257c:	79 1f       	adc	r23, r25
    257e:	8a 1f       	adc	r24, r26
    2580:	91 1d       	adc	r25, r1
    2582:	a1 1d       	adc	r26, r1
    2584:	6a 0f       	add	r22, r26
    2586:	71 1d       	adc	r23, r1
    2588:	81 1d       	adc	r24, r1
    258a:	91 1d       	adc	r25, r1
    258c:	a1 1d       	adc	r26, r1
    258e:	20 d0       	rcall	.+64     	; 0x25d0 <__ultoa_invert+0x84>
    2590:	09 f4       	brne	.+2      	; 0x2594 <__ultoa_invert+0x48>
    2592:	68 94       	set
    2594:	3f 91       	pop	r19
    2596:	2a e0       	ldi	r18, 0x0A	; 10
    2598:	26 9f       	mul	r18, r22
    259a:	11 24       	eor	r1, r1
    259c:	30 19       	sub	r19, r0
    259e:	30 5d       	subi	r19, 0xD0	; 208
    25a0:	31 93       	st	Z+, r19
    25a2:	de f6       	brtc	.-74     	; 0x255a <__ultoa_invert+0xe>
    25a4:	cf 01       	movw	r24, r30
    25a6:	08 95       	ret
    25a8:	46 2f       	mov	r20, r22
    25aa:	47 70       	andi	r20, 0x07	; 7
    25ac:	40 5d       	subi	r20, 0xD0	; 208
    25ae:	41 93       	st	Z+, r20
    25b0:	b3 e0       	ldi	r27, 0x03	; 3
    25b2:	0f d0       	rcall	.+30     	; 0x25d2 <__ultoa_invert+0x86>
    25b4:	c9 f7       	brne	.-14     	; 0x25a8 <__ultoa_invert+0x5c>
    25b6:	f6 cf       	rjmp	.-20     	; 0x25a4 <__ultoa_invert+0x58>
    25b8:	46 2f       	mov	r20, r22
    25ba:	4f 70       	andi	r20, 0x0F	; 15
    25bc:	40 5d       	subi	r20, 0xD0	; 208
    25be:	4a 33       	cpi	r20, 0x3A	; 58
    25c0:	18 f0       	brcs	.+6      	; 0x25c8 <__ultoa_invert+0x7c>
    25c2:	49 5d       	subi	r20, 0xD9	; 217
    25c4:	31 fd       	sbrc	r19, 1
    25c6:	40 52       	subi	r20, 0x20	; 32
    25c8:	41 93       	st	Z+, r20
    25ca:	02 d0       	rcall	.+4      	; 0x25d0 <__ultoa_invert+0x84>
    25cc:	a9 f7       	brne	.-22     	; 0x25b8 <__ultoa_invert+0x6c>
    25ce:	ea cf       	rjmp	.-44     	; 0x25a4 <__ultoa_invert+0x58>
    25d0:	b4 e0       	ldi	r27, 0x04	; 4
    25d2:	a6 95       	lsr	r26
    25d4:	97 95       	ror	r25
    25d6:	87 95       	ror	r24
    25d8:	77 95       	ror	r23
    25da:	67 95       	ror	r22
    25dc:	ba 95       	dec	r27
    25de:	c9 f7       	brne	.-14     	; 0x25d2 <__ultoa_invert+0x86>
    25e0:	00 97       	sbiw	r24, 0x00	; 0
    25e2:	61 05       	cpc	r22, r1
    25e4:	71 05       	cpc	r23, r1
    25e6:	08 95       	ret
    25e8:	9b 01       	movw	r18, r22
    25ea:	ac 01       	movw	r20, r24
    25ec:	0a 2e       	mov	r0, r26
    25ee:	06 94       	lsr	r0
    25f0:	57 95       	ror	r21
    25f2:	47 95       	ror	r20
    25f4:	37 95       	ror	r19
    25f6:	27 95       	ror	r18
    25f8:	ba 95       	dec	r27
    25fa:	c9 f7       	brne	.-14     	; 0x25ee <__ultoa_invert+0xa2>
    25fc:	62 0f       	add	r22, r18
    25fe:	73 1f       	adc	r23, r19
    2600:	84 1f       	adc	r24, r20
    2602:	95 1f       	adc	r25, r21
    2604:	a0 1d       	adc	r26, r0
    2606:	08 95       	ret

00002608 <_exit>:
    2608:	f8 94       	cli

0000260a <__stop_program>:
    260a:	ff cf       	rjmp	.-2      	; 0x260a <__stop_program>
