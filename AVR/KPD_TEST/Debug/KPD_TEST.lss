
KPD_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002998  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  00002998  00002a2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  0080007c  0080007c  00002a48  2**0
                  ALLOC
  3 .stab         00001b18  00000000  00000000  00002a48  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e38  00000000  00000000  00004560  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00005398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000054d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00005648  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00007291  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000817c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00008f2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000908c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00009319  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009ae7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e9       	ldi	r30, 0x98	; 152
      68:	f9 e2       	ldi	r31, 0x29	; 41
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 37       	cpi	r26, 0x7C	; 124
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	ac e7       	ldi	r26, 0x7C	; 124
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ad 38       	cpi	r26, 0x8D	; 141
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 61 0f 	call	0x1ec2	; 0x1ec2 <main>
      8a:	0c 94 ca 14 	jmp	0x2994	; 0x2994 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 f2 11 	jmp	0x23e4	; 0x23e4 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a3 e6       	ldi	r26, 0x63	; 99
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 0e 12 	jmp	0x241c	; 0x241c <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 fe 11 	jmp	0x23fc	; 0x23fc <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 1a 12 	jmp	0x2434	; 0x2434 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 fe 11 	jmp	0x23fc	; 0x23fc <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 1a 12 	jmp	0x2434	; 0x2434 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 f2 11 	jmp	0x23e4	; 0x23e4 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	83 e6       	ldi	r24, 0x63	; 99
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 0e 12 	jmp	0x241c	; 0x241c <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 fe 11 	jmp	0x23fc	; 0x23fc <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 1a 12 	jmp	0x2434	; 0x2434 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 fe 11 	jmp	0x23fc	; 0x23fc <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 1a 12 	jmp	0x2434	; 0x2434 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 fe 11 	jmp	0x23fc	; 0x23fc <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 1a 12 	jmp	0x2434	; 0x2434 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 02 12 	jmp	0x2404	; 0x2404 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 1e 12 	jmp	0x243c	; 0x243c <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <M_DIO_Vid_WrtPinDir>:
/*
*public functions defintions 
*/

void M_DIO_Vid_WrtPinDir(u8 copy_u8_port,u8 copy_u8_pin,u8 copy_u8_direcrion)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	00 d0       	rcall	.+0      	; 0xb4c <M_DIO_Vid_WrtPinDir+0x6>
     b4c:	00 d0       	rcall	.+0      	; 0xb4e <M_DIO_Vid_WrtPinDir+0x8>
     b4e:	0f 92       	push	r0
     b50:	cd b7       	in	r28, 0x3d	; 61
     b52:	de b7       	in	r29, 0x3e	; 62
     b54:	89 83       	std	Y+1, r24	; 0x01
     b56:	6a 83       	std	Y+2, r22	; 0x02
     b58:	4b 83       	std	Y+3, r20	; 0x03
	switch(copy_u8_port)
     b5a:	89 81       	ldd	r24, Y+1	; 0x01
     b5c:	28 2f       	mov	r18, r24
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	3d 83       	std	Y+5, r19	; 0x05
     b62:	2c 83       	std	Y+4, r18	; 0x04
     b64:	6c 81       	ldd	r22, Y+4	; 0x04
     b66:	7d 81       	ldd	r23, Y+5	; 0x05
     b68:	61 30       	cpi	r22, 0x01	; 1
     b6a:	71 05       	cpc	r23, r1
     b6c:	d1 f1       	breq	.+116    	; 0xbe2 <M_DIO_Vid_WrtPinDir+0x9c>
     b6e:	8c 81       	ldd	r24, Y+4	; 0x04
     b70:	9d 81       	ldd	r25, Y+5	; 0x05
     b72:	82 30       	cpi	r24, 0x02	; 2
     b74:	91 05       	cpc	r25, r1
     b76:	34 f4       	brge	.+12     	; 0xb84 <M_DIO_Vid_WrtPinDir+0x3e>
     b78:	2c 81       	ldd	r18, Y+4	; 0x04
     b7a:	3d 81       	ldd	r19, Y+5	; 0x05
     b7c:	21 15       	cp	r18, r1
     b7e:	31 05       	cpc	r19, r1
     b80:	71 f0       	breq	.+28     	; 0xb9e <M_DIO_Vid_WrtPinDir+0x58>
     b82:	94 c0       	rjmp	.+296    	; 0xcac <M_DIO_Vid_WrtPinDir+0x166>
     b84:	6c 81       	ldd	r22, Y+4	; 0x04
     b86:	7d 81       	ldd	r23, Y+5	; 0x05
     b88:	62 30       	cpi	r22, 0x02	; 2
     b8a:	71 05       	cpc	r23, r1
     b8c:	09 f4       	brne	.+2      	; 0xb90 <M_DIO_Vid_WrtPinDir+0x4a>
     b8e:	4b c0       	rjmp	.+150    	; 0xc26 <M_DIO_Vid_WrtPinDir+0xe0>
     b90:	8c 81       	ldd	r24, Y+4	; 0x04
     b92:	9d 81       	ldd	r25, Y+5	; 0x05
     b94:	83 30       	cpi	r24, 0x03	; 3
     b96:	91 05       	cpc	r25, r1
     b98:	09 f4       	brne	.+2      	; 0xb9c <M_DIO_Vid_WrtPinDir+0x56>
     b9a:	67 c0       	rjmp	.+206    	; 0xc6a <M_DIO_Vid_WrtPinDir+0x124>
     b9c:	87 c0       	rjmp	.+270    	; 0xcac <M_DIO_Vid_WrtPinDir+0x166>
	{
		case M_DIO_PORTA: WRT_BIT(DDRA,copy_u8_pin,copy_u8_direcrion); break;
     b9e:	aa e3       	ldi	r26, 0x3A	; 58
     ba0:	b0 e0       	ldi	r27, 0x00	; 0
     ba2:	ea e3       	ldi	r30, 0x3A	; 58
     ba4:	f0 e0       	ldi	r31, 0x00	; 0
     ba6:	80 81       	ld	r24, Z
     ba8:	48 2f       	mov	r20, r24
     baa:	8a 81       	ldd	r24, Y+2	; 0x02
     bac:	28 2f       	mov	r18, r24
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	02 c0       	rjmp	.+4      	; 0xbba <M_DIO_Vid_WrtPinDir+0x74>
     bb6:	88 0f       	add	r24, r24
     bb8:	99 1f       	adc	r25, r25
     bba:	2a 95       	dec	r18
     bbc:	e2 f7       	brpl	.-8      	; 0xbb6 <M_DIO_Vid_WrtPinDir+0x70>
     bbe:	80 95       	com	r24
     bc0:	48 23       	and	r20, r24
     bc2:	8b 81       	ldd	r24, Y+3	; 0x03
     bc4:	28 2f       	mov	r18, r24
     bc6:	30 e0       	ldi	r19, 0x00	; 0
     bc8:	8a 81       	ldd	r24, Y+2	; 0x02
     bca:	88 2f       	mov	r24, r24
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	b9 01       	movw	r22, r18
     bd0:	02 c0       	rjmp	.+4      	; 0xbd6 <M_DIO_Vid_WrtPinDir+0x90>
     bd2:	66 0f       	add	r22, r22
     bd4:	77 1f       	adc	r23, r23
     bd6:	8a 95       	dec	r24
     bd8:	e2 f7       	brpl	.-8      	; 0xbd2 <M_DIO_Vid_WrtPinDir+0x8c>
     bda:	cb 01       	movw	r24, r22
     bdc:	84 2b       	or	r24, r20
     bde:	8c 93       	st	X, r24
     be0:	65 c0       	rjmp	.+202    	; 0xcac <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTB: WRT_BIT(DDRB,copy_u8_pin,copy_u8_direcrion); break;
     be2:	a7 e3       	ldi	r26, 0x37	; 55
     be4:	b0 e0       	ldi	r27, 0x00	; 0
     be6:	e7 e3       	ldi	r30, 0x37	; 55
     be8:	f0 e0       	ldi	r31, 0x00	; 0
     bea:	80 81       	ld	r24, Z
     bec:	48 2f       	mov	r20, r24
     bee:	8a 81       	ldd	r24, Y+2	; 0x02
     bf0:	28 2f       	mov	r18, r24
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	81 e0       	ldi	r24, 0x01	; 1
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	02 c0       	rjmp	.+4      	; 0xbfe <M_DIO_Vid_WrtPinDir+0xb8>
     bfa:	88 0f       	add	r24, r24
     bfc:	99 1f       	adc	r25, r25
     bfe:	2a 95       	dec	r18
     c00:	e2 f7       	brpl	.-8      	; 0xbfa <M_DIO_Vid_WrtPinDir+0xb4>
     c02:	80 95       	com	r24
     c04:	48 23       	and	r20, r24
     c06:	8b 81       	ldd	r24, Y+3	; 0x03
     c08:	28 2f       	mov	r18, r24
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	8a 81       	ldd	r24, Y+2	; 0x02
     c0e:	88 2f       	mov	r24, r24
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	b9 01       	movw	r22, r18
     c14:	02 c0       	rjmp	.+4      	; 0xc1a <M_DIO_Vid_WrtPinDir+0xd4>
     c16:	66 0f       	add	r22, r22
     c18:	77 1f       	adc	r23, r23
     c1a:	8a 95       	dec	r24
     c1c:	e2 f7       	brpl	.-8      	; 0xc16 <M_DIO_Vid_WrtPinDir+0xd0>
     c1e:	cb 01       	movw	r24, r22
     c20:	84 2b       	or	r24, r20
     c22:	8c 93       	st	X, r24
     c24:	43 c0       	rjmp	.+134    	; 0xcac <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTC: WRT_BIT(DDRC,copy_u8_pin,copy_u8_direcrion); break;
     c26:	a4 e3       	ldi	r26, 0x34	; 52
     c28:	b0 e0       	ldi	r27, 0x00	; 0
     c2a:	e4 e3       	ldi	r30, 0x34	; 52
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	80 81       	ld	r24, Z
     c30:	48 2f       	mov	r20, r24
     c32:	8a 81       	ldd	r24, Y+2	; 0x02
     c34:	28 2f       	mov	r18, r24
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	81 e0       	ldi	r24, 0x01	; 1
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	02 c0       	rjmp	.+4      	; 0xc42 <M_DIO_Vid_WrtPinDir+0xfc>
     c3e:	88 0f       	add	r24, r24
     c40:	99 1f       	adc	r25, r25
     c42:	2a 95       	dec	r18
     c44:	e2 f7       	brpl	.-8      	; 0xc3e <M_DIO_Vid_WrtPinDir+0xf8>
     c46:	80 95       	com	r24
     c48:	48 23       	and	r20, r24
     c4a:	8b 81       	ldd	r24, Y+3	; 0x03
     c4c:	28 2f       	mov	r18, r24
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	8a 81       	ldd	r24, Y+2	; 0x02
     c52:	88 2f       	mov	r24, r24
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	b9 01       	movw	r22, r18
     c58:	02 c0       	rjmp	.+4      	; 0xc5e <M_DIO_Vid_WrtPinDir+0x118>
     c5a:	66 0f       	add	r22, r22
     c5c:	77 1f       	adc	r23, r23
     c5e:	8a 95       	dec	r24
     c60:	e2 f7       	brpl	.-8      	; 0xc5a <M_DIO_Vid_WrtPinDir+0x114>
     c62:	cb 01       	movw	r24, r22
     c64:	84 2b       	or	r24, r20
     c66:	8c 93       	st	X, r24
     c68:	21 c0       	rjmp	.+66     	; 0xcac <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTD: WRT_BIT(DDRD,copy_u8_pin,copy_u8_direcrion); break;
     c6a:	a1 e3       	ldi	r26, 0x31	; 49
     c6c:	b0 e0       	ldi	r27, 0x00	; 0
     c6e:	e1 e3       	ldi	r30, 0x31	; 49
     c70:	f0 e0       	ldi	r31, 0x00	; 0
     c72:	80 81       	ld	r24, Z
     c74:	48 2f       	mov	r20, r24
     c76:	8a 81       	ldd	r24, Y+2	; 0x02
     c78:	28 2f       	mov	r18, r24
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	81 e0       	ldi	r24, 0x01	; 1
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <M_DIO_Vid_WrtPinDir+0x140>
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	2a 95       	dec	r18
     c88:	e2 f7       	brpl	.-8      	; 0xc82 <M_DIO_Vid_WrtPinDir+0x13c>
     c8a:	80 95       	com	r24
     c8c:	48 23       	and	r20, r24
     c8e:	8b 81       	ldd	r24, Y+3	; 0x03
     c90:	28 2f       	mov	r18, r24
     c92:	30 e0       	ldi	r19, 0x00	; 0
     c94:	8a 81       	ldd	r24, Y+2	; 0x02
     c96:	88 2f       	mov	r24, r24
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	b9 01       	movw	r22, r18
     c9c:	02 c0       	rjmp	.+4      	; 0xca2 <M_DIO_Vid_WrtPinDir+0x15c>
     c9e:	66 0f       	add	r22, r22
     ca0:	77 1f       	adc	r23, r23
     ca2:	8a 95       	dec	r24
     ca4:	e2 f7       	brpl	.-8      	; 0xc9e <M_DIO_Vid_WrtPinDir+0x158>
     ca6:	cb 01       	movw	r24, r22
     ca8:	84 2b       	or	r24, r20
     caa:	8c 93       	st	X, r24
		default:break;
	}
}
     cac:	0f 90       	pop	r0
     cae:	0f 90       	pop	r0
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	0f 90       	pop	r0
     cb6:	cf 91       	pop	r28
     cb8:	df 91       	pop	r29
     cba:	08 95       	ret

00000cbc <M_DIO_Vid_wrtPinVal>:
void M_DIO_Vid_wrtPinVal(u8 copy_u8_Port,u8 copy_u8_Pin,u8 copy_u8_pinVal)
{
     cbc:	df 93       	push	r29
     cbe:	cf 93       	push	r28
     cc0:	00 d0       	rcall	.+0      	; 0xcc2 <M_DIO_Vid_wrtPinVal+0x6>
     cc2:	00 d0       	rcall	.+0      	; 0xcc4 <M_DIO_Vid_wrtPinVal+0x8>
     cc4:	0f 92       	push	r0
     cc6:	cd b7       	in	r28, 0x3d	; 61
     cc8:	de b7       	in	r29, 0x3e	; 62
     cca:	89 83       	std	Y+1, r24	; 0x01
     ccc:	6a 83       	std	Y+2, r22	; 0x02
     cce:	4b 83       	std	Y+3, r20	; 0x03
	switch(copy_u8_Port)
     cd0:	89 81       	ldd	r24, Y+1	; 0x01
     cd2:	28 2f       	mov	r18, r24
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	3d 83       	std	Y+5, r19	; 0x05
     cd8:	2c 83       	std	Y+4, r18	; 0x04
     cda:	6c 81       	ldd	r22, Y+4	; 0x04
     cdc:	7d 81       	ldd	r23, Y+5	; 0x05
     cde:	61 30       	cpi	r22, 0x01	; 1
     ce0:	71 05       	cpc	r23, r1
     ce2:	d1 f1       	breq	.+116    	; 0xd58 <M_DIO_Vid_wrtPinVal+0x9c>
     ce4:	8c 81       	ldd	r24, Y+4	; 0x04
     ce6:	9d 81       	ldd	r25, Y+5	; 0x05
     ce8:	82 30       	cpi	r24, 0x02	; 2
     cea:	91 05       	cpc	r25, r1
     cec:	34 f4       	brge	.+12     	; 0xcfa <M_DIO_Vid_wrtPinVal+0x3e>
     cee:	2c 81       	ldd	r18, Y+4	; 0x04
     cf0:	3d 81       	ldd	r19, Y+5	; 0x05
     cf2:	21 15       	cp	r18, r1
     cf4:	31 05       	cpc	r19, r1
     cf6:	71 f0       	breq	.+28     	; 0xd14 <M_DIO_Vid_wrtPinVal+0x58>
     cf8:	94 c0       	rjmp	.+296    	; 0xe22 <M_DIO_Vid_wrtPinVal+0x166>
     cfa:	6c 81       	ldd	r22, Y+4	; 0x04
     cfc:	7d 81       	ldd	r23, Y+5	; 0x05
     cfe:	62 30       	cpi	r22, 0x02	; 2
     d00:	71 05       	cpc	r23, r1
     d02:	09 f4       	brne	.+2      	; 0xd06 <M_DIO_Vid_wrtPinVal+0x4a>
     d04:	4b c0       	rjmp	.+150    	; 0xd9c <M_DIO_Vid_wrtPinVal+0xe0>
     d06:	8c 81       	ldd	r24, Y+4	; 0x04
     d08:	9d 81       	ldd	r25, Y+5	; 0x05
     d0a:	83 30       	cpi	r24, 0x03	; 3
     d0c:	91 05       	cpc	r25, r1
     d0e:	09 f4       	brne	.+2      	; 0xd12 <M_DIO_Vid_wrtPinVal+0x56>
     d10:	67 c0       	rjmp	.+206    	; 0xde0 <M_DIO_Vid_wrtPinVal+0x124>
     d12:	87 c0       	rjmp	.+270    	; 0xe22 <M_DIO_Vid_wrtPinVal+0x166>
	{
		case M_DIO_PORTA: WRT_BIT(PORTA,copy_u8_Pin,copy_u8_pinVal); break;
     d14:	ab e3       	ldi	r26, 0x3B	; 59
     d16:	b0 e0       	ldi	r27, 0x00	; 0
     d18:	eb e3       	ldi	r30, 0x3B	; 59
     d1a:	f0 e0       	ldi	r31, 0x00	; 0
     d1c:	80 81       	ld	r24, Z
     d1e:	48 2f       	mov	r20, r24
     d20:	8a 81       	ldd	r24, Y+2	; 0x02
     d22:	28 2f       	mov	r18, r24
     d24:	30 e0       	ldi	r19, 0x00	; 0
     d26:	81 e0       	ldi	r24, 0x01	; 1
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	02 c0       	rjmp	.+4      	; 0xd30 <M_DIO_Vid_wrtPinVal+0x74>
     d2c:	88 0f       	add	r24, r24
     d2e:	99 1f       	adc	r25, r25
     d30:	2a 95       	dec	r18
     d32:	e2 f7       	brpl	.-8      	; 0xd2c <M_DIO_Vid_wrtPinVal+0x70>
     d34:	80 95       	com	r24
     d36:	48 23       	and	r20, r24
     d38:	8b 81       	ldd	r24, Y+3	; 0x03
     d3a:	28 2f       	mov	r18, r24
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	8a 81       	ldd	r24, Y+2	; 0x02
     d40:	88 2f       	mov	r24, r24
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	b9 01       	movw	r22, r18
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <M_DIO_Vid_wrtPinVal+0x90>
     d48:	66 0f       	add	r22, r22
     d4a:	77 1f       	adc	r23, r23
     d4c:	8a 95       	dec	r24
     d4e:	e2 f7       	brpl	.-8      	; 0xd48 <M_DIO_Vid_wrtPinVal+0x8c>
     d50:	cb 01       	movw	r24, r22
     d52:	84 2b       	or	r24, r20
     d54:	8c 93       	st	X, r24
     d56:	65 c0       	rjmp	.+202    	; 0xe22 <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTB: WRT_BIT(PORTB,copy_u8_Pin,copy_u8_pinVal); break;
     d58:	a8 e3       	ldi	r26, 0x38	; 56
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	e8 e3       	ldi	r30, 0x38	; 56
     d5e:	f0 e0       	ldi	r31, 0x00	; 0
     d60:	80 81       	ld	r24, Z
     d62:	48 2f       	mov	r20, r24
     d64:	8a 81       	ldd	r24, Y+2	; 0x02
     d66:	28 2f       	mov	r18, r24
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	02 c0       	rjmp	.+4      	; 0xd74 <M_DIO_Vid_wrtPinVal+0xb8>
     d70:	88 0f       	add	r24, r24
     d72:	99 1f       	adc	r25, r25
     d74:	2a 95       	dec	r18
     d76:	e2 f7       	brpl	.-8      	; 0xd70 <M_DIO_Vid_wrtPinVal+0xb4>
     d78:	80 95       	com	r24
     d7a:	48 23       	and	r20, r24
     d7c:	8b 81       	ldd	r24, Y+3	; 0x03
     d7e:	28 2f       	mov	r18, r24
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	8a 81       	ldd	r24, Y+2	; 0x02
     d84:	88 2f       	mov	r24, r24
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	b9 01       	movw	r22, r18
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <M_DIO_Vid_wrtPinVal+0xd4>
     d8c:	66 0f       	add	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	8a 95       	dec	r24
     d92:	e2 f7       	brpl	.-8      	; 0xd8c <M_DIO_Vid_wrtPinVal+0xd0>
     d94:	cb 01       	movw	r24, r22
     d96:	84 2b       	or	r24, r20
     d98:	8c 93       	st	X, r24
     d9a:	43 c0       	rjmp	.+134    	; 0xe22 <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTC: WRT_BIT(PORTC,copy_u8_Pin,copy_u8_pinVal); break;
     d9c:	a5 e3       	ldi	r26, 0x35	; 53
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	e5 e3       	ldi	r30, 0x35	; 53
     da2:	f0 e0       	ldi	r31, 0x00	; 0
     da4:	80 81       	ld	r24, Z
     da6:	48 2f       	mov	r20, r24
     da8:	8a 81       	ldd	r24, Y+2	; 0x02
     daa:	28 2f       	mov	r18, r24
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	81 e0       	ldi	r24, 0x01	; 1
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	02 c0       	rjmp	.+4      	; 0xdb8 <M_DIO_Vid_wrtPinVal+0xfc>
     db4:	88 0f       	add	r24, r24
     db6:	99 1f       	adc	r25, r25
     db8:	2a 95       	dec	r18
     dba:	e2 f7       	brpl	.-8      	; 0xdb4 <M_DIO_Vid_wrtPinVal+0xf8>
     dbc:	80 95       	com	r24
     dbe:	48 23       	and	r20, r24
     dc0:	8b 81       	ldd	r24, Y+3	; 0x03
     dc2:	28 2f       	mov	r18, r24
     dc4:	30 e0       	ldi	r19, 0x00	; 0
     dc6:	8a 81       	ldd	r24, Y+2	; 0x02
     dc8:	88 2f       	mov	r24, r24
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	b9 01       	movw	r22, r18
     dce:	02 c0       	rjmp	.+4      	; 0xdd4 <M_DIO_Vid_wrtPinVal+0x118>
     dd0:	66 0f       	add	r22, r22
     dd2:	77 1f       	adc	r23, r23
     dd4:	8a 95       	dec	r24
     dd6:	e2 f7       	brpl	.-8      	; 0xdd0 <M_DIO_Vid_wrtPinVal+0x114>
     dd8:	cb 01       	movw	r24, r22
     dda:	84 2b       	or	r24, r20
     ddc:	8c 93       	st	X, r24
     dde:	21 c0       	rjmp	.+66     	; 0xe22 <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTD: WRT_BIT(PORTD,copy_u8_Pin,copy_u8_pinVal); break;
     de0:	a2 e3       	ldi	r26, 0x32	; 50
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e2 e3       	ldi	r30, 0x32	; 50
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	80 81       	ld	r24, Z
     dea:	48 2f       	mov	r20, r24
     dec:	8a 81       	ldd	r24, Y+2	; 0x02
     dee:	28 2f       	mov	r18, r24
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	81 e0       	ldi	r24, 0x01	; 1
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	02 c0       	rjmp	.+4      	; 0xdfc <M_DIO_Vid_wrtPinVal+0x140>
     df8:	88 0f       	add	r24, r24
     dfa:	99 1f       	adc	r25, r25
     dfc:	2a 95       	dec	r18
     dfe:	e2 f7       	brpl	.-8      	; 0xdf8 <M_DIO_Vid_wrtPinVal+0x13c>
     e00:	80 95       	com	r24
     e02:	48 23       	and	r20, r24
     e04:	8b 81       	ldd	r24, Y+3	; 0x03
     e06:	28 2f       	mov	r18, r24
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	8a 81       	ldd	r24, Y+2	; 0x02
     e0c:	88 2f       	mov	r24, r24
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	b9 01       	movw	r22, r18
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <M_DIO_Vid_wrtPinVal+0x15c>
     e14:	66 0f       	add	r22, r22
     e16:	77 1f       	adc	r23, r23
     e18:	8a 95       	dec	r24
     e1a:	e2 f7       	brpl	.-8      	; 0xe14 <M_DIO_Vid_wrtPinVal+0x158>
     e1c:	cb 01       	movw	r24, r22
     e1e:	84 2b       	or	r24, r20
     e20:	8c 93       	st	X, r24
		default:break;
	}
}
     e22:	0f 90       	pop	r0
     e24:	0f 90       	pop	r0
     e26:	0f 90       	pop	r0
     e28:	0f 90       	pop	r0
     e2a:	0f 90       	pop	r0
     e2c:	cf 91       	pop	r28
     e2e:	df 91       	pop	r29
     e30:	08 95       	ret

00000e32 <M_DIO_u8_READPinVal>:
u8  M_DIO_u8_READPinVal (u8 copy_u8_Port,u8 copy_u8_Pin)
{
     e32:	df 93       	push	r29
     e34:	cf 93       	push	r28
     e36:	00 d0       	rcall	.+0      	; 0xe38 <M_DIO_u8_READPinVal+0x6>
     e38:	00 d0       	rcall	.+0      	; 0xe3a <M_DIO_u8_READPinVal+0x8>
     e3a:	0f 92       	push	r0
     e3c:	cd b7       	in	r28, 0x3d	; 61
     e3e:	de b7       	in	r29, 0x3e	; 62
     e40:	8a 83       	std	Y+2, r24	; 0x02
     e42:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8_pinval=0;
     e44:	19 82       	std	Y+1, r1	; 0x01
	switch(copy_u8_Port)
     e46:	8a 81       	ldd	r24, Y+2	; 0x02
     e48:	28 2f       	mov	r18, r24
     e4a:	30 e0       	ldi	r19, 0x00	; 0
     e4c:	3d 83       	std	Y+5, r19	; 0x05
     e4e:	2c 83       	std	Y+4, r18	; 0x04
     e50:	4c 81       	ldd	r20, Y+4	; 0x04
     e52:	5d 81       	ldd	r21, Y+5	; 0x05
     e54:	41 30       	cpi	r20, 0x01	; 1
     e56:	51 05       	cpc	r21, r1
     e58:	41 f1       	breq	.+80     	; 0xeaa <M_DIO_u8_READPinVal+0x78>
     e5a:	8c 81       	ldd	r24, Y+4	; 0x04
     e5c:	9d 81       	ldd	r25, Y+5	; 0x05
     e5e:	82 30       	cpi	r24, 0x02	; 2
     e60:	91 05       	cpc	r25, r1
     e62:	34 f4       	brge	.+12     	; 0xe70 <M_DIO_u8_READPinVal+0x3e>
     e64:	2c 81       	ldd	r18, Y+4	; 0x04
     e66:	3d 81       	ldd	r19, Y+5	; 0x05
     e68:	21 15       	cp	r18, r1
     e6a:	31 05       	cpc	r19, r1
     e6c:	61 f0       	breq	.+24     	; 0xe86 <M_DIO_u8_READPinVal+0x54>
     e6e:	52 c0       	rjmp	.+164    	; 0xf14 <M_DIO_u8_READPinVal+0xe2>
     e70:	4c 81       	ldd	r20, Y+4	; 0x04
     e72:	5d 81       	ldd	r21, Y+5	; 0x05
     e74:	42 30       	cpi	r20, 0x02	; 2
     e76:	51 05       	cpc	r21, r1
     e78:	51 f1       	breq	.+84     	; 0xece <M_DIO_u8_READPinVal+0x9c>
     e7a:	8c 81       	ldd	r24, Y+4	; 0x04
     e7c:	9d 81       	ldd	r25, Y+5	; 0x05
     e7e:	83 30       	cpi	r24, 0x03	; 3
     e80:	91 05       	cpc	r25, r1
     e82:	b9 f1       	breq	.+110    	; 0xef2 <M_DIO_u8_READPinVal+0xc0>
     e84:	47 c0       	rjmp	.+142    	; 0xf14 <M_DIO_u8_READPinVal+0xe2>
	{
		case M_DIO_PORTA: local_u8_pinval = GIT_BIT(PINA,copy_u8_Pin); break;
     e86:	e9 e3       	ldi	r30, 0x39	; 57
     e88:	f0 e0       	ldi	r31, 0x00	; 0
     e8a:	80 81       	ld	r24, Z
     e8c:	28 2f       	mov	r18, r24
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	8b 81       	ldd	r24, Y+3	; 0x03
     e92:	88 2f       	mov	r24, r24
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	a9 01       	movw	r20, r18
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <M_DIO_u8_READPinVal+0x6c>
     e9a:	55 95       	asr	r21
     e9c:	47 95       	ror	r20
     e9e:	8a 95       	dec	r24
     ea0:	e2 f7       	brpl	.-8      	; 0xe9a <M_DIO_u8_READPinVal+0x68>
     ea2:	ca 01       	movw	r24, r20
     ea4:	81 70       	andi	r24, 0x01	; 1
     ea6:	89 83       	std	Y+1, r24	; 0x01
     ea8:	35 c0       	rjmp	.+106    	; 0xf14 <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTB: local_u8_pinval = GIT_BIT(PINB,copy_u8_Pin); break;
     eaa:	e6 e3       	ldi	r30, 0x36	; 54
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	80 81       	ld	r24, Z
     eb0:	28 2f       	mov	r18, r24
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	8b 81       	ldd	r24, Y+3	; 0x03
     eb6:	88 2f       	mov	r24, r24
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	a9 01       	movw	r20, r18
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <M_DIO_u8_READPinVal+0x90>
     ebe:	55 95       	asr	r21
     ec0:	47 95       	ror	r20
     ec2:	8a 95       	dec	r24
     ec4:	e2 f7       	brpl	.-8      	; 0xebe <M_DIO_u8_READPinVal+0x8c>
     ec6:	ca 01       	movw	r24, r20
     ec8:	81 70       	andi	r24, 0x01	; 1
     eca:	89 83       	std	Y+1, r24	; 0x01
     ecc:	23 c0       	rjmp	.+70     	; 0xf14 <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTC: local_u8_pinval = GIT_BIT(PINC,copy_u8_Pin); break;
     ece:	e3 e3       	ldi	r30, 0x33	; 51
     ed0:	f0 e0       	ldi	r31, 0x00	; 0
     ed2:	80 81       	ld	r24, Z
     ed4:	28 2f       	mov	r18, r24
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	8b 81       	ldd	r24, Y+3	; 0x03
     eda:	88 2f       	mov	r24, r24
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a9 01       	movw	r20, r18
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <M_DIO_u8_READPinVal+0xb4>
     ee2:	55 95       	asr	r21
     ee4:	47 95       	ror	r20
     ee6:	8a 95       	dec	r24
     ee8:	e2 f7       	brpl	.-8      	; 0xee2 <M_DIO_u8_READPinVal+0xb0>
     eea:	ca 01       	movw	r24, r20
     eec:	81 70       	andi	r24, 0x01	; 1
     eee:	89 83       	std	Y+1, r24	; 0x01
     ef0:	11 c0       	rjmp	.+34     	; 0xf14 <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTD: local_u8_pinval = GIT_BIT(PIND,copy_u8_Pin); break;
     ef2:	e0 e3       	ldi	r30, 0x30	; 48
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	80 81       	ld	r24, Z
     ef8:	28 2f       	mov	r18, r24
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	8b 81       	ldd	r24, Y+3	; 0x03
     efe:	88 2f       	mov	r24, r24
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	a9 01       	movw	r20, r18
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <M_DIO_u8_READPinVal+0xd8>
     f06:	55 95       	asr	r21
     f08:	47 95       	ror	r20
     f0a:	8a 95       	dec	r24
     f0c:	e2 f7       	brpl	.-8      	; 0xf06 <M_DIO_u8_READPinVal+0xd4>
     f0e:	ca 01       	movw	r24, r20
     f10:	81 70       	andi	r24, 0x01	; 1
     f12:	89 83       	std	Y+1, r24	; 0x01
		default:break;
	}
	return local_u8_pinval;
     f14:	89 81       	ldd	r24, Y+1	; 0x01
}
     f16:	0f 90       	pop	r0
     f18:	0f 90       	pop	r0
     f1a:	0f 90       	pop	r0
     f1c:	0f 90       	pop	r0
     f1e:	0f 90       	pop	r0
     f20:	cf 91       	pop	r28
     f22:	df 91       	pop	r29
     f24:	08 95       	ret

00000f26 <M_DIO_Vid_WrtPortDir>:
void M_DIO_Vid_WrtPortDir(u8 copy_u8_port,u8 copy_u8_Portdirecrion)
{
     f26:	df 93       	push	r29
     f28:	cf 93       	push	r28
     f2a:	00 d0       	rcall	.+0      	; 0xf2c <M_DIO_Vid_WrtPortDir+0x6>
     f2c:	00 d0       	rcall	.+0      	; 0xf2e <M_DIO_Vid_WrtPortDir+0x8>
     f2e:	cd b7       	in	r28, 0x3d	; 61
     f30:	de b7       	in	r29, 0x3e	; 62
     f32:	89 83       	std	Y+1, r24	; 0x01
     f34:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8_port)
     f36:	89 81       	ldd	r24, Y+1	; 0x01
     f38:	28 2f       	mov	r18, r24
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	3c 83       	std	Y+4, r19	; 0x04
     f3e:	2b 83       	std	Y+3, r18	; 0x03
     f40:	8b 81       	ldd	r24, Y+3	; 0x03
     f42:	9c 81       	ldd	r25, Y+4	; 0x04
     f44:	81 30       	cpi	r24, 0x01	; 1
     f46:	91 05       	cpc	r25, r1
     f48:	d1 f0       	breq	.+52     	; 0xf7e <M_DIO_Vid_WrtPortDir+0x58>
     f4a:	2b 81       	ldd	r18, Y+3	; 0x03
     f4c:	3c 81       	ldd	r19, Y+4	; 0x04
     f4e:	22 30       	cpi	r18, 0x02	; 2
     f50:	31 05       	cpc	r19, r1
     f52:	2c f4       	brge	.+10     	; 0xf5e <M_DIO_Vid_WrtPortDir+0x38>
     f54:	8b 81       	ldd	r24, Y+3	; 0x03
     f56:	9c 81       	ldd	r25, Y+4	; 0x04
     f58:	00 97       	sbiw	r24, 0x00	; 0
     f5a:	61 f0       	breq	.+24     	; 0xf74 <M_DIO_Vid_WrtPortDir+0x4e>
     f5c:	1e c0       	rjmp	.+60     	; 0xf9a <M_DIO_Vid_WrtPortDir+0x74>
     f5e:	2b 81       	ldd	r18, Y+3	; 0x03
     f60:	3c 81       	ldd	r19, Y+4	; 0x04
     f62:	22 30       	cpi	r18, 0x02	; 2
     f64:	31 05       	cpc	r19, r1
     f66:	81 f0       	breq	.+32     	; 0xf88 <M_DIO_Vid_WrtPortDir+0x62>
     f68:	8b 81       	ldd	r24, Y+3	; 0x03
     f6a:	9c 81       	ldd	r25, Y+4	; 0x04
     f6c:	83 30       	cpi	r24, 0x03	; 3
     f6e:	91 05       	cpc	r25, r1
     f70:	81 f0       	breq	.+32     	; 0xf92 <M_DIO_Vid_WrtPortDir+0x6c>
     f72:	13 c0       	rjmp	.+38     	; 0xf9a <M_DIO_Vid_WrtPortDir+0x74>
	{
		case M_DIO_PORTA: DDRA = copy_u8_Portdirecrion; break;
     f74:	ea e3       	ldi	r30, 0x3A	; 58
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	8a 81       	ldd	r24, Y+2	; 0x02
     f7a:	80 83       	st	Z, r24
     f7c:	0e c0       	rjmp	.+28     	; 0xf9a <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTB: DDRB = copy_u8_Portdirecrion; break;
     f7e:	e7 e3       	ldi	r30, 0x37	; 55
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	8a 81       	ldd	r24, Y+2	; 0x02
     f84:	80 83       	st	Z, r24
     f86:	09 c0       	rjmp	.+18     	; 0xf9a <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTC: DDRC = copy_u8_Portdirecrion; break;
     f88:	e4 e3       	ldi	r30, 0x34	; 52
     f8a:	f0 e0       	ldi	r31, 0x00	; 0
     f8c:	8a 81       	ldd	r24, Y+2	; 0x02
     f8e:	80 83       	st	Z, r24
     f90:	04 c0       	rjmp	.+8      	; 0xf9a <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTD: DDRD = copy_u8_Portdirecrion; break;
     f92:	e1 e3       	ldi	r30, 0x31	; 49
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	8a 81       	ldd	r24, Y+2	; 0x02
     f98:	80 83       	st	Z, r24
	}
}
     f9a:	0f 90       	pop	r0
     f9c:	0f 90       	pop	r0
     f9e:	0f 90       	pop	r0
     fa0:	0f 90       	pop	r0
     fa2:	cf 91       	pop	r28
     fa4:	df 91       	pop	r29
     fa6:	08 95       	ret

00000fa8 <M_DIO_Vid_WrtPortVal>:
void M_DIO_Vid_WrtPortVal(u8 copy_u8_port,u8 copy_u8_PortVal)
{
     fa8:	df 93       	push	r29
     faa:	cf 93       	push	r28
     fac:	00 d0       	rcall	.+0      	; 0xfae <M_DIO_Vid_WrtPortVal+0x6>
     fae:	00 d0       	rcall	.+0      	; 0xfb0 <M_DIO_Vid_WrtPortVal+0x8>
     fb0:	cd b7       	in	r28, 0x3d	; 61
     fb2:	de b7       	in	r29, 0x3e	; 62
     fb4:	89 83       	std	Y+1, r24	; 0x01
     fb6:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8_port)
     fb8:	89 81       	ldd	r24, Y+1	; 0x01
     fba:	28 2f       	mov	r18, r24
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	3c 83       	std	Y+4, r19	; 0x04
     fc0:	2b 83       	std	Y+3, r18	; 0x03
     fc2:	8b 81       	ldd	r24, Y+3	; 0x03
     fc4:	9c 81       	ldd	r25, Y+4	; 0x04
     fc6:	81 30       	cpi	r24, 0x01	; 1
     fc8:	91 05       	cpc	r25, r1
     fca:	d1 f0       	breq	.+52     	; 0x1000 <M_DIO_Vid_WrtPortVal+0x58>
     fcc:	2b 81       	ldd	r18, Y+3	; 0x03
     fce:	3c 81       	ldd	r19, Y+4	; 0x04
     fd0:	22 30       	cpi	r18, 0x02	; 2
     fd2:	31 05       	cpc	r19, r1
     fd4:	2c f4       	brge	.+10     	; 0xfe0 <M_DIO_Vid_WrtPortVal+0x38>
     fd6:	8b 81       	ldd	r24, Y+3	; 0x03
     fd8:	9c 81       	ldd	r25, Y+4	; 0x04
     fda:	00 97       	sbiw	r24, 0x00	; 0
     fdc:	61 f0       	breq	.+24     	; 0xff6 <M_DIO_Vid_WrtPortVal+0x4e>
     fde:	1e c0       	rjmp	.+60     	; 0x101c <M_DIO_Vid_WrtPortVal+0x74>
     fe0:	2b 81       	ldd	r18, Y+3	; 0x03
     fe2:	3c 81       	ldd	r19, Y+4	; 0x04
     fe4:	22 30       	cpi	r18, 0x02	; 2
     fe6:	31 05       	cpc	r19, r1
     fe8:	81 f0       	breq	.+32     	; 0x100a <M_DIO_Vid_WrtPortVal+0x62>
     fea:	8b 81       	ldd	r24, Y+3	; 0x03
     fec:	9c 81       	ldd	r25, Y+4	; 0x04
     fee:	83 30       	cpi	r24, 0x03	; 3
     ff0:	91 05       	cpc	r25, r1
     ff2:	81 f0       	breq	.+32     	; 0x1014 <M_DIO_Vid_WrtPortVal+0x6c>
     ff4:	13 c0       	rjmp	.+38     	; 0x101c <M_DIO_Vid_WrtPortVal+0x74>
	{
		case M_DIO_PORTA: PORTA = copy_u8_PortVal ; break;
     ff6:	eb e3       	ldi	r30, 0x3B	; 59
     ff8:	f0 e0       	ldi	r31, 0x00	; 0
     ffa:	8a 81       	ldd	r24, Y+2	; 0x02
     ffc:	80 83       	st	Z, r24
     ffe:	0e c0       	rjmp	.+28     	; 0x101c <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTB: PORTB = copy_u8_PortVal ; break;
    1000:	e8 e3       	ldi	r30, 0x38	; 56
    1002:	f0 e0       	ldi	r31, 0x00	; 0
    1004:	8a 81       	ldd	r24, Y+2	; 0x02
    1006:	80 83       	st	Z, r24
    1008:	09 c0       	rjmp	.+18     	; 0x101c <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTC: PORTC = copy_u8_PortVal ; break;
    100a:	e5 e3       	ldi	r30, 0x35	; 53
    100c:	f0 e0       	ldi	r31, 0x00	; 0
    100e:	8a 81       	ldd	r24, Y+2	; 0x02
    1010:	80 83       	st	Z, r24
    1012:	04 c0       	rjmp	.+8      	; 0x101c <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTD: PORTD = copy_u8_PortVal ; break;
    1014:	e2 e3       	ldi	r30, 0x32	; 50
    1016:	f0 e0       	ldi	r31, 0x00	; 0
    1018:	8a 81       	ldd	r24, Y+2	; 0x02
    101a:	80 83       	st	Z, r24
	}
}
    101c:	0f 90       	pop	r0
    101e:	0f 90       	pop	r0
    1020:	0f 90       	pop	r0
    1022:	0f 90       	pop	r0
    1024:	cf 91       	pop	r28
    1026:	df 91       	pop	r29
    1028:	08 95       	ret

0000102a <M_DIO_u8_ReadPortVal>:
u8 M_DIO_u8_ReadPortVal(u8 copy_u8_Port)
{
    102a:	df 93       	push	r29
    102c:	cf 93       	push	r28
    102e:	00 d0       	rcall	.+0      	; 0x1030 <M_DIO_u8_ReadPortVal+0x6>
    1030:	00 d0       	rcall	.+0      	; 0x1032 <M_DIO_u8_ReadPortVal+0x8>
    1032:	cd b7       	in	r28, 0x3d	; 61
    1034:	de b7       	in	r29, 0x3e	; 62
    1036:	8a 83       	std	Y+2, r24	; 0x02
	u8 local_u8_portVal=0;
    1038:	19 82       	std	Y+1, r1	; 0x01
	switch(copy_u8_Port)
    103a:	8a 81       	ldd	r24, Y+2	; 0x02
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	3c 83       	std	Y+4, r19	; 0x04
    1042:	2b 83       	std	Y+3, r18	; 0x03
    1044:	8b 81       	ldd	r24, Y+3	; 0x03
    1046:	9c 81       	ldd	r25, Y+4	; 0x04
    1048:	81 30       	cpi	r24, 0x01	; 1
    104a:	91 05       	cpc	r25, r1
    104c:	d1 f0       	breq	.+52     	; 0x1082 <M_DIO_u8_ReadPortVal+0x58>
    104e:	2b 81       	ldd	r18, Y+3	; 0x03
    1050:	3c 81       	ldd	r19, Y+4	; 0x04
    1052:	22 30       	cpi	r18, 0x02	; 2
    1054:	31 05       	cpc	r19, r1
    1056:	2c f4       	brge	.+10     	; 0x1062 <M_DIO_u8_ReadPortVal+0x38>
    1058:	8b 81       	ldd	r24, Y+3	; 0x03
    105a:	9c 81       	ldd	r25, Y+4	; 0x04
    105c:	00 97       	sbiw	r24, 0x00	; 0
    105e:	61 f0       	breq	.+24     	; 0x1078 <M_DIO_u8_ReadPortVal+0x4e>
    1060:	1e c0       	rjmp	.+60     	; 0x109e <M_DIO_u8_ReadPortVal+0x74>
    1062:	2b 81       	ldd	r18, Y+3	; 0x03
    1064:	3c 81       	ldd	r19, Y+4	; 0x04
    1066:	22 30       	cpi	r18, 0x02	; 2
    1068:	31 05       	cpc	r19, r1
    106a:	81 f0       	breq	.+32     	; 0x108c <M_DIO_u8_ReadPortVal+0x62>
    106c:	8b 81       	ldd	r24, Y+3	; 0x03
    106e:	9c 81       	ldd	r25, Y+4	; 0x04
    1070:	83 30       	cpi	r24, 0x03	; 3
    1072:	91 05       	cpc	r25, r1
    1074:	81 f0       	breq	.+32     	; 0x1096 <M_DIO_u8_ReadPortVal+0x6c>
    1076:	13 c0       	rjmp	.+38     	; 0x109e <M_DIO_u8_ReadPortVal+0x74>
	{
		case M_DIO_PORTA: local_u8_portVal = PINA ; break;
    1078:	e9 e3       	ldi	r30, 0x39	; 57
    107a:	f0 e0       	ldi	r31, 0x00	; 0
    107c:	80 81       	ld	r24, Z
    107e:	89 83       	std	Y+1, r24	; 0x01
    1080:	0e c0       	rjmp	.+28     	; 0x109e <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTB: local_u8_portVal = PINB ; break;
    1082:	e6 e3       	ldi	r30, 0x36	; 54
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	80 81       	ld	r24, Z
    1088:	89 83       	std	Y+1, r24	; 0x01
    108a:	09 c0       	rjmp	.+18     	; 0x109e <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTC: local_u8_portVal = PINC ; break;
    108c:	e3 e3       	ldi	r30, 0x33	; 51
    108e:	f0 e0       	ldi	r31, 0x00	; 0
    1090:	80 81       	ld	r24, Z
    1092:	89 83       	std	Y+1, r24	; 0x01
    1094:	04 c0       	rjmp	.+8      	; 0x109e <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTD: local_u8_portVal = PIND ; break;
    1096:	e0 e3       	ldi	r30, 0x30	; 48
    1098:	f0 e0       	ldi	r31, 0x00	; 0
    109a:	80 81       	ld	r24, Z
    109c:	89 83       	std	Y+1, r24	; 0x01
	}
	return local_u8_portVal;
    109e:	89 81       	ldd	r24, Y+1	; 0x01
}
    10a0:	0f 90       	pop	r0
    10a2:	0f 90       	pop	r0
    10a4:	0f 90       	pop	r0
    10a6:	0f 90       	pop	r0
    10a8:	cf 91       	pop	r28
    10aa:	df 91       	pop	r29
    10ac:	08 95       	ret

000010ae <H_KPD_Init>:
#include "KEYPAD_pri.h"
#include "KEYPAD_config.h"

/*****function to define pins of ROWS and columns****/
void H_KPD_Init(void)
{
    10ae:	df 93       	push	r29
    10b0:	cf 93       	push	r28
    10b2:	cd b7       	in	r28, 0x3d	; 61
    10b4:	de b7       	in	r29, 0x3e	; 62
	/*SET ROW AS INPUT */
	M_DIO_Vid_WrtPinDir(H_KPD_Port,H_KPD_Row1_Pin,M_DIO_INPUT);
    10b6:	80 e0       	ldi	r24, 0x00	; 0
    10b8:	60 e0       	ldi	r22, 0x00	; 0
    10ba:	40 e0       	ldi	r20, 0x00	; 0
    10bc:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>
	M_DIO_Vid_WrtPinDir(H_KPD_Port,H_KPD_ROW2_Pin,M_DIO_INPUT);
    10c0:	80 e0       	ldi	r24, 0x00	; 0
    10c2:	61 e0       	ldi	r22, 0x01	; 1
    10c4:	40 e0       	ldi	r20, 0x00	; 0
    10c6:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>
	M_DIO_Vid_WrtPinDir(H_KPD_Port,H_KPD_ROW3_Pin,M_DIO_INPUT);
    10ca:	80 e0       	ldi	r24, 0x00	; 0
    10cc:	62 e0       	ldi	r22, 0x02	; 2
    10ce:	40 e0       	ldi	r20, 0x00	; 0
    10d0:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>
	M_DIO_Vid_WrtPinDir(H_KPD_Port,H_KPD_ROW4_Pin,M_DIO_INPUT);
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	63 e0       	ldi	r22, 0x03	; 3
    10d8:	40 e0       	ldi	r20, 0x00	; 0
    10da:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>

	/*SET COLUMN AS OUTPUT */
	M_DIO_Vid_WrtPinDir(H_KPD_Port,H_KPD_COL1_Pin,M_DIO_OUTPUT);
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	64 e0       	ldi	r22, 0x04	; 4
    10e2:	41 e0       	ldi	r20, 0x01	; 1
    10e4:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>
	M_DIO_Vid_WrtPinDir(H_KPD_Port,H_KPD_COL2_Pin,M_DIO_OUTPUT);
    10e8:	80 e0       	ldi	r24, 0x00	; 0
    10ea:	65 e0       	ldi	r22, 0x05	; 5
    10ec:	41 e0       	ldi	r20, 0x01	; 1
    10ee:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>
	M_DIO_Vid_WrtPinDir(H_KPD_Port,H_KPD_COL3_Pin,M_DIO_OUTPUT);
    10f2:	80 e0       	ldi	r24, 0x00	; 0
    10f4:	66 e0       	ldi	r22, 0x06	; 6
    10f6:	41 e0       	ldi	r20, 0x01	; 1
    10f8:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>
	M_DIO_Vid_WrtPinDir(H_KPD_Port,H_KPD_COL4_Pin,M_DIO_OUTPUT);
    10fc:	80 e0       	ldi	r24, 0x00	; 0
    10fe:	67 e0       	ldi	r22, 0x07	; 7
    1100:	41 e0       	ldi	r20, 0x01	; 1
    1102:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>

	/*SET PULL UP AND COLUMNS AS HIGH */
	M_DIO_Vid_WrtPortVal(H_KPD_Port,0xff);
    1106:	80 e0       	ldi	r24, 0x00	; 0
    1108:	6f ef       	ldi	r22, 0xFF	; 255
    110a:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <M_DIO_Vid_WrtPortVal>
}
    110e:	cf 91       	pop	r28
    1110:	df 91       	pop	r29
    1112:	08 95       	ret

00001114 <H_KPD_GetPressedKey>:

/*function to return value pressed using mapping*/
u8   H_KPD_GetPressedKey(void)
{
    1114:	df 93       	push	r29
    1116:	cf 93       	push	r28
    1118:	cd b7       	in	r28, 0x3d	; 61
    111a:	de b7       	in	r29, 0x3e	; 62
    111c:	61 97       	sbiw	r28, 0x11	; 17
    111e:	0f b6       	in	r0, 0x3f	; 63
    1120:	f8 94       	cli
    1122:	de bf       	out	0x3e, r29	; 62
    1124:	0f be       	out	0x3f, r0	; 63
    1126:	cd bf       	out	0x3d, r28	; 61
	u8 local_u8_pressedkey=255;
    1128:	8f ef       	ldi	r24, 0xFF	; 255
    112a:	89 8b       	std	Y+17, r24	; 0x11

	/*loop for each colmn and set it low*/
	for(u8 local_u8_col = H_KPD_COL1_Pin ; local_u8_col <= H_KPD_COL4_Pin ; local_u8_col++)
    112c:	84 e0       	ldi	r24, 0x04	; 4
    112e:	88 8b       	std	Y+16, r24	; 0x10
    1130:	a9 c0       	rjmp	.+338    	; 0x1284 <H_KPD_GetPressedKey+0x170>
	{
		/*set COLUMNS low*/
		M_DIO_Vid_wrtPinVal(H_KPD_Port,local_u8_col,M_DIO_LOW);
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	68 89       	ldd	r22, Y+16	; 0x10
    1136:	40 e0       	ldi	r20, 0x00	; 0
    1138:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>

		/*CREAT LOOP FOR ROW*/
		for(u8 local_u8_row = H_KPD_Row1_Pin ; local_u8_row <= H_KPD_ROW4_Pin ; local_u8_row++)
    113c:	1f 86       	std	Y+15, r1	; 0x0f
    113e:	96 c0       	rjmp	.+300    	; 0x126c <H_KPD_GetPressedKey+0x158>
		{
			if(M_DIO_u8_READPinVal(H_KPD_Port,local_u8_row)==0)
    1140:	80 e0       	ldi	r24, 0x00	; 0
    1142:	6f 85       	ldd	r22, Y+15	; 0x0f
    1144:	0e 94 19 07 	call	0xe32	; 0xe32 <M_DIO_u8_READPinVal>
    1148:	88 23       	and	r24, r24
    114a:	d9 f4       	brne	.+54     	; 0x1182 <H_KPD_GetPressedKey+0x6e>
			{
				local_u8_pressedkey=global_arr_u8_keypadmapping[local_u8_col-4][local_u8_row];
    114c:	88 89       	ldd	r24, Y+16	; 0x10
    114e:	88 2f       	mov	r24, r24
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	ac 01       	movw	r20, r24
    1154:	44 50       	subi	r20, 0x04	; 4
    1156:	50 40       	sbci	r21, 0x00	; 0
    1158:	8f 85       	ldd	r24, Y+15	; 0x0f
    115a:	28 2f       	mov	r18, r24
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	ca 01       	movw	r24, r20
    1160:	88 0f       	add	r24, r24
    1162:	99 1f       	adc	r25, r25
    1164:	88 0f       	add	r24, r24
    1166:	99 1f       	adc	r25, r25
    1168:	82 0f       	add	r24, r18
    116a:	93 1f       	adc	r25, r19
    116c:	fc 01       	movw	r30, r24
    116e:	e5 59       	subi	r30, 0x95	; 149
    1170:	ff 4f       	sbci	r31, 0xFF	; 255
    1172:	80 81       	ld	r24, Z
    1174:	89 8b       	std	Y+17, r24	; 0x11
				while(M_DIO_u8_READPinVal(H_KPD_Port,local_u8_row)==0);
    1176:	80 e0       	ldi	r24, 0x00	; 0
    1178:	6f 85       	ldd	r22, Y+15	; 0x0f
    117a:	0e 94 19 07 	call	0xe32	; 0xe32 <M_DIO_u8_READPinVal>
    117e:	88 23       	and	r24, r24
    1180:	d1 f3       	breq	.-12     	; 0x1176 <H_KPD_GetPressedKey+0x62>
    1182:	80 e0       	ldi	r24, 0x00	; 0
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	a0 ea       	ldi	r26, 0xA0	; 160
    1188:	b1 e4       	ldi	r27, 0x41	; 65
    118a:	8b 87       	std	Y+11, r24	; 0x0b
    118c:	9c 87       	std	Y+12, r25	; 0x0c
    118e:	ad 87       	std	Y+13, r26	; 0x0d
    1190:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1192:	6b 85       	ldd	r22, Y+11	; 0x0b
    1194:	7c 85       	ldd	r23, Y+12	; 0x0c
    1196:	8d 85       	ldd	r24, Y+13	; 0x0d
    1198:	9e 85       	ldd	r25, Y+14	; 0x0e
    119a:	20 e0       	ldi	r18, 0x00	; 0
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	4a ef       	ldi	r20, 0xFA	; 250
    11a0:	54 e4       	ldi	r21, 0x44	; 68
    11a2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11a6:	dc 01       	movw	r26, r24
    11a8:	cb 01       	movw	r24, r22
    11aa:	8f 83       	std	Y+7, r24	; 0x07
    11ac:	98 87       	std	Y+8, r25	; 0x08
    11ae:	a9 87       	std	Y+9, r26	; 0x09
    11b0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11b2:	6f 81       	ldd	r22, Y+7	; 0x07
    11b4:	78 85       	ldd	r23, Y+8	; 0x08
    11b6:	89 85       	ldd	r24, Y+9	; 0x09
    11b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    11ba:	20 e0       	ldi	r18, 0x00	; 0
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	40 e8       	ldi	r20, 0x80	; 128
    11c0:	5f e3       	ldi	r21, 0x3F	; 63
    11c2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    11c6:	88 23       	and	r24, r24
    11c8:	2c f4       	brge	.+10     	; 0x11d4 <H_KPD_GetPressedKey+0xc0>
		__ticks = 1;
    11ca:	81 e0       	ldi	r24, 0x01	; 1
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	9e 83       	std	Y+6, r25	; 0x06
    11d0:	8d 83       	std	Y+5, r24	; 0x05
    11d2:	3f c0       	rjmp	.+126    	; 0x1252 <H_KPD_GetPressedKey+0x13e>
	else if (__tmp > 65535)
    11d4:	6f 81       	ldd	r22, Y+7	; 0x07
    11d6:	78 85       	ldd	r23, Y+8	; 0x08
    11d8:	89 85       	ldd	r24, Y+9	; 0x09
    11da:	9a 85       	ldd	r25, Y+10	; 0x0a
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	3f ef       	ldi	r19, 0xFF	; 255
    11e0:	4f e7       	ldi	r20, 0x7F	; 127
    11e2:	57 e4       	ldi	r21, 0x47	; 71
    11e4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    11e8:	18 16       	cp	r1, r24
    11ea:	4c f5       	brge	.+82     	; 0x123e <H_KPD_GetPressedKey+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    11ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    11f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    11f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    11f4:	20 e0       	ldi	r18, 0x00	; 0
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	40 e2       	ldi	r20, 0x20	; 32
    11fa:	51 e4       	ldi	r21, 0x41	; 65
    11fc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1200:	dc 01       	movw	r26, r24
    1202:	cb 01       	movw	r24, r22
    1204:	bc 01       	movw	r22, r24
    1206:	cd 01       	movw	r24, r26
    1208:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    120c:	dc 01       	movw	r26, r24
    120e:	cb 01       	movw	r24, r22
    1210:	9e 83       	std	Y+6, r25	; 0x06
    1212:	8d 83       	std	Y+5, r24	; 0x05
    1214:	0f c0       	rjmp	.+30     	; 0x1234 <H_KPD_GetPressedKey+0x120>
    1216:	88 ec       	ldi	r24, 0xC8	; 200
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	9c 83       	std	Y+4, r25	; 0x04
    121c:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    121e:	8b 81       	ldd	r24, Y+3	; 0x03
    1220:	9c 81       	ldd	r25, Y+4	; 0x04
    1222:	01 97       	sbiw	r24, 0x01	; 1
    1224:	f1 f7       	brne	.-4      	; 0x1222 <H_KPD_GetPressedKey+0x10e>
    1226:	9c 83       	std	Y+4, r25	; 0x04
    1228:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    122a:	8d 81       	ldd	r24, Y+5	; 0x05
    122c:	9e 81       	ldd	r25, Y+6	; 0x06
    122e:	01 97       	sbiw	r24, 0x01	; 1
    1230:	9e 83       	std	Y+6, r25	; 0x06
    1232:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1234:	8d 81       	ldd	r24, Y+5	; 0x05
    1236:	9e 81       	ldd	r25, Y+6	; 0x06
    1238:	00 97       	sbiw	r24, 0x00	; 0
    123a:	69 f7       	brne	.-38     	; 0x1216 <H_KPD_GetPressedKey+0x102>
    123c:	14 c0       	rjmp	.+40     	; 0x1266 <H_KPD_GetPressedKey+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    123e:	6f 81       	ldd	r22, Y+7	; 0x07
    1240:	78 85       	ldd	r23, Y+8	; 0x08
    1242:	89 85       	ldd	r24, Y+9	; 0x09
    1244:	9a 85       	ldd	r25, Y+10	; 0x0a
    1246:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    124a:	dc 01       	movw	r26, r24
    124c:	cb 01       	movw	r24, r22
    124e:	9e 83       	std	Y+6, r25	; 0x06
    1250:	8d 83       	std	Y+5, r24	; 0x05
    1252:	8d 81       	ldd	r24, Y+5	; 0x05
    1254:	9e 81       	ldd	r25, Y+6	; 0x06
    1256:	9a 83       	std	Y+2, r25	; 0x02
    1258:	89 83       	std	Y+1, r24	; 0x01
    125a:	89 81       	ldd	r24, Y+1	; 0x01
    125c:	9a 81       	ldd	r25, Y+2	; 0x02
    125e:	01 97       	sbiw	r24, 0x01	; 1
    1260:	f1 f7       	brne	.-4      	; 0x125e <H_KPD_GetPressedKey+0x14a>
    1262:	9a 83       	std	Y+2, r25	; 0x02
    1264:	89 83       	std	Y+1, r24	; 0x01
	{
		/*set COLUMNS low*/
		M_DIO_Vid_wrtPinVal(H_KPD_Port,local_u8_col,M_DIO_LOW);

		/*CREAT LOOP FOR ROW*/
		for(u8 local_u8_row = H_KPD_Row1_Pin ; local_u8_row <= H_KPD_ROW4_Pin ; local_u8_row++)
    1266:	8f 85       	ldd	r24, Y+15	; 0x0f
    1268:	8f 5f       	subi	r24, 0xFF	; 255
    126a:	8f 87       	std	Y+15, r24	; 0x0f
    126c:	8f 85       	ldd	r24, Y+15	; 0x0f
    126e:	84 30       	cpi	r24, 0x04	; 4
    1270:	08 f4       	brcc	.+2      	; 0x1274 <H_KPD_GetPressedKey+0x160>
    1272:	66 cf       	rjmp	.-308    	; 0x1140 <H_KPD_GetPressedKey+0x2c>
			}
			_delay_ms(20);
		}

		/*set COLUMNS HIGH*/
		M_DIO_Vid_wrtPinVal(H_KPD_Port,local_u8_col,M_DIO_HIGH);
    1274:	80 e0       	ldi	r24, 0x00	; 0
    1276:	68 89       	ldd	r22, Y+16	; 0x10
    1278:	41 e0       	ldi	r20, 0x01	; 1
    127a:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>
u8   H_KPD_GetPressedKey(void)
{
	u8 local_u8_pressedkey=255;

	/*loop for each colmn and set it low*/
	for(u8 local_u8_col = H_KPD_COL1_Pin ; local_u8_col <= H_KPD_COL4_Pin ; local_u8_col++)
    127e:	88 89       	ldd	r24, Y+16	; 0x10
    1280:	8f 5f       	subi	r24, 0xFF	; 255
    1282:	88 8b       	std	Y+16, r24	; 0x10
    1284:	88 89       	ldd	r24, Y+16	; 0x10
    1286:	88 30       	cpi	r24, 0x08	; 8
    1288:	08 f4       	brcc	.+2      	; 0x128c <H_KPD_GetPressedKey+0x178>
    128a:	53 cf       	rjmp	.-346    	; 0x1132 <H_KPD_GetPressedKey+0x1e>
		M_DIO_Vid_wrtPinVal(H_KPD_Port,local_u8_col,M_DIO_HIGH);


	}
	
	return local_u8_pressedkey;
    128c:	89 89       	ldd	r24, Y+17	; 0x11
}
    128e:	61 96       	adiw	r28, 0x11	; 17
    1290:	0f b6       	in	r0, 0x3f	; 63
    1292:	f8 94       	cli
    1294:	de bf       	out	0x3e, r29	; 62
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	cd bf       	out	0x3d, r28	; 61
    129a:	cf 91       	pop	r28
    129c:	df 91       	pop	r29
    129e:	08 95       	ret

000012a0 <H_LCD_Vid_Int>:


/* LCD INIT FOR 8 BIT */
/************************************************/
void H_LCD_Vid_Int()
{
    12a0:	0f 93       	push	r16
    12a2:	1f 93       	push	r17
    12a4:	df 93       	push	r29
    12a6:	cf 93       	push	r28
    12a8:	cd b7       	in	r28, 0x3d	; 61
    12aa:	de b7       	in	r29, 0x3e	; 62
    12ac:	c6 54       	subi	r28, 0x46	; 70
    12ae:	d0 40       	sbci	r29, 0x00	; 0
    12b0:	0f b6       	in	r0, 0x3f	; 63
    12b2:	f8 94       	cli
    12b4:	de bf       	out	0x3e, r29	; 62
    12b6:	0f be       	out	0x3f, r0	; 63
    12b8:	cd bf       	out	0x3d, r28	; 61
	/* set pin RS as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,RS,M_DIO_OUTPUT);
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	60 e0       	ldi	r22, 0x00	; 0
    12be:	41 e0       	ldi	r20, 0x01	; 1
    12c0:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>

	/* set pin R/w as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,RW,M_DIO_OUTPUT);
    12c4:	81 e0       	ldi	r24, 0x01	; 1
    12c6:	61 e0       	ldi	r22, 0x01	; 1
    12c8:	41 e0       	ldi	r20, 0x01	; 1
    12ca:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>

	/* set pin E as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,E,M_DIO_OUTPUT);
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	62 e0       	ldi	r22, 0x02	; 2
    12d2:	41 e0       	ldi	r20, 0x01	; 1
    12d4:	0e 94 a3 05 	call	0xb46	; 0xb46 <M_DIO_Vid_WrtPinDir>

	/*SET data port as output */
	M_DIO_Vid_WrtPortDir(LCD_Data_Port,M_DIO_PORT_OUTPUT);
    12d8:	83 e0       	ldi	r24, 0x03	; 3
    12da:	6f ef       	ldi	r22, 0xFF	; 255
    12dc:	0e 94 93 07 	call	0xf26	; 0xf26 <M_DIO_Vid_WrtPortDir>
    12e0:	fe 01       	movw	r30, r28
    12e2:	ed 5b       	subi	r30, 0xBD	; 189
    12e4:	ff 4f       	sbci	r31, 0xFF	; 255
    12e6:	80 e0       	ldi	r24, 0x00	; 0
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	a0 ef       	ldi	r26, 0xF0	; 240
    12ec:	b1 e4       	ldi	r27, 0x41	; 65
    12ee:	80 83       	st	Z, r24
    12f0:	91 83       	std	Z+1, r25	; 0x01
    12f2:	a2 83       	std	Z+2, r26	; 0x02
    12f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12f6:	8e 01       	movw	r16, r28
    12f8:	01 5c       	subi	r16, 0xC1	; 193
    12fa:	1f 4f       	sbci	r17, 0xFF	; 255
    12fc:	fe 01       	movw	r30, r28
    12fe:	ed 5b       	subi	r30, 0xBD	; 189
    1300:	ff 4f       	sbci	r31, 0xFF	; 255
    1302:	60 81       	ld	r22, Z
    1304:	71 81       	ldd	r23, Z+1	; 0x01
    1306:	82 81       	ldd	r24, Z+2	; 0x02
    1308:	93 81       	ldd	r25, Z+3	; 0x03
    130a:	20 e0       	ldi	r18, 0x00	; 0
    130c:	30 e0       	ldi	r19, 0x00	; 0
    130e:	4a ef       	ldi	r20, 0xFA	; 250
    1310:	54 e4       	ldi	r21, 0x44	; 68
    1312:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1316:	dc 01       	movw	r26, r24
    1318:	cb 01       	movw	r24, r22
    131a:	f8 01       	movw	r30, r16
    131c:	80 83       	st	Z, r24
    131e:	91 83       	std	Z+1, r25	; 0x01
    1320:	a2 83       	std	Z+2, r26	; 0x02
    1322:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1324:	fe 01       	movw	r30, r28
    1326:	ff 96       	adiw	r30, 0x3f	; 63
    1328:	60 81       	ld	r22, Z
    132a:	71 81       	ldd	r23, Z+1	; 0x01
    132c:	82 81       	ldd	r24, Z+2	; 0x02
    132e:	93 81       	ldd	r25, Z+3	; 0x03
    1330:	20 e0       	ldi	r18, 0x00	; 0
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	40 e8       	ldi	r20, 0x80	; 128
    1336:	5f e3       	ldi	r21, 0x3F	; 63
    1338:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    133c:	88 23       	and	r24, r24
    133e:	2c f4       	brge	.+10     	; 0x134a <H_LCD_Vid_Int+0xaa>
		__ticks = 1;
    1340:	81 e0       	ldi	r24, 0x01	; 1
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	9e af       	std	Y+62, r25	; 0x3e
    1346:	8d af       	std	Y+61, r24	; 0x3d
    1348:	46 c0       	rjmp	.+140    	; 0x13d6 <H_LCD_Vid_Int+0x136>
	else if (__tmp > 65535)
    134a:	fe 01       	movw	r30, r28
    134c:	ff 96       	adiw	r30, 0x3f	; 63
    134e:	60 81       	ld	r22, Z
    1350:	71 81       	ldd	r23, Z+1	; 0x01
    1352:	82 81       	ldd	r24, Z+2	; 0x02
    1354:	93 81       	ldd	r25, Z+3	; 0x03
    1356:	20 e0       	ldi	r18, 0x00	; 0
    1358:	3f ef       	ldi	r19, 0xFF	; 255
    135a:	4f e7       	ldi	r20, 0x7F	; 127
    135c:	57 e4       	ldi	r21, 0x47	; 71
    135e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1362:	18 16       	cp	r1, r24
    1364:	64 f5       	brge	.+88     	; 0x13be <H_LCD_Vid_Int+0x11e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1366:	fe 01       	movw	r30, r28
    1368:	ed 5b       	subi	r30, 0xBD	; 189
    136a:	ff 4f       	sbci	r31, 0xFF	; 255
    136c:	60 81       	ld	r22, Z
    136e:	71 81       	ldd	r23, Z+1	; 0x01
    1370:	82 81       	ldd	r24, Z+2	; 0x02
    1372:	93 81       	ldd	r25, Z+3	; 0x03
    1374:	20 e0       	ldi	r18, 0x00	; 0
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	40 e2       	ldi	r20, 0x20	; 32
    137a:	51 e4       	ldi	r21, 0x41	; 65
    137c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1380:	dc 01       	movw	r26, r24
    1382:	cb 01       	movw	r24, r22
    1384:	bc 01       	movw	r22, r24
    1386:	cd 01       	movw	r24, r26
    1388:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    138c:	dc 01       	movw	r26, r24
    138e:	cb 01       	movw	r24, r22
    1390:	9e af       	std	Y+62, r25	; 0x3e
    1392:	8d af       	std	Y+61, r24	; 0x3d
    1394:	0f c0       	rjmp	.+30     	; 0x13b4 <H_LCD_Vid_Int+0x114>
    1396:	88 ec       	ldi	r24, 0xC8	; 200
    1398:	90 e0       	ldi	r25, 0x00	; 0
    139a:	9c af       	std	Y+60, r25	; 0x3c
    139c:	8b af       	std	Y+59, r24	; 0x3b
    139e:	8b ad       	ldd	r24, Y+59	; 0x3b
    13a0:	9c ad       	ldd	r25, Y+60	; 0x3c
    13a2:	01 97       	sbiw	r24, 0x01	; 1
    13a4:	f1 f7       	brne	.-4      	; 0x13a2 <H_LCD_Vid_Int+0x102>
    13a6:	9c af       	std	Y+60, r25	; 0x3c
    13a8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13aa:	8d ad       	ldd	r24, Y+61	; 0x3d
    13ac:	9e ad       	ldd	r25, Y+62	; 0x3e
    13ae:	01 97       	sbiw	r24, 0x01	; 1
    13b0:	9e af       	std	Y+62, r25	; 0x3e
    13b2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13b4:	8d ad       	ldd	r24, Y+61	; 0x3d
    13b6:	9e ad       	ldd	r25, Y+62	; 0x3e
    13b8:	00 97       	sbiw	r24, 0x00	; 0
    13ba:	69 f7       	brne	.-38     	; 0x1396 <H_LCD_Vid_Int+0xf6>
    13bc:	16 c0       	rjmp	.+44     	; 0x13ea <H_LCD_Vid_Int+0x14a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13be:	fe 01       	movw	r30, r28
    13c0:	ff 96       	adiw	r30, 0x3f	; 63
    13c2:	60 81       	ld	r22, Z
    13c4:	71 81       	ldd	r23, Z+1	; 0x01
    13c6:	82 81       	ldd	r24, Z+2	; 0x02
    13c8:	93 81       	ldd	r25, Z+3	; 0x03
    13ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13ce:	dc 01       	movw	r26, r24
    13d0:	cb 01       	movw	r24, r22
    13d2:	9e af       	std	Y+62, r25	; 0x3e
    13d4:	8d af       	std	Y+61, r24	; 0x3d
    13d6:	8d ad       	ldd	r24, Y+61	; 0x3d
    13d8:	9e ad       	ldd	r25, Y+62	; 0x3e
    13da:	9a af       	std	Y+58, r25	; 0x3a
    13dc:	89 af       	std	Y+57, r24	; 0x39
    13de:	89 ad       	ldd	r24, Y+57	; 0x39
    13e0:	9a ad       	ldd	r25, Y+58	; 0x3a
    13e2:	01 97       	sbiw	r24, 0x01	; 1
    13e4:	f1 f7       	brne	.-4      	; 0x13e2 <H_LCD_Vid_Int+0x142>
    13e6:	9a af       	std	Y+58, r25	; 0x3a
    13e8:	89 af       	std	Y+57, r24	; 0x39

	/* wait for 30 ms */
	_delay_ms(30);
	H_LCD_Vid_Wrt_Com(SET_8BITS_2LINES);
    13ea:	88 e3       	ldi	r24, 0x38	; 56
    13ec:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <H_LCD_Vid_Wrt_Com>
    13f0:	80 e0       	ldi	r24, 0x00	; 0
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	a0 e8       	ldi	r26, 0x80	; 128
    13f6:	bf e3       	ldi	r27, 0x3F	; 63
    13f8:	8d ab       	std	Y+53, r24	; 0x35
    13fa:	9e ab       	std	Y+54, r25	; 0x36
    13fc:	af ab       	std	Y+55, r26	; 0x37
    13fe:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1400:	6d a9       	ldd	r22, Y+53	; 0x35
    1402:	7e a9       	ldd	r23, Y+54	; 0x36
    1404:	8f a9       	ldd	r24, Y+55	; 0x37
    1406:	98 ad       	ldd	r25, Y+56	; 0x38
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	30 e0       	ldi	r19, 0x00	; 0
    140c:	4a ef       	ldi	r20, 0xFA	; 250
    140e:	54 e4       	ldi	r21, 0x44	; 68
    1410:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1414:	dc 01       	movw	r26, r24
    1416:	cb 01       	movw	r24, r22
    1418:	89 ab       	std	Y+49, r24	; 0x31
    141a:	9a ab       	std	Y+50, r25	; 0x32
    141c:	ab ab       	std	Y+51, r26	; 0x33
    141e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1420:	69 a9       	ldd	r22, Y+49	; 0x31
    1422:	7a a9       	ldd	r23, Y+50	; 0x32
    1424:	8b a9       	ldd	r24, Y+51	; 0x33
    1426:	9c a9       	ldd	r25, Y+52	; 0x34
    1428:	20 e0       	ldi	r18, 0x00	; 0
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	40 e8       	ldi	r20, 0x80	; 128
    142e:	5f e3       	ldi	r21, 0x3F	; 63
    1430:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1434:	88 23       	and	r24, r24
    1436:	2c f4       	brge	.+10     	; 0x1442 <H_LCD_Vid_Int+0x1a2>
		__ticks = 1;
    1438:	81 e0       	ldi	r24, 0x01	; 1
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	98 ab       	std	Y+48, r25	; 0x30
    143e:	8f a7       	std	Y+47, r24	; 0x2f
    1440:	3f c0       	rjmp	.+126    	; 0x14c0 <H_LCD_Vid_Int+0x220>
	else if (__tmp > 65535)
    1442:	69 a9       	ldd	r22, Y+49	; 0x31
    1444:	7a a9       	ldd	r23, Y+50	; 0x32
    1446:	8b a9       	ldd	r24, Y+51	; 0x33
    1448:	9c a9       	ldd	r25, Y+52	; 0x34
    144a:	20 e0       	ldi	r18, 0x00	; 0
    144c:	3f ef       	ldi	r19, 0xFF	; 255
    144e:	4f e7       	ldi	r20, 0x7F	; 127
    1450:	57 e4       	ldi	r21, 0x47	; 71
    1452:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1456:	18 16       	cp	r1, r24
    1458:	4c f5       	brge	.+82     	; 0x14ac <H_LCD_Vid_Int+0x20c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    145a:	6d a9       	ldd	r22, Y+53	; 0x35
    145c:	7e a9       	ldd	r23, Y+54	; 0x36
    145e:	8f a9       	ldd	r24, Y+55	; 0x37
    1460:	98 ad       	ldd	r25, Y+56	; 0x38
    1462:	20 e0       	ldi	r18, 0x00	; 0
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	40 e2       	ldi	r20, 0x20	; 32
    1468:	51 e4       	ldi	r21, 0x41	; 65
    146a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    146e:	dc 01       	movw	r26, r24
    1470:	cb 01       	movw	r24, r22
    1472:	bc 01       	movw	r22, r24
    1474:	cd 01       	movw	r24, r26
    1476:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    147a:	dc 01       	movw	r26, r24
    147c:	cb 01       	movw	r24, r22
    147e:	98 ab       	std	Y+48, r25	; 0x30
    1480:	8f a7       	std	Y+47, r24	; 0x2f
    1482:	0f c0       	rjmp	.+30     	; 0x14a2 <H_LCD_Vid_Int+0x202>
    1484:	88 ec       	ldi	r24, 0xC8	; 200
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	9e a7       	std	Y+46, r25	; 0x2e
    148a:	8d a7       	std	Y+45, r24	; 0x2d
    148c:	8d a5       	ldd	r24, Y+45	; 0x2d
    148e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1490:	01 97       	sbiw	r24, 0x01	; 1
    1492:	f1 f7       	brne	.-4      	; 0x1490 <H_LCD_Vid_Int+0x1f0>
    1494:	9e a7       	std	Y+46, r25	; 0x2e
    1496:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1498:	8f a5       	ldd	r24, Y+47	; 0x2f
    149a:	98 a9       	ldd	r25, Y+48	; 0x30
    149c:	01 97       	sbiw	r24, 0x01	; 1
    149e:	98 ab       	std	Y+48, r25	; 0x30
    14a0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14a2:	8f a5       	ldd	r24, Y+47	; 0x2f
    14a4:	98 a9       	ldd	r25, Y+48	; 0x30
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	69 f7       	brne	.-38     	; 0x1484 <H_LCD_Vid_Int+0x1e4>
    14aa:	14 c0       	rjmp	.+40     	; 0x14d4 <H_LCD_Vid_Int+0x234>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14ac:	69 a9       	ldd	r22, Y+49	; 0x31
    14ae:	7a a9       	ldd	r23, Y+50	; 0x32
    14b0:	8b a9       	ldd	r24, Y+51	; 0x33
    14b2:	9c a9       	ldd	r25, Y+52	; 0x34
    14b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14b8:	dc 01       	movw	r26, r24
    14ba:	cb 01       	movw	r24, r22
    14bc:	98 ab       	std	Y+48, r25	; 0x30
    14be:	8f a7       	std	Y+47, r24	; 0x2f
    14c0:	8f a5       	ldd	r24, Y+47	; 0x2f
    14c2:	98 a9       	ldd	r25, Y+48	; 0x30
    14c4:	9c a7       	std	Y+44, r25	; 0x2c
    14c6:	8b a7       	std	Y+43, r24	; 0x2b
    14c8:	8b a5       	ldd	r24, Y+43	; 0x2b
    14ca:	9c a5       	ldd	r25, Y+44	; 0x2c
    14cc:	01 97       	sbiw	r24, 0x01	; 1
    14ce:	f1 f7       	brne	.-4      	; 0x14cc <H_LCD_Vid_Int+0x22c>
    14d0:	9c a7       	std	Y+44, r25	; 0x2c
    14d2:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	H_LCD_Vid_Wrt_Com(DISPLAY_ON);
    14d4:	8c e0       	ldi	r24, 0x0C	; 12
    14d6:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <H_LCD_Vid_Wrt_Com>
    14da:	80 e0       	ldi	r24, 0x00	; 0
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	a0 e8       	ldi	r26, 0x80	; 128
    14e0:	bf e3       	ldi	r27, 0x3F	; 63
    14e2:	8f a3       	std	Y+39, r24	; 0x27
    14e4:	98 a7       	std	Y+40, r25	; 0x28
    14e6:	a9 a7       	std	Y+41, r26	; 0x29
    14e8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14ea:	6f a1       	ldd	r22, Y+39	; 0x27
    14ec:	78 a5       	ldd	r23, Y+40	; 0x28
    14ee:	89 a5       	ldd	r24, Y+41	; 0x29
    14f0:	9a a5       	ldd	r25, Y+42	; 0x2a
    14f2:	20 e0       	ldi	r18, 0x00	; 0
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	4a ef       	ldi	r20, 0xFA	; 250
    14f8:	54 e4       	ldi	r21, 0x44	; 68
    14fa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14fe:	dc 01       	movw	r26, r24
    1500:	cb 01       	movw	r24, r22
    1502:	8b a3       	std	Y+35, r24	; 0x23
    1504:	9c a3       	std	Y+36, r25	; 0x24
    1506:	ad a3       	std	Y+37, r26	; 0x25
    1508:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    150a:	6b a1       	ldd	r22, Y+35	; 0x23
    150c:	7c a1       	ldd	r23, Y+36	; 0x24
    150e:	8d a1       	ldd	r24, Y+37	; 0x25
    1510:	9e a1       	ldd	r25, Y+38	; 0x26
    1512:	20 e0       	ldi	r18, 0x00	; 0
    1514:	30 e0       	ldi	r19, 0x00	; 0
    1516:	40 e8       	ldi	r20, 0x80	; 128
    1518:	5f e3       	ldi	r21, 0x3F	; 63
    151a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    151e:	88 23       	and	r24, r24
    1520:	2c f4       	brge	.+10     	; 0x152c <H_LCD_Vid_Int+0x28c>
		__ticks = 1;
    1522:	81 e0       	ldi	r24, 0x01	; 1
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	9a a3       	std	Y+34, r25	; 0x22
    1528:	89 a3       	std	Y+33, r24	; 0x21
    152a:	3f c0       	rjmp	.+126    	; 0x15aa <H_LCD_Vid_Int+0x30a>
	else if (__tmp > 65535)
    152c:	6b a1       	ldd	r22, Y+35	; 0x23
    152e:	7c a1       	ldd	r23, Y+36	; 0x24
    1530:	8d a1       	ldd	r24, Y+37	; 0x25
    1532:	9e a1       	ldd	r25, Y+38	; 0x26
    1534:	20 e0       	ldi	r18, 0x00	; 0
    1536:	3f ef       	ldi	r19, 0xFF	; 255
    1538:	4f e7       	ldi	r20, 0x7F	; 127
    153a:	57 e4       	ldi	r21, 0x47	; 71
    153c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1540:	18 16       	cp	r1, r24
    1542:	4c f5       	brge	.+82     	; 0x1596 <H_LCD_Vid_Int+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1544:	6f a1       	ldd	r22, Y+39	; 0x27
    1546:	78 a5       	ldd	r23, Y+40	; 0x28
    1548:	89 a5       	ldd	r24, Y+41	; 0x29
    154a:	9a a5       	ldd	r25, Y+42	; 0x2a
    154c:	20 e0       	ldi	r18, 0x00	; 0
    154e:	30 e0       	ldi	r19, 0x00	; 0
    1550:	40 e2       	ldi	r20, 0x20	; 32
    1552:	51 e4       	ldi	r21, 0x41	; 65
    1554:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1558:	dc 01       	movw	r26, r24
    155a:	cb 01       	movw	r24, r22
    155c:	bc 01       	movw	r22, r24
    155e:	cd 01       	movw	r24, r26
    1560:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1564:	dc 01       	movw	r26, r24
    1566:	cb 01       	movw	r24, r22
    1568:	9a a3       	std	Y+34, r25	; 0x22
    156a:	89 a3       	std	Y+33, r24	; 0x21
    156c:	0f c0       	rjmp	.+30     	; 0x158c <H_LCD_Vid_Int+0x2ec>
    156e:	88 ec       	ldi	r24, 0xC8	; 200
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	98 a3       	std	Y+32, r25	; 0x20
    1574:	8f 8f       	std	Y+31, r24	; 0x1f
    1576:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1578:	98 a1       	ldd	r25, Y+32	; 0x20
    157a:	01 97       	sbiw	r24, 0x01	; 1
    157c:	f1 f7       	brne	.-4      	; 0x157a <H_LCD_Vid_Int+0x2da>
    157e:	98 a3       	std	Y+32, r25	; 0x20
    1580:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1582:	89 a1       	ldd	r24, Y+33	; 0x21
    1584:	9a a1       	ldd	r25, Y+34	; 0x22
    1586:	01 97       	sbiw	r24, 0x01	; 1
    1588:	9a a3       	std	Y+34, r25	; 0x22
    158a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    158c:	89 a1       	ldd	r24, Y+33	; 0x21
    158e:	9a a1       	ldd	r25, Y+34	; 0x22
    1590:	00 97       	sbiw	r24, 0x00	; 0
    1592:	69 f7       	brne	.-38     	; 0x156e <H_LCD_Vid_Int+0x2ce>
    1594:	14 c0       	rjmp	.+40     	; 0x15be <H_LCD_Vid_Int+0x31e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1596:	6b a1       	ldd	r22, Y+35	; 0x23
    1598:	7c a1       	ldd	r23, Y+36	; 0x24
    159a:	8d a1       	ldd	r24, Y+37	; 0x25
    159c:	9e a1       	ldd	r25, Y+38	; 0x26
    159e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15a2:	dc 01       	movw	r26, r24
    15a4:	cb 01       	movw	r24, r22
    15a6:	9a a3       	std	Y+34, r25	; 0x22
    15a8:	89 a3       	std	Y+33, r24	; 0x21
    15aa:	89 a1       	ldd	r24, Y+33	; 0x21
    15ac:	9a a1       	ldd	r25, Y+34	; 0x22
    15ae:	9e 8f       	std	Y+30, r25	; 0x1e
    15b0:	8d 8f       	std	Y+29, r24	; 0x1d
    15b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    15b4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    15b6:	01 97       	sbiw	r24, 0x01	; 1
    15b8:	f1 f7       	brne	.-4      	; 0x15b6 <H_LCD_Vid_Int+0x316>
    15ba:	9e 8f       	std	Y+30, r25	; 0x1e
    15bc:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	H_LCD_Vid_Wrt_Com(CLEAR_DISPLAY);
    15be:	81 e0       	ldi	r24, 0x01	; 1
    15c0:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <H_LCD_Vid_Wrt_Com>
    15c4:	80 e0       	ldi	r24, 0x00	; 0
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	a0 e0       	ldi	r26, 0x00	; 0
    15ca:	b0 e4       	ldi	r27, 0x40	; 64
    15cc:	89 8f       	std	Y+25, r24	; 0x19
    15ce:	9a 8f       	std	Y+26, r25	; 0x1a
    15d0:	ab 8f       	std	Y+27, r26	; 0x1b
    15d2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15d4:	69 8d       	ldd	r22, Y+25	; 0x19
    15d6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15d8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15da:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15dc:	20 e0       	ldi	r18, 0x00	; 0
    15de:	30 e0       	ldi	r19, 0x00	; 0
    15e0:	4a ef       	ldi	r20, 0xFA	; 250
    15e2:	54 e4       	ldi	r21, 0x44	; 68
    15e4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15e8:	dc 01       	movw	r26, r24
    15ea:	cb 01       	movw	r24, r22
    15ec:	8d 8b       	std	Y+21, r24	; 0x15
    15ee:	9e 8b       	std	Y+22, r25	; 0x16
    15f0:	af 8b       	std	Y+23, r26	; 0x17
    15f2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    15f4:	6d 89       	ldd	r22, Y+21	; 0x15
    15f6:	7e 89       	ldd	r23, Y+22	; 0x16
    15f8:	8f 89       	ldd	r24, Y+23	; 0x17
    15fa:	98 8d       	ldd	r25, Y+24	; 0x18
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	40 e8       	ldi	r20, 0x80	; 128
    1602:	5f e3       	ldi	r21, 0x3F	; 63
    1604:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1608:	88 23       	and	r24, r24
    160a:	2c f4       	brge	.+10     	; 0x1616 <H_LCD_Vid_Int+0x376>
		__ticks = 1;
    160c:	81 e0       	ldi	r24, 0x01	; 1
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	9c 8b       	std	Y+20, r25	; 0x14
    1612:	8b 8b       	std	Y+19, r24	; 0x13
    1614:	3f c0       	rjmp	.+126    	; 0x1694 <H_LCD_Vid_Int+0x3f4>
	else if (__tmp > 65535)
    1616:	6d 89       	ldd	r22, Y+21	; 0x15
    1618:	7e 89       	ldd	r23, Y+22	; 0x16
    161a:	8f 89       	ldd	r24, Y+23	; 0x17
    161c:	98 8d       	ldd	r25, Y+24	; 0x18
    161e:	20 e0       	ldi	r18, 0x00	; 0
    1620:	3f ef       	ldi	r19, 0xFF	; 255
    1622:	4f e7       	ldi	r20, 0x7F	; 127
    1624:	57 e4       	ldi	r21, 0x47	; 71
    1626:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    162a:	18 16       	cp	r1, r24
    162c:	4c f5       	brge	.+82     	; 0x1680 <H_LCD_Vid_Int+0x3e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    162e:	69 8d       	ldd	r22, Y+25	; 0x19
    1630:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1632:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1634:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1636:	20 e0       	ldi	r18, 0x00	; 0
    1638:	30 e0       	ldi	r19, 0x00	; 0
    163a:	40 e2       	ldi	r20, 0x20	; 32
    163c:	51 e4       	ldi	r21, 0x41	; 65
    163e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1642:	dc 01       	movw	r26, r24
    1644:	cb 01       	movw	r24, r22
    1646:	bc 01       	movw	r22, r24
    1648:	cd 01       	movw	r24, r26
    164a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    164e:	dc 01       	movw	r26, r24
    1650:	cb 01       	movw	r24, r22
    1652:	9c 8b       	std	Y+20, r25	; 0x14
    1654:	8b 8b       	std	Y+19, r24	; 0x13
    1656:	0f c0       	rjmp	.+30     	; 0x1676 <H_LCD_Vid_Int+0x3d6>
    1658:	88 ec       	ldi	r24, 0xC8	; 200
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	9a 8b       	std	Y+18, r25	; 0x12
    165e:	89 8b       	std	Y+17, r24	; 0x11
    1660:	89 89       	ldd	r24, Y+17	; 0x11
    1662:	9a 89       	ldd	r25, Y+18	; 0x12
    1664:	01 97       	sbiw	r24, 0x01	; 1
    1666:	f1 f7       	brne	.-4      	; 0x1664 <H_LCD_Vid_Int+0x3c4>
    1668:	9a 8b       	std	Y+18, r25	; 0x12
    166a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    166c:	8b 89       	ldd	r24, Y+19	; 0x13
    166e:	9c 89       	ldd	r25, Y+20	; 0x14
    1670:	01 97       	sbiw	r24, 0x01	; 1
    1672:	9c 8b       	std	Y+20, r25	; 0x14
    1674:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1676:	8b 89       	ldd	r24, Y+19	; 0x13
    1678:	9c 89       	ldd	r25, Y+20	; 0x14
    167a:	00 97       	sbiw	r24, 0x00	; 0
    167c:	69 f7       	brne	.-38     	; 0x1658 <H_LCD_Vid_Int+0x3b8>
    167e:	14 c0       	rjmp	.+40     	; 0x16a8 <H_LCD_Vid_Int+0x408>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1680:	6d 89       	ldd	r22, Y+21	; 0x15
    1682:	7e 89       	ldd	r23, Y+22	; 0x16
    1684:	8f 89       	ldd	r24, Y+23	; 0x17
    1686:	98 8d       	ldd	r25, Y+24	; 0x18
    1688:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    168c:	dc 01       	movw	r26, r24
    168e:	cb 01       	movw	r24, r22
    1690:	9c 8b       	std	Y+20, r25	; 0x14
    1692:	8b 8b       	std	Y+19, r24	; 0x13
    1694:	8b 89       	ldd	r24, Y+19	; 0x13
    1696:	9c 89       	ldd	r25, Y+20	; 0x14
    1698:	98 8b       	std	Y+16, r25	; 0x10
    169a:	8f 87       	std	Y+15, r24	; 0x0f
    169c:	8f 85       	ldd	r24, Y+15	; 0x0f
    169e:	98 89       	ldd	r25, Y+16	; 0x10
    16a0:	01 97       	sbiw	r24, 0x01	; 1
    16a2:	f1 f7       	brne	.-4      	; 0x16a0 <H_LCD_Vid_Int+0x400>
    16a4:	98 8b       	std	Y+16, r25	; 0x10
    16a6:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	H_LCD_Vid_Wrt_Com(ENTRY_MODE);
    16a8:	86 e0       	ldi	r24, 0x06	; 6
    16aa:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <H_LCD_Vid_Wrt_Com>
    16ae:	80 e0       	ldi	r24, 0x00	; 0
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	a0 e0       	ldi	r26, 0x00	; 0
    16b4:	b0 e4       	ldi	r27, 0x40	; 64
    16b6:	8b 87       	std	Y+11, r24	; 0x0b
    16b8:	9c 87       	std	Y+12, r25	; 0x0c
    16ba:	ad 87       	std	Y+13, r26	; 0x0d
    16bc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16be:	6b 85       	ldd	r22, Y+11	; 0x0b
    16c0:	7c 85       	ldd	r23, Y+12	; 0x0c
    16c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    16c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    16c6:	20 e0       	ldi	r18, 0x00	; 0
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	4a ef       	ldi	r20, 0xFA	; 250
    16cc:	54 e4       	ldi	r21, 0x44	; 68
    16ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16d2:	dc 01       	movw	r26, r24
    16d4:	cb 01       	movw	r24, r22
    16d6:	8f 83       	std	Y+7, r24	; 0x07
    16d8:	98 87       	std	Y+8, r25	; 0x08
    16da:	a9 87       	std	Y+9, r26	; 0x09
    16dc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    16de:	6f 81       	ldd	r22, Y+7	; 0x07
    16e0:	78 85       	ldd	r23, Y+8	; 0x08
    16e2:	89 85       	ldd	r24, Y+9	; 0x09
    16e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	40 e8       	ldi	r20, 0x80	; 128
    16ec:	5f e3       	ldi	r21, 0x3F	; 63
    16ee:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    16f2:	88 23       	and	r24, r24
    16f4:	2c f4       	brge	.+10     	; 0x1700 <H_LCD_Vid_Int+0x460>
		__ticks = 1;
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	9e 83       	std	Y+6, r25	; 0x06
    16fc:	8d 83       	std	Y+5, r24	; 0x05
    16fe:	3f c0       	rjmp	.+126    	; 0x177e <H_LCD_Vid_Int+0x4de>
	else if (__tmp > 65535)
    1700:	6f 81       	ldd	r22, Y+7	; 0x07
    1702:	78 85       	ldd	r23, Y+8	; 0x08
    1704:	89 85       	ldd	r24, Y+9	; 0x09
    1706:	9a 85       	ldd	r25, Y+10	; 0x0a
    1708:	20 e0       	ldi	r18, 0x00	; 0
    170a:	3f ef       	ldi	r19, 0xFF	; 255
    170c:	4f e7       	ldi	r20, 0x7F	; 127
    170e:	57 e4       	ldi	r21, 0x47	; 71
    1710:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1714:	18 16       	cp	r1, r24
    1716:	4c f5       	brge	.+82     	; 0x176a <H_LCD_Vid_Int+0x4ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1718:	6b 85       	ldd	r22, Y+11	; 0x0b
    171a:	7c 85       	ldd	r23, Y+12	; 0x0c
    171c:	8d 85       	ldd	r24, Y+13	; 0x0d
    171e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1720:	20 e0       	ldi	r18, 0x00	; 0
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	40 e2       	ldi	r20, 0x20	; 32
    1726:	51 e4       	ldi	r21, 0x41	; 65
    1728:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    172c:	dc 01       	movw	r26, r24
    172e:	cb 01       	movw	r24, r22
    1730:	bc 01       	movw	r22, r24
    1732:	cd 01       	movw	r24, r26
    1734:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1738:	dc 01       	movw	r26, r24
    173a:	cb 01       	movw	r24, r22
    173c:	9e 83       	std	Y+6, r25	; 0x06
    173e:	8d 83       	std	Y+5, r24	; 0x05
    1740:	0f c0       	rjmp	.+30     	; 0x1760 <H_LCD_Vid_Int+0x4c0>
    1742:	88 ec       	ldi	r24, 0xC8	; 200
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	9c 83       	std	Y+4, r25	; 0x04
    1748:	8b 83       	std	Y+3, r24	; 0x03
    174a:	8b 81       	ldd	r24, Y+3	; 0x03
    174c:	9c 81       	ldd	r25, Y+4	; 0x04
    174e:	01 97       	sbiw	r24, 0x01	; 1
    1750:	f1 f7       	brne	.-4      	; 0x174e <H_LCD_Vid_Int+0x4ae>
    1752:	9c 83       	std	Y+4, r25	; 0x04
    1754:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1756:	8d 81       	ldd	r24, Y+5	; 0x05
    1758:	9e 81       	ldd	r25, Y+6	; 0x06
    175a:	01 97       	sbiw	r24, 0x01	; 1
    175c:	9e 83       	std	Y+6, r25	; 0x06
    175e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1760:	8d 81       	ldd	r24, Y+5	; 0x05
    1762:	9e 81       	ldd	r25, Y+6	; 0x06
    1764:	00 97       	sbiw	r24, 0x00	; 0
    1766:	69 f7       	brne	.-38     	; 0x1742 <H_LCD_Vid_Int+0x4a2>
    1768:	14 c0       	rjmp	.+40     	; 0x1792 <H_LCD_Vid_Int+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    176a:	6f 81       	ldd	r22, Y+7	; 0x07
    176c:	78 85       	ldd	r23, Y+8	; 0x08
    176e:	89 85       	ldd	r24, Y+9	; 0x09
    1770:	9a 85       	ldd	r25, Y+10	; 0x0a
    1772:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1776:	dc 01       	movw	r26, r24
    1778:	cb 01       	movw	r24, r22
    177a:	9e 83       	std	Y+6, r25	; 0x06
    177c:	8d 83       	std	Y+5, r24	; 0x05
    177e:	8d 81       	ldd	r24, Y+5	; 0x05
    1780:	9e 81       	ldd	r25, Y+6	; 0x06
    1782:	9a 83       	std	Y+2, r25	; 0x02
    1784:	89 83       	std	Y+1, r24	; 0x01
    1786:	89 81       	ldd	r24, Y+1	; 0x01
    1788:	9a 81       	ldd	r25, Y+2	; 0x02
    178a:	01 97       	sbiw	r24, 0x01	; 1
    178c:	f1 f7       	brne	.-4      	; 0x178a <H_LCD_Vid_Int+0x4ea>
    178e:	9a 83       	std	Y+2, r25	; 0x02
    1790:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

}
    1792:	ca 5b       	subi	r28, 0xBA	; 186
    1794:	df 4f       	sbci	r29, 0xFF	; 255
    1796:	0f b6       	in	r0, 0x3f	; 63
    1798:	f8 94       	cli
    179a:	de bf       	out	0x3e, r29	; 62
    179c:	0f be       	out	0x3f, r0	; 63
    179e:	cd bf       	out	0x3d, r28	; 61
    17a0:	cf 91       	pop	r28
    17a2:	df 91       	pop	r29
    17a4:	1f 91       	pop	r17
    17a6:	0f 91       	pop	r16
    17a8:	08 95       	ret

000017aa <H_LCD_Vid_Wrt_CHr>:

/****TO WRITE on lcd you should determine if you want write command (Rs=0) or write data (Rs=1)****/

void H_LCD_Vid_Wrt_CHr(u8 Copy_u8_chr)
{
    17aa:	df 93       	push	r29
    17ac:	cf 93       	push	r28
    17ae:	cd b7       	in	r28, 0x3d	; 61
    17b0:	de b7       	in	r29, 0x3e	; 62
    17b2:	ab 97       	sbiw	r28, 0x2b	; 43
    17b4:	0f b6       	in	r0, 0x3f	; 63
    17b6:	f8 94       	cli
    17b8:	de bf       	out	0x3e, r29	; 62
    17ba:	0f be       	out	0x3f, r0	; 63
    17bc:	cd bf       	out	0x3d, r28	; 61
    17be:	8b a7       	std	Y+43, r24	; 0x2b
	/*SET RS AS HIGH FOR DATA REGISTER */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RS,M_DIO_HIGH);
    17c0:	81 e0       	ldi	r24, 0x01	; 1
    17c2:	60 e0       	ldi	r22, 0x00	; 0
    17c4:	41 e0       	ldi	r20, 0x01	; 1
    17c6:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>

	/* SET RW PIN AS LOW TO WRITE */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RW,M_DIO_LOW);
    17ca:	81 e0       	ldi	r24, 0x01	; 1
    17cc:	61 e0       	ldi	r22, 0x01	; 1
    17ce:	40 e0       	ldi	r20, 0x00	; 0
    17d0:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>


	/********to write data E must in falling and send data*********/

	/*SET E AS HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    17d4:	81 e0       	ldi	r24, 0x01	; 1
    17d6:	62 e0       	ldi	r22, 0x02	; 2
    17d8:	41 e0       	ldi	r20, 0x01	; 1
    17da:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>

	/*SEND DATA */
	M_DIO_Vid_WrtPortVal(LCD_Data_Port,Copy_u8_chr);
    17de:	83 e0       	ldi	r24, 0x03	; 3
    17e0:	6b a5       	ldd	r22, Y+43	; 0x2b
    17e2:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <M_DIO_Vid_WrtPortVal>
    17e6:	80 e0       	ldi	r24, 0x00	; 0
    17e8:	90 e0       	ldi	r25, 0x00	; 0
    17ea:	a0 e2       	ldi	r26, 0x20	; 32
    17ec:	b1 e4       	ldi	r27, 0x41	; 65
    17ee:	8f a3       	std	Y+39, r24	; 0x27
    17f0:	98 a7       	std	Y+40, r25	; 0x28
    17f2:	a9 a7       	std	Y+41, r26	; 0x29
    17f4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17f6:	6f a1       	ldd	r22, Y+39	; 0x27
    17f8:	78 a5       	ldd	r23, Y+40	; 0x28
    17fa:	89 a5       	ldd	r24, Y+41	; 0x29
    17fc:	9a a5       	ldd	r25, Y+42	; 0x2a
    17fe:	20 e0       	ldi	r18, 0x00	; 0
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	4a ef       	ldi	r20, 0xFA	; 250
    1804:	54 e4       	ldi	r21, 0x44	; 68
    1806:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    180a:	dc 01       	movw	r26, r24
    180c:	cb 01       	movw	r24, r22
    180e:	8b a3       	std	Y+35, r24	; 0x23
    1810:	9c a3       	std	Y+36, r25	; 0x24
    1812:	ad a3       	std	Y+37, r26	; 0x25
    1814:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1816:	6b a1       	ldd	r22, Y+35	; 0x23
    1818:	7c a1       	ldd	r23, Y+36	; 0x24
    181a:	8d a1       	ldd	r24, Y+37	; 0x25
    181c:	9e a1       	ldd	r25, Y+38	; 0x26
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	40 e8       	ldi	r20, 0x80	; 128
    1824:	5f e3       	ldi	r21, 0x3F	; 63
    1826:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    182a:	88 23       	and	r24, r24
    182c:	2c f4       	brge	.+10     	; 0x1838 <H_LCD_Vid_Wrt_CHr+0x8e>
		__ticks = 1;
    182e:	81 e0       	ldi	r24, 0x01	; 1
    1830:	90 e0       	ldi	r25, 0x00	; 0
    1832:	9a a3       	std	Y+34, r25	; 0x22
    1834:	89 a3       	std	Y+33, r24	; 0x21
    1836:	3f c0       	rjmp	.+126    	; 0x18b6 <H_LCD_Vid_Wrt_CHr+0x10c>
	else if (__tmp > 65535)
    1838:	6b a1       	ldd	r22, Y+35	; 0x23
    183a:	7c a1       	ldd	r23, Y+36	; 0x24
    183c:	8d a1       	ldd	r24, Y+37	; 0x25
    183e:	9e a1       	ldd	r25, Y+38	; 0x26
    1840:	20 e0       	ldi	r18, 0x00	; 0
    1842:	3f ef       	ldi	r19, 0xFF	; 255
    1844:	4f e7       	ldi	r20, 0x7F	; 127
    1846:	57 e4       	ldi	r21, 0x47	; 71
    1848:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    184c:	18 16       	cp	r1, r24
    184e:	4c f5       	brge	.+82     	; 0x18a2 <H_LCD_Vid_Wrt_CHr+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1850:	6f a1       	ldd	r22, Y+39	; 0x27
    1852:	78 a5       	ldd	r23, Y+40	; 0x28
    1854:	89 a5       	ldd	r24, Y+41	; 0x29
    1856:	9a a5       	ldd	r25, Y+42	; 0x2a
    1858:	20 e0       	ldi	r18, 0x00	; 0
    185a:	30 e0       	ldi	r19, 0x00	; 0
    185c:	40 e2       	ldi	r20, 0x20	; 32
    185e:	51 e4       	ldi	r21, 0x41	; 65
    1860:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1864:	dc 01       	movw	r26, r24
    1866:	cb 01       	movw	r24, r22
    1868:	bc 01       	movw	r22, r24
    186a:	cd 01       	movw	r24, r26
    186c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1870:	dc 01       	movw	r26, r24
    1872:	cb 01       	movw	r24, r22
    1874:	9a a3       	std	Y+34, r25	; 0x22
    1876:	89 a3       	std	Y+33, r24	; 0x21
    1878:	0f c0       	rjmp	.+30     	; 0x1898 <H_LCD_Vid_Wrt_CHr+0xee>
    187a:	88 ec       	ldi	r24, 0xC8	; 200
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	98 a3       	std	Y+32, r25	; 0x20
    1880:	8f 8f       	std	Y+31, r24	; 0x1f
    1882:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1884:	98 a1       	ldd	r25, Y+32	; 0x20
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	f1 f7       	brne	.-4      	; 0x1886 <H_LCD_Vid_Wrt_CHr+0xdc>
    188a:	98 a3       	std	Y+32, r25	; 0x20
    188c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    188e:	89 a1       	ldd	r24, Y+33	; 0x21
    1890:	9a a1       	ldd	r25, Y+34	; 0x22
    1892:	01 97       	sbiw	r24, 0x01	; 1
    1894:	9a a3       	std	Y+34, r25	; 0x22
    1896:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1898:	89 a1       	ldd	r24, Y+33	; 0x21
    189a:	9a a1       	ldd	r25, Y+34	; 0x22
    189c:	00 97       	sbiw	r24, 0x00	; 0
    189e:	69 f7       	brne	.-38     	; 0x187a <H_LCD_Vid_Wrt_CHr+0xd0>
    18a0:	14 c0       	rjmp	.+40     	; 0x18ca <H_LCD_Vid_Wrt_CHr+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18a2:	6b a1       	ldd	r22, Y+35	; 0x23
    18a4:	7c a1       	ldd	r23, Y+36	; 0x24
    18a6:	8d a1       	ldd	r24, Y+37	; 0x25
    18a8:	9e a1       	ldd	r25, Y+38	; 0x26
    18aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18ae:	dc 01       	movw	r26, r24
    18b0:	cb 01       	movw	r24, r22
    18b2:	9a a3       	std	Y+34, r25	; 0x22
    18b4:	89 a3       	std	Y+33, r24	; 0x21
    18b6:	89 a1       	ldd	r24, Y+33	; 0x21
    18b8:	9a a1       	ldd	r25, Y+34	; 0x22
    18ba:	9e 8f       	std	Y+30, r25	; 0x1e
    18bc:	8d 8f       	std	Y+29, r24	; 0x1d
    18be:	8d 8d       	ldd	r24, Y+29	; 0x1d
    18c0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    18c2:	01 97       	sbiw	r24, 0x01	; 1
    18c4:	f1 f7       	brne	.-4      	; 0x18c2 <H_LCD_Vid_Wrt_CHr+0x118>
    18c6:	9e 8f       	std	Y+30, r25	; 0x1e
    18c8:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);

	/*set E low*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_LOW);
    18ca:	81 e0       	ldi	r24, 0x01	; 1
    18cc:	62 e0       	ldi	r22, 0x02	; 2
    18ce:	40 e0       	ldi	r20, 0x00	; 0
    18d0:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>
    18d4:	80 e0       	ldi	r24, 0x00	; 0
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	a0 e2       	ldi	r26, 0x20	; 32
    18da:	b1 e4       	ldi	r27, 0x41	; 65
    18dc:	89 8f       	std	Y+25, r24	; 0x19
    18de:	9a 8f       	std	Y+26, r25	; 0x1a
    18e0:	ab 8f       	std	Y+27, r26	; 0x1b
    18e2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18e4:	69 8d       	ldd	r22, Y+25	; 0x19
    18e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18ec:	20 e0       	ldi	r18, 0x00	; 0
    18ee:	30 e0       	ldi	r19, 0x00	; 0
    18f0:	4a ef       	ldi	r20, 0xFA	; 250
    18f2:	54 e4       	ldi	r21, 0x44	; 68
    18f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18f8:	dc 01       	movw	r26, r24
    18fa:	cb 01       	movw	r24, r22
    18fc:	8d 8b       	std	Y+21, r24	; 0x15
    18fe:	9e 8b       	std	Y+22, r25	; 0x16
    1900:	af 8b       	std	Y+23, r26	; 0x17
    1902:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1904:	6d 89       	ldd	r22, Y+21	; 0x15
    1906:	7e 89       	ldd	r23, Y+22	; 0x16
    1908:	8f 89       	ldd	r24, Y+23	; 0x17
    190a:	98 8d       	ldd	r25, Y+24	; 0x18
    190c:	20 e0       	ldi	r18, 0x00	; 0
    190e:	30 e0       	ldi	r19, 0x00	; 0
    1910:	40 e8       	ldi	r20, 0x80	; 128
    1912:	5f e3       	ldi	r21, 0x3F	; 63
    1914:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1918:	88 23       	and	r24, r24
    191a:	2c f4       	brge	.+10     	; 0x1926 <H_LCD_Vid_Wrt_CHr+0x17c>
		__ticks = 1;
    191c:	81 e0       	ldi	r24, 0x01	; 1
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	9c 8b       	std	Y+20, r25	; 0x14
    1922:	8b 8b       	std	Y+19, r24	; 0x13
    1924:	3f c0       	rjmp	.+126    	; 0x19a4 <H_LCD_Vid_Wrt_CHr+0x1fa>
	else if (__tmp > 65535)
    1926:	6d 89       	ldd	r22, Y+21	; 0x15
    1928:	7e 89       	ldd	r23, Y+22	; 0x16
    192a:	8f 89       	ldd	r24, Y+23	; 0x17
    192c:	98 8d       	ldd	r25, Y+24	; 0x18
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	3f ef       	ldi	r19, 0xFF	; 255
    1932:	4f e7       	ldi	r20, 0x7F	; 127
    1934:	57 e4       	ldi	r21, 0x47	; 71
    1936:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    193a:	18 16       	cp	r1, r24
    193c:	4c f5       	brge	.+82     	; 0x1990 <H_LCD_Vid_Wrt_CHr+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    193e:	69 8d       	ldd	r22, Y+25	; 0x19
    1940:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1942:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1944:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1946:	20 e0       	ldi	r18, 0x00	; 0
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	40 e2       	ldi	r20, 0x20	; 32
    194c:	51 e4       	ldi	r21, 0x41	; 65
    194e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1952:	dc 01       	movw	r26, r24
    1954:	cb 01       	movw	r24, r22
    1956:	bc 01       	movw	r22, r24
    1958:	cd 01       	movw	r24, r26
    195a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    195e:	dc 01       	movw	r26, r24
    1960:	cb 01       	movw	r24, r22
    1962:	9c 8b       	std	Y+20, r25	; 0x14
    1964:	8b 8b       	std	Y+19, r24	; 0x13
    1966:	0f c0       	rjmp	.+30     	; 0x1986 <H_LCD_Vid_Wrt_CHr+0x1dc>
    1968:	88 ec       	ldi	r24, 0xC8	; 200
    196a:	90 e0       	ldi	r25, 0x00	; 0
    196c:	9a 8b       	std	Y+18, r25	; 0x12
    196e:	89 8b       	std	Y+17, r24	; 0x11
    1970:	89 89       	ldd	r24, Y+17	; 0x11
    1972:	9a 89       	ldd	r25, Y+18	; 0x12
    1974:	01 97       	sbiw	r24, 0x01	; 1
    1976:	f1 f7       	brne	.-4      	; 0x1974 <H_LCD_Vid_Wrt_CHr+0x1ca>
    1978:	9a 8b       	std	Y+18, r25	; 0x12
    197a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    197c:	8b 89       	ldd	r24, Y+19	; 0x13
    197e:	9c 89       	ldd	r25, Y+20	; 0x14
    1980:	01 97       	sbiw	r24, 0x01	; 1
    1982:	9c 8b       	std	Y+20, r25	; 0x14
    1984:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1986:	8b 89       	ldd	r24, Y+19	; 0x13
    1988:	9c 89       	ldd	r25, Y+20	; 0x14
    198a:	00 97       	sbiw	r24, 0x00	; 0
    198c:	69 f7       	brne	.-38     	; 0x1968 <H_LCD_Vid_Wrt_CHr+0x1be>
    198e:	14 c0       	rjmp	.+40     	; 0x19b8 <H_LCD_Vid_Wrt_CHr+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1990:	6d 89       	ldd	r22, Y+21	; 0x15
    1992:	7e 89       	ldd	r23, Y+22	; 0x16
    1994:	8f 89       	ldd	r24, Y+23	; 0x17
    1996:	98 8d       	ldd	r25, Y+24	; 0x18
    1998:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    199c:	dc 01       	movw	r26, r24
    199e:	cb 01       	movw	r24, r22
    19a0:	9c 8b       	std	Y+20, r25	; 0x14
    19a2:	8b 8b       	std	Y+19, r24	; 0x13
    19a4:	8b 89       	ldd	r24, Y+19	; 0x13
    19a6:	9c 89       	ldd	r25, Y+20	; 0x14
    19a8:	98 8b       	std	Y+16, r25	; 0x10
    19aa:	8f 87       	std	Y+15, r24	; 0x0f
    19ac:	8f 85       	ldd	r24, Y+15	; 0x0f
    19ae:	98 89       	ldd	r25, Y+16	; 0x10
    19b0:	01 97       	sbiw	r24, 0x01	; 1
    19b2:	f1 f7       	brne	.-4      	; 0x19b0 <H_LCD_Vid_Wrt_CHr+0x206>
    19b4:	98 8b       	std	Y+16, r25	; 0x10
    19b6:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);

	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    19b8:	81 e0       	ldi	r24, 0x01	; 1
    19ba:	62 e0       	ldi	r22, 0x02	; 2
    19bc:	41 e0       	ldi	r20, 0x01	; 1
    19be:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>
    19c2:	80 e0       	ldi	r24, 0x00	; 0
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	a0 e2       	ldi	r26, 0x20	; 32
    19c8:	b1 e4       	ldi	r27, 0x41	; 65
    19ca:	8b 87       	std	Y+11, r24	; 0x0b
    19cc:	9c 87       	std	Y+12, r25	; 0x0c
    19ce:	ad 87       	std	Y+13, r26	; 0x0d
    19d0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    19d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    19d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    19d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    19da:	20 e0       	ldi	r18, 0x00	; 0
    19dc:	30 e0       	ldi	r19, 0x00	; 0
    19de:	4a ef       	ldi	r20, 0xFA	; 250
    19e0:	54 e4       	ldi	r21, 0x44	; 68
    19e2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19e6:	dc 01       	movw	r26, r24
    19e8:	cb 01       	movw	r24, r22
    19ea:	8f 83       	std	Y+7, r24	; 0x07
    19ec:	98 87       	std	Y+8, r25	; 0x08
    19ee:	a9 87       	std	Y+9, r26	; 0x09
    19f0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    19f2:	6f 81       	ldd	r22, Y+7	; 0x07
    19f4:	78 85       	ldd	r23, Y+8	; 0x08
    19f6:	89 85       	ldd	r24, Y+9	; 0x09
    19f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    19fa:	20 e0       	ldi	r18, 0x00	; 0
    19fc:	30 e0       	ldi	r19, 0x00	; 0
    19fe:	40 e8       	ldi	r20, 0x80	; 128
    1a00:	5f e3       	ldi	r21, 0x3F	; 63
    1a02:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a06:	88 23       	and	r24, r24
    1a08:	2c f4       	brge	.+10     	; 0x1a14 <H_LCD_Vid_Wrt_CHr+0x26a>
		__ticks = 1;
    1a0a:	81 e0       	ldi	r24, 0x01	; 1
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	9e 83       	std	Y+6, r25	; 0x06
    1a10:	8d 83       	std	Y+5, r24	; 0x05
    1a12:	3f c0       	rjmp	.+126    	; 0x1a92 <H_LCD_Vid_Wrt_CHr+0x2e8>
	else if (__tmp > 65535)
    1a14:	6f 81       	ldd	r22, Y+7	; 0x07
    1a16:	78 85       	ldd	r23, Y+8	; 0x08
    1a18:	89 85       	ldd	r24, Y+9	; 0x09
    1a1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a1c:	20 e0       	ldi	r18, 0x00	; 0
    1a1e:	3f ef       	ldi	r19, 0xFF	; 255
    1a20:	4f e7       	ldi	r20, 0x7F	; 127
    1a22:	57 e4       	ldi	r21, 0x47	; 71
    1a24:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1a28:	18 16       	cp	r1, r24
    1a2a:	4c f5       	brge	.+82     	; 0x1a7e <H_LCD_Vid_Wrt_CHr+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a2c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a2e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a30:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a32:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a34:	20 e0       	ldi	r18, 0x00	; 0
    1a36:	30 e0       	ldi	r19, 0x00	; 0
    1a38:	40 e2       	ldi	r20, 0x20	; 32
    1a3a:	51 e4       	ldi	r21, 0x41	; 65
    1a3c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a40:	dc 01       	movw	r26, r24
    1a42:	cb 01       	movw	r24, r22
    1a44:	bc 01       	movw	r22, r24
    1a46:	cd 01       	movw	r24, r26
    1a48:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a4c:	dc 01       	movw	r26, r24
    1a4e:	cb 01       	movw	r24, r22
    1a50:	9e 83       	std	Y+6, r25	; 0x06
    1a52:	8d 83       	std	Y+5, r24	; 0x05
    1a54:	0f c0       	rjmp	.+30     	; 0x1a74 <H_LCD_Vid_Wrt_CHr+0x2ca>
    1a56:	88 ec       	ldi	r24, 0xC8	; 200
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	9c 83       	std	Y+4, r25	; 0x04
    1a5c:	8b 83       	std	Y+3, r24	; 0x03
    1a5e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a60:	9c 81       	ldd	r25, Y+4	; 0x04
    1a62:	01 97       	sbiw	r24, 0x01	; 1
    1a64:	f1 f7       	brne	.-4      	; 0x1a62 <H_LCD_Vid_Wrt_CHr+0x2b8>
    1a66:	9c 83       	std	Y+4, r25	; 0x04
    1a68:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a6a:	8d 81       	ldd	r24, Y+5	; 0x05
    1a6c:	9e 81       	ldd	r25, Y+6	; 0x06
    1a6e:	01 97       	sbiw	r24, 0x01	; 1
    1a70:	9e 83       	std	Y+6, r25	; 0x06
    1a72:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a74:	8d 81       	ldd	r24, Y+5	; 0x05
    1a76:	9e 81       	ldd	r25, Y+6	; 0x06
    1a78:	00 97       	sbiw	r24, 0x00	; 0
    1a7a:	69 f7       	brne	.-38     	; 0x1a56 <H_LCD_Vid_Wrt_CHr+0x2ac>
    1a7c:	14 c0       	rjmp	.+40     	; 0x1aa6 <H_LCD_Vid_Wrt_CHr+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a7e:	6f 81       	ldd	r22, Y+7	; 0x07
    1a80:	78 85       	ldd	r23, Y+8	; 0x08
    1a82:	89 85       	ldd	r24, Y+9	; 0x09
    1a84:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a86:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a8a:	dc 01       	movw	r26, r24
    1a8c:	cb 01       	movw	r24, r22
    1a8e:	9e 83       	std	Y+6, r25	; 0x06
    1a90:	8d 83       	std	Y+5, r24	; 0x05
    1a92:	8d 81       	ldd	r24, Y+5	; 0x05
    1a94:	9e 81       	ldd	r25, Y+6	; 0x06
    1a96:	9a 83       	std	Y+2, r25	; 0x02
    1a98:	89 83       	std	Y+1, r24	; 0x01
    1a9a:	89 81       	ldd	r24, Y+1	; 0x01
    1a9c:	9a 81       	ldd	r25, Y+2	; 0x02
    1a9e:	01 97       	sbiw	r24, 0x01	; 1
    1aa0:	f1 f7       	brne	.-4      	; 0x1a9e <H_LCD_Vid_Wrt_CHr+0x2f4>
    1aa2:	9a 83       	std	Y+2, r25	; 0x02
    1aa4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    1aa6:	ab 96       	adiw	r28, 0x2b	; 43
    1aa8:	0f b6       	in	r0, 0x3f	; 63
    1aaa:	f8 94       	cli
    1aac:	de bf       	out	0x3e, r29	; 62
    1aae:	0f be       	out	0x3f, r0	; 63
    1ab0:	cd bf       	out	0x3d, r28	; 61
    1ab2:	cf 91       	pop	r28
    1ab4:	df 91       	pop	r29
    1ab6:	08 95       	ret

00001ab8 <H_LCD_Vid_Wrt_Str>:

void H_LCD_Vid_Wrt_Str(u8 *Ptr_u8_str)
{
    1ab8:	df 93       	push	r29
    1aba:	cf 93       	push	r28
    1abc:	00 d0       	rcall	.+0      	; 0x1abe <H_LCD_Vid_Wrt_Str+0x6>
    1abe:	0f 92       	push	r0
    1ac0:	cd b7       	in	r28, 0x3d	; 61
    1ac2:	de b7       	in	r29, 0x3e	; 62
    1ac4:	9b 83       	std	Y+3, r25	; 0x03
    1ac6:	8a 83       	std	Y+2, r24	; 0x02
	u8 local_u8_counter=0;
    1ac8:	19 82       	std	Y+1, r1	; 0x01
    1aca:	0e c0       	rjmp	.+28     	; 0x1ae8 <H_LCD_Vid_Wrt_Str+0x30>
	while(Ptr_u8_str[local_u8_counter]!= '\0')
	{
		H_LCD_Vid_Wrt_CHr(Ptr_u8_str[local_u8_counter]);
    1acc:	89 81       	ldd	r24, Y+1	; 0x01
    1ace:	28 2f       	mov	r18, r24
    1ad0:	30 e0       	ldi	r19, 0x00	; 0
    1ad2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ad4:	9b 81       	ldd	r25, Y+3	; 0x03
    1ad6:	fc 01       	movw	r30, r24
    1ad8:	e2 0f       	add	r30, r18
    1ada:	f3 1f       	adc	r31, r19
    1adc:	80 81       	ld	r24, Z
    1ade:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <H_LCD_Vid_Wrt_CHr>
		local_u8_counter++;
    1ae2:	89 81       	ldd	r24, Y+1	; 0x01
    1ae4:	8f 5f       	subi	r24, 0xFF	; 255
    1ae6:	89 83       	std	Y+1, r24	; 0x01
}

void H_LCD_Vid_Wrt_Str(u8 *Ptr_u8_str)
{
	u8 local_u8_counter=0;
	while(Ptr_u8_str[local_u8_counter]!= '\0')
    1ae8:	89 81       	ldd	r24, Y+1	; 0x01
    1aea:	28 2f       	mov	r18, r24
    1aec:	30 e0       	ldi	r19, 0x00	; 0
    1aee:	8a 81       	ldd	r24, Y+2	; 0x02
    1af0:	9b 81       	ldd	r25, Y+3	; 0x03
    1af2:	fc 01       	movw	r30, r24
    1af4:	e2 0f       	add	r30, r18
    1af6:	f3 1f       	adc	r31, r19
    1af8:	80 81       	ld	r24, Z
    1afa:	88 23       	and	r24, r24
    1afc:	39 f7       	brne	.-50     	; 0x1acc <H_LCD_Vid_Wrt_Str+0x14>
	{
		H_LCD_Vid_Wrt_CHr(Ptr_u8_str[local_u8_counter]);
		local_u8_counter++;
	}
}
    1afe:	0f 90       	pop	r0
    1b00:	0f 90       	pop	r0
    1b02:	0f 90       	pop	r0
    1b04:	cf 91       	pop	r28
    1b06:	df 91       	pop	r29
    1b08:	08 95       	ret

00001b0a <H_LCD_Vid_Wrt_Com>:

/****TO WRITE on lcd you should determine if you want write command (Rs=0) or write data (Rs=1)****/
void H_LCD_Vid_Wrt_Com(u8 Copy_u8_Com)
{
    1b0a:	df 93       	push	r29
    1b0c:	cf 93       	push	r28
    1b0e:	cd b7       	in	r28, 0x3d	; 61
    1b10:	de b7       	in	r29, 0x3e	; 62
    1b12:	ab 97       	sbiw	r28, 0x2b	; 43
    1b14:	0f b6       	in	r0, 0x3f	; 63
    1b16:	f8 94       	cli
    1b18:	de bf       	out	0x3e, r29	; 62
    1b1a:	0f be       	out	0x3f, r0	; 63
    1b1c:	cd bf       	out	0x3d, r28	; 61
    1b1e:	8b a7       	std	Y+43, r24	; 0x2b
	/*SET RS AS HIGH FOR DATA REGISTER */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RS,M_DIO_LOW);
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	60 e0       	ldi	r22, 0x00	; 0
    1b24:	40 e0       	ldi	r20, 0x00	; 0
    1b26:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>

	/* SET RW PIN AS LOW TO WRITE */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RW,M_DIO_LOW);
    1b2a:	81 e0       	ldi	r24, 0x01	; 1
    1b2c:	61 e0       	ldi	r22, 0x01	; 1
    1b2e:	40 e0       	ldi	r20, 0x00	; 0
    1b30:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>

	/*SET E AS HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1b34:	81 e0       	ldi	r24, 0x01	; 1
    1b36:	62 e0       	ldi	r22, 0x02	; 2
    1b38:	41 e0       	ldi	r20, 0x01	; 1
    1b3a:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>

	/*SEND DATA */
	M_DIO_Vid_WrtPortVal(LCD_Data_Port,Copy_u8_Com);
    1b3e:	83 e0       	ldi	r24, 0x03	; 3
    1b40:	6b a5       	ldd	r22, Y+43	; 0x2b
    1b42:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <M_DIO_Vid_WrtPortVal>
    1b46:	80 e0       	ldi	r24, 0x00	; 0
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	a0 e2       	ldi	r26, 0x20	; 32
    1b4c:	b1 e4       	ldi	r27, 0x41	; 65
    1b4e:	8f a3       	std	Y+39, r24	; 0x27
    1b50:	98 a7       	std	Y+40, r25	; 0x28
    1b52:	a9 a7       	std	Y+41, r26	; 0x29
    1b54:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b56:	6f a1       	ldd	r22, Y+39	; 0x27
    1b58:	78 a5       	ldd	r23, Y+40	; 0x28
    1b5a:	89 a5       	ldd	r24, Y+41	; 0x29
    1b5c:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b5e:	20 e0       	ldi	r18, 0x00	; 0
    1b60:	30 e0       	ldi	r19, 0x00	; 0
    1b62:	4a ef       	ldi	r20, 0xFA	; 250
    1b64:	54 e4       	ldi	r21, 0x44	; 68
    1b66:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b6a:	dc 01       	movw	r26, r24
    1b6c:	cb 01       	movw	r24, r22
    1b6e:	8b a3       	std	Y+35, r24	; 0x23
    1b70:	9c a3       	std	Y+36, r25	; 0x24
    1b72:	ad a3       	std	Y+37, r26	; 0x25
    1b74:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b76:	6b a1       	ldd	r22, Y+35	; 0x23
    1b78:	7c a1       	ldd	r23, Y+36	; 0x24
    1b7a:	8d a1       	ldd	r24, Y+37	; 0x25
    1b7c:	9e a1       	ldd	r25, Y+38	; 0x26
    1b7e:	20 e0       	ldi	r18, 0x00	; 0
    1b80:	30 e0       	ldi	r19, 0x00	; 0
    1b82:	40 e8       	ldi	r20, 0x80	; 128
    1b84:	5f e3       	ldi	r21, 0x3F	; 63
    1b86:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b8a:	88 23       	and	r24, r24
    1b8c:	2c f4       	brge	.+10     	; 0x1b98 <H_LCD_Vid_Wrt_Com+0x8e>
		__ticks = 1;
    1b8e:	81 e0       	ldi	r24, 0x01	; 1
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	9a a3       	std	Y+34, r25	; 0x22
    1b94:	89 a3       	std	Y+33, r24	; 0x21
    1b96:	3f c0       	rjmp	.+126    	; 0x1c16 <H_LCD_Vid_Wrt_Com+0x10c>
	else if (__tmp > 65535)
    1b98:	6b a1       	ldd	r22, Y+35	; 0x23
    1b9a:	7c a1       	ldd	r23, Y+36	; 0x24
    1b9c:	8d a1       	ldd	r24, Y+37	; 0x25
    1b9e:	9e a1       	ldd	r25, Y+38	; 0x26
    1ba0:	20 e0       	ldi	r18, 0x00	; 0
    1ba2:	3f ef       	ldi	r19, 0xFF	; 255
    1ba4:	4f e7       	ldi	r20, 0x7F	; 127
    1ba6:	57 e4       	ldi	r21, 0x47	; 71
    1ba8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1bac:	18 16       	cp	r1, r24
    1bae:	4c f5       	brge	.+82     	; 0x1c02 <H_LCD_Vid_Wrt_Com+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bb0:	6f a1       	ldd	r22, Y+39	; 0x27
    1bb2:	78 a5       	ldd	r23, Y+40	; 0x28
    1bb4:	89 a5       	ldd	r24, Y+41	; 0x29
    1bb6:	9a a5       	ldd	r25, Y+42	; 0x2a
    1bb8:	20 e0       	ldi	r18, 0x00	; 0
    1bba:	30 e0       	ldi	r19, 0x00	; 0
    1bbc:	40 e2       	ldi	r20, 0x20	; 32
    1bbe:	51 e4       	ldi	r21, 0x41	; 65
    1bc0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bc4:	dc 01       	movw	r26, r24
    1bc6:	cb 01       	movw	r24, r22
    1bc8:	bc 01       	movw	r22, r24
    1bca:	cd 01       	movw	r24, r26
    1bcc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bd0:	dc 01       	movw	r26, r24
    1bd2:	cb 01       	movw	r24, r22
    1bd4:	9a a3       	std	Y+34, r25	; 0x22
    1bd6:	89 a3       	std	Y+33, r24	; 0x21
    1bd8:	0f c0       	rjmp	.+30     	; 0x1bf8 <H_LCD_Vid_Wrt_Com+0xee>
    1bda:	88 ec       	ldi	r24, 0xC8	; 200
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	98 a3       	std	Y+32, r25	; 0x20
    1be0:	8f 8f       	std	Y+31, r24	; 0x1f
    1be2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1be4:	98 a1       	ldd	r25, Y+32	; 0x20
    1be6:	01 97       	sbiw	r24, 0x01	; 1
    1be8:	f1 f7       	brne	.-4      	; 0x1be6 <H_LCD_Vid_Wrt_Com+0xdc>
    1bea:	98 a3       	std	Y+32, r25	; 0x20
    1bec:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bee:	89 a1       	ldd	r24, Y+33	; 0x21
    1bf0:	9a a1       	ldd	r25, Y+34	; 0x22
    1bf2:	01 97       	sbiw	r24, 0x01	; 1
    1bf4:	9a a3       	std	Y+34, r25	; 0x22
    1bf6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bf8:	89 a1       	ldd	r24, Y+33	; 0x21
    1bfa:	9a a1       	ldd	r25, Y+34	; 0x22
    1bfc:	00 97       	sbiw	r24, 0x00	; 0
    1bfe:	69 f7       	brne	.-38     	; 0x1bda <H_LCD_Vid_Wrt_Com+0xd0>
    1c00:	14 c0       	rjmp	.+40     	; 0x1c2a <H_LCD_Vid_Wrt_Com+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c02:	6b a1       	ldd	r22, Y+35	; 0x23
    1c04:	7c a1       	ldd	r23, Y+36	; 0x24
    1c06:	8d a1       	ldd	r24, Y+37	; 0x25
    1c08:	9e a1       	ldd	r25, Y+38	; 0x26
    1c0a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c0e:	dc 01       	movw	r26, r24
    1c10:	cb 01       	movw	r24, r22
    1c12:	9a a3       	std	Y+34, r25	; 0x22
    1c14:	89 a3       	std	Y+33, r24	; 0x21
    1c16:	89 a1       	ldd	r24, Y+33	; 0x21
    1c18:	9a a1       	ldd	r25, Y+34	; 0x22
    1c1a:	9e 8f       	std	Y+30, r25	; 0x1e
    1c1c:	8d 8f       	std	Y+29, r24	; 0x1d
    1c1e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1c20:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1c22:	01 97       	sbiw	r24, 0x01	; 1
    1c24:	f1 f7       	brne	.-4      	; 0x1c22 <H_LCD_Vid_Wrt_Com+0x118>
    1c26:	9e 8f       	std	Y+30, r25	; 0x1e
    1c28:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);

	/*set E low*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_LOW);
    1c2a:	81 e0       	ldi	r24, 0x01	; 1
    1c2c:	62 e0       	ldi	r22, 0x02	; 2
    1c2e:	40 e0       	ldi	r20, 0x00	; 0
    1c30:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>
    1c34:	80 e0       	ldi	r24, 0x00	; 0
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	a0 e2       	ldi	r26, 0x20	; 32
    1c3a:	b1 e4       	ldi	r27, 0x41	; 65
    1c3c:	89 8f       	std	Y+25, r24	; 0x19
    1c3e:	9a 8f       	std	Y+26, r25	; 0x1a
    1c40:	ab 8f       	std	Y+27, r26	; 0x1b
    1c42:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c44:	69 8d       	ldd	r22, Y+25	; 0x19
    1c46:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c48:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c4a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c4c:	20 e0       	ldi	r18, 0x00	; 0
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	4a ef       	ldi	r20, 0xFA	; 250
    1c52:	54 e4       	ldi	r21, 0x44	; 68
    1c54:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c58:	dc 01       	movw	r26, r24
    1c5a:	cb 01       	movw	r24, r22
    1c5c:	8d 8b       	std	Y+21, r24	; 0x15
    1c5e:	9e 8b       	std	Y+22, r25	; 0x16
    1c60:	af 8b       	std	Y+23, r26	; 0x17
    1c62:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c64:	6d 89       	ldd	r22, Y+21	; 0x15
    1c66:	7e 89       	ldd	r23, Y+22	; 0x16
    1c68:	8f 89       	ldd	r24, Y+23	; 0x17
    1c6a:	98 8d       	ldd	r25, Y+24	; 0x18
    1c6c:	20 e0       	ldi	r18, 0x00	; 0
    1c6e:	30 e0       	ldi	r19, 0x00	; 0
    1c70:	40 e8       	ldi	r20, 0x80	; 128
    1c72:	5f e3       	ldi	r21, 0x3F	; 63
    1c74:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1c78:	88 23       	and	r24, r24
    1c7a:	2c f4       	brge	.+10     	; 0x1c86 <H_LCD_Vid_Wrt_Com+0x17c>
		__ticks = 1;
    1c7c:	81 e0       	ldi	r24, 0x01	; 1
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	9c 8b       	std	Y+20, r25	; 0x14
    1c82:	8b 8b       	std	Y+19, r24	; 0x13
    1c84:	3f c0       	rjmp	.+126    	; 0x1d04 <H_LCD_Vid_Wrt_Com+0x1fa>
	else if (__tmp > 65535)
    1c86:	6d 89       	ldd	r22, Y+21	; 0x15
    1c88:	7e 89       	ldd	r23, Y+22	; 0x16
    1c8a:	8f 89       	ldd	r24, Y+23	; 0x17
    1c8c:	98 8d       	ldd	r25, Y+24	; 0x18
    1c8e:	20 e0       	ldi	r18, 0x00	; 0
    1c90:	3f ef       	ldi	r19, 0xFF	; 255
    1c92:	4f e7       	ldi	r20, 0x7F	; 127
    1c94:	57 e4       	ldi	r21, 0x47	; 71
    1c96:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c9a:	18 16       	cp	r1, r24
    1c9c:	4c f5       	brge	.+82     	; 0x1cf0 <H_LCD_Vid_Wrt_Com+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c9e:	69 8d       	ldd	r22, Y+25	; 0x19
    1ca0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ca2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ca4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ca6:	20 e0       	ldi	r18, 0x00	; 0
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	40 e2       	ldi	r20, 0x20	; 32
    1cac:	51 e4       	ldi	r21, 0x41	; 65
    1cae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cb2:	dc 01       	movw	r26, r24
    1cb4:	cb 01       	movw	r24, r22
    1cb6:	bc 01       	movw	r22, r24
    1cb8:	cd 01       	movw	r24, r26
    1cba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cbe:	dc 01       	movw	r26, r24
    1cc0:	cb 01       	movw	r24, r22
    1cc2:	9c 8b       	std	Y+20, r25	; 0x14
    1cc4:	8b 8b       	std	Y+19, r24	; 0x13
    1cc6:	0f c0       	rjmp	.+30     	; 0x1ce6 <H_LCD_Vid_Wrt_Com+0x1dc>
    1cc8:	88 ec       	ldi	r24, 0xC8	; 200
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	9a 8b       	std	Y+18, r25	; 0x12
    1cce:	89 8b       	std	Y+17, r24	; 0x11
    1cd0:	89 89       	ldd	r24, Y+17	; 0x11
    1cd2:	9a 89       	ldd	r25, Y+18	; 0x12
    1cd4:	01 97       	sbiw	r24, 0x01	; 1
    1cd6:	f1 f7       	brne	.-4      	; 0x1cd4 <H_LCD_Vid_Wrt_Com+0x1ca>
    1cd8:	9a 8b       	std	Y+18, r25	; 0x12
    1cda:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cdc:	8b 89       	ldd	r24, Y+19	; 0x13
    1cde:	9c 89       	ldd	r25, Y+20	; 0x14
    1ce0:	01 97       	sbiw	r24, 0x01	; 1
    1ce2:	9c 8b       	std	Y+20, r25	; 0x14
    1ce4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ce6:	8b 89       	ldd	r24, Y+19	; 0x13
    1ce8:	9c 89       	ldd	r25, Y+20	; 0x14
    1cea:	00 97       	sbiw	r24, 0x00	; 0
    1cec:	69 f7       	brne	.-38     	; 0x1cc8 <H_LCD_Vid_Wrt_Com+0x1be>
    1cee:	14 c0       	rjmp	.+40     	; 0x1d18 <H_LCD_Vid_Wrt_Com+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cf0:	6d 89       	ldd	r22, Y+21	; 0x15
    1cf2:	7e 89       	ldd	r23, Y+22	; 0x16
    1cf4:	8f 89       	ldd	r24, Y+23	; 0x17
    1cf6:	98 8d       	ldd	r25, Y+24	; 0x18
    1cf8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cfc:	dc 01       	movw	r26, r24
    1cfe:	cb 01       	movw	r24, r22
    1d00:	9c 8b       	std	Y+20, r25	; 0x14
    1d02:	8b 8b       	std	Y+19, r24	; 0x13
    1d04:	8b 89       	ldd	r24, Y+19	; 0x13
    1d06:	9c 89       	ldd	r25, Y+20	; 0x14
    1d08:	98 8b       	std	Y+16, r25	; 0x10
    1d0a:	8f 87       	std	Y+15, r24	; 0x0f
    1d0c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d0e:	98 89       	ldd	r25, Y+16	; 0x10
    1d10:	01 97       	sbiw	r24, 0x01	; 1
    1d12:	f1 f7       	brne	.-4      	; 0x1d10 <H_LCD_Vid_Wrt_Com+0x206>
    1d14:	98 8b       	std	Y+16, r25	; 0x10
    1d16:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);

	/*set E HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1d18:	81 e0       	ldi	r24, 0x01	; 1
    1d1a:	62 e0       	ldi	r22, 0x02	; 2
    1d1c:	41 e0       	ldi	r20, 0x01	; 1
    1d1e:	0e 94 5e 06 	call	0xcbc	; 0xcbc <M_DIO_Vid_wrtPinVal>
    1d22:	80 e0       	ldi	r24, 0x00	; 0
    1d24:	90 e0       	ldi	r25, 0x00	; 0
    1d26:	a0 e2       	ldi	r26, 0x20	; 32
    1d28:	b1 e4       	ldi	r27, 0x41	; 65
    1d2a:	8b 87       	std	Y+11, r24	; 0x0b
    1d2c:	9c 87       	std	Y+12, r25	; 0x0c
    1d2e:	ad 87       	std	Y+13, r26	; 0x0d
    1d30:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d32:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d34:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d36:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d38:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d3a:	20 e0       	ldi	r18, 0x00	; 0
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	4a ef       	ldi	r20, 0xFA	; 250
    1d40:	54 e4       	ldi	r21, 0x44	; 68
    1d42:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d46:	dc 01       	movw	r26, r24
    1d48:	cb 01       	movw	r24, r22
    1d4a:	8f 83       	std	Y+7, r24	; 0x07
    1d4c:	98 87       	std	Y+8, r25	; 0x08
    1d4e:	a9 87       	std	Y+9, r26	; 0x09
    1d50:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d52:	6f 81       	ldd	r22, Y+7	; 0x07
    1d54:	78 85       	ldd	r23, Y+8	; 0x08
    1d56:	89 85       	ldd	r24, Y+9	; 0x09
    1d58:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d5a:	20 e0       	ldi	r18, 0x00	; 0
    1d5c:	30 e0       	ldi	r19, 0x00	; 0
    1d5e:	40 e8       	ldi	r20, 0x80	; 128
    1d60:	5f e3       	ldi	r21, 0x3F	; 63
    1d62:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1d66:	88 23       	and	r24, r24
    1d68:	2c f4       	brge	.+10     	; 0x1d74 <H_LCD_Vid_Wrt_Com+0x26a>
		__ticks = 1;
    1d6a:	81 e0       	ldi	r24, 0x01	; 1
    1d6c:	90 e0       	ldi	r25, 0x00	; 0
    1d6e:	9e 83       	std	Y+6, r25	; 0x06
    1d70:	8d 83       	std	Y+5, r24	; 0x05
    1d72:	3f c0       	rjmp	.+126    	; 0x1df2 <H_LCD_Vid_Wrt_Com+0x2e8>
	else if (__tmp > 65535)
    1d74:	6f 81       	ldd	r22, Y+7	; 0x07
    1d76:	78 85       	ldd	r23, Y+8	; 0x08
    1d78:	89 85       	ldd	r24, Y+9	; 0x09
    1d7a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d7c:	20 e0       	ldi	r18, 0x00	; 0
    1d7e:	3f ef       	ldi	r19, 0xFF	; 255
    1d80:	4f e7       	ldi	r20, 0x7F	; 127
    1d82:	57 e4       	ldi	r21, 0x47	; 71
    1d84:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d88:	18 16       	cp	r1, r24
    1d8a:	4c f5       	brge	.+82     	; 0x1dde <H_LCD_Vid_Wrt_Com+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d8c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d8e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d90:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d92:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d94:	20 e0       	ldi	r18, 0x00	; 0
    1d96:	30 e0       	ldi	r19, 0x00	; 0
    1d98:	40 e2       	ldi	r20, 0x20	; 32
    1d9a:	51 e4       	ldi	r21, 0x41	; 65
    1d9c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1da0:	dc 01       	movw	r26, r24
    1da2:	cb 01       	movw	r24, r22
    1da4:	bc 01       	movw	r22, r24
    1da6:	cd 01       	movw	r24, r26
    1da8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dac:	dc 01       	movw	r26, r24
    1dae:	cb 01       	movw	r24, r22
    1db0:	9e 83       	std	Y+6, r25	; 0x06
    1db2:	8d 83       	std	Y+5, r24	; 0x05
    1db4:	0f c0       	rjmp	.+30     	; 0x1dd4 <H_LCD_Vid_Wrt_Com+0x2ca>
    1db6:	88 ec       	ldi	r24, 0xC8	; 200
    1db8:	90 e0       	ldi	r25, 0x00	; 0
    1dba:	9c 83       	std	Y+4, r25	; 0x04
    1dbc:	8b 83       	std	Y+3, r24	; 0x03
    1dbe:	8b 81       	ldd	r24, Y+3	; 0x03
    1dc0:	9c 81       	ldd	r25, Y+4	; 0x04
    1dc2:	01 97       	sbiw	r24, 0x01	; 1
    1dc4:	f1 f7       	brne	.-4      	; 0x1dc2 <H_LCD_Vid_Wrt_Com+0x2b8>
    1dc6:	9c 83       	std	Y+4, r25	; 0x04
    1dc8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dca:	8d 81       	ldd	r24, Y+5	; 0x05
    1dcc:	9e 81       	ldd	r25, Y+6	; 0x06
    1dce:	01 97       	sbiw	r24, 0x01	; 1
    1dd0:	9e 83       	std	Y+6, r25	; 0x06
    1dd2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dd4:	8d 81       	ldd	r24, Y+5	; 0x05
    1dd6:	9e 81       	ldd	r25, Y+6	; 0x06
    1dd8:	00 97       	sbiw	r24, 0x00	; 0
    1dda:	69 f7       	brne	.-38     	; 0x1db6 <H_LCD_Vid_Wrt_Com+0x2ac>
    1ddc:	14 c0       	rjmp	.+40     	; 0x1e06 <H_LCD_Vid_Wrt_Com+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dde:	6f 81       	ldd	r22, Y+7	; 0x07
    1de0:	78 85       	ldd	r23, Y+8	; 0x08
    1de2:	89 85       	ldd	r24, Y+9	; 0x09
    1de4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1de6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dea:	dc 01       	movw	r26, r24
    1dec:	cb 01       	movw	r24, r22
    1dee:	9e 83       	std	Y+6, r25	; 0x06
    1df0:	8d 83       	std	Y+5, r24	; 0x05
    1df2:	8d 81       	ldd	r24, Y+5	; 0x05
    1df4:	9e 81       	ldd	r25, Y+6	; 0x06
    1df6:	9a 83       	std	Y+2, r25	; 0x02
    1df8:	89 83       	std	Y+1, r24	; 0x01
    1dfa:	89 81       	ldd	r24, Y+1	; 0x01
    1dfc:	9a 81       	ldd	r25, Y+2	; 0x02
    1dfe:	01 97       	sbiw	r24, 0x01	; 1
    1e00:	f1 f7       	brne	.-4      	; 0x1dfe <H_LCD_Vid_Wrt_Com+0x2f4>
    1e02:	9a 83       	std	Y+2, r25	; 0x02
    1e04:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    1e06:	ab 96       	adiw	r28, 0x2b	; 43
    1e08:	0f b6       	in	r0, 0x3f	; 63
    1e0a:	f8 94       	cli
    1e0c:	de bf       	out	0x3e, r29	; 62
    1e0e:	0f be       	out	0x3f, r0	; 63
    1e10:	cd bf       	out	0x3d, r28	; 61
    1e12:	cf 91       	pop	r28
    1e14:	df 91       	pop	r29
    1e16:	08 95       	ret

00001e18 <H_LCD_Vid_Clear>:
void H_LCD_Vid_Clear()
{
    1e18:	df 93       	push	r29
    1e1a:	cf 93       	push	r28
    1e1c:	cd b7       	in	r28, 0x3d	; 61
    1e1e:	de b7       	in	r29, 0x3e	; 62
	H_LCD_Vid_Wrt_Com(CLEAR_DISPLAY);
    1e20:	81 e0       	ldi	r24, 0x01	; 1
    1e22:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <H_LCD_Vid_Wrt_Com>
}
    1e26:	cf 91       	pop	r28
    1e28:	df 91       	pop	r29
    1e2a:	08 95       	ret

00001e2c <H_LCD_Vid_GotoRowCol>:
void H_LCD_Vid_GotoRowCol(u8 Copy_u8_Row,u8 Copy_u8_COL)
{
    1e2c:	df 93       	push	r29
    1e2e:	cf 93       	push	r28
    1e30:	00 d0       	rcall	.+0      	; 0x1e32 <H_LCD_Vid_GotoRowCol+0x6>
    1e32:	0f 92       	push	r0
    1e34:	cd b7       	in	r28, 0x3d	; 61
    1e36:	de b7       	in	r29, 0x3e	; 62
    1e38:	8a 83       	std	Y+2, r24	; 0x02
    1e3a:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8_address=0;
    1e3c:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8_Row==H_LCD_ROW0)
    1e3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e40:	88 23       	and	r24, r24
    1e42:	19 f4       	brne	.+6      	; 0x1e4a <H_LCD_Vid_GotoRowCol+0x1e>
	{
		local_u8_address=Copy_u8_COL+0x00;       //address of  first row is 0x00 and then increase by one for next column
    1e44:	8b 81       	ldd	r24, Y+3	; 0x03
    1e46:	89 83       	std	Y+1, r24	; 0x01
    1e48:	03 c0       	rjmp	.+6      	; 0x1e50 <H_LCD_Vid_GotoRowCol+0x24>
	}else
	{
		local_u8_address=Copy_u8_COL+0x40;       //address of second row is 0x40 and then increase by one for next column
    1e4a:	8b 81       	ldd	r24, Y+3	; 0x03
    1e4c:	80 5c       	subi	r24, 0xC0	; 192
    1e4e:	89 83       	std	Y+1, r24	; 0x01
	}
	H_LCD_Vid_Wrt_Com(128+local_u8_address);
    1e50:	89 81       	ldd	r24, Y+1	; 0x01
    1e52:	80 58       	subi	r24, 0x80	; 128
    1e54:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <H_LCD_Vid_Wrt_Com>
}
    1e58:	0f 90       	pop	r0
    1e5a:	0f 90       	pop	r0
    1e5c:	0f 90       	pop	r0
    1e5e:	cf 91       	pop	r28
    1e60:	df 91       	pop	r29
    1e62:	08 95       	ret

00001e64 <H_LCD_Vid_Wrt_Special_CHr>:
/* ****8interface to print special char*/
void H_LCD_Vid_Wrt_Special_CHr(u8 *Ptr_u8_Pattern,u8 Copy_num_pattern,u8 Copy_u8_xpos,u8 Copy_u8_ypos)
{
    1e64:	df 93       	push	r29
    1e66:	cf 93       	push	r28
    1e68:	cd b7       	in	r28, 0x3d	; 61
    1e6a:	de b7       	in	r29, 0x3e	; 62
    1e6c:	27 97       	sbiw	r28, 0x07	; 7
    1e6e:	0f b6       	in	r0, 0x3f	; 63
    1e70:	f8 94       	cli
    1e72:	de bf       	out	0x3e, r29	; 62
    1e74:	0f be       	out	0x3f, r0	; 63
    1e76:	cd bf       	out	0x3d, r28	; 61
    1e78:	9c 83       	std	Y+4, r25	; 0x04
    1e7a:	8b 83       	std	Y+3, r24	; 0x03
    1e7c:	6d 83       	std	Y+5, r22	; 0x05
    1e7e:	4e 83       	std	Y+6, r20	; 0x06
    1e80:	2f 83       	std	Y+7, r18	; 0x07
	u8 local_u8_address=0;
    1e82:	1a 82       	std	Y+2, r1	; 0x02
	local_u8_address=8*Copy_num_pattern;
    1e84:	8d 81       	ldd	r24, Y+5	; 0x05
    1e86:	88 2f       	mov	r24, r24
    1e88:	90 e0       	ldi	r25, 0x00	; 0
    1e8a:	88 0f       	add	r24, r24
    1e8c:	99 1f       	adc	r25, r25
    1e8e:	88 0f       	add	r24, r24
    1e90:	99 1f       	adc	r25, r25
    1e92:	88 0f       	add	r24, r24
    1e94:	99 1f       	adc	r25, r25
    1e96:	8a 83       	std	Y+2, r24	; 0x02
	H_LCD_Vid_Wrt_Com( 0x40 | local_u8_address);
    1e98:	8a 81       	ldd	r24, Y+2	; 0x02
    1e9a:	80 64       	ori	r24, 0x40	; 64
    1e9c:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <H_LCD_Vid_Wrt_Com>
	for(u8 i=0;i<8;i++)
    1ea0:	19 82       	std	Y+1, r1	; 0x01
    1ea2:	03 c0       	rjmp	.+6      	; 0x1eaa <H_LCD_Vid_Wrt_Special_CHr+0x46>
    1ea4:	89 81       	ldd	r24, Y+1	; 0x01
    1ea6:	8f 5f       	subi	r24, 0xFF	; 255
    1ea8:	89 83       	std	Y+1, r24	; 0x01
    1eaa:	89 81       	ldd	r24, Y+1	; 0x01
    1eac:	88 30       	cpi	r24, 0x08	; 8
    1eae:	d0 f3       	brcs	.-12     	; 0x1ea4 <H_LCD_Vid_Wrt_Special_CHr+0x40>
	{

	}
}
    1eb0:	27 96       	adiw	r28, 0x07	; 7
    1eb2:	0f b6       	in	r0, 0x3f	; 63
    1eb4:	f8 94       	cli
    1eb6:	de bf       	out	0x3e, r29	; 62
    1eb8:	0f be       	out	0x3f, r0	; 63
    1eba:	cd bf       	out	0x3d, r28	; 61
    1ebc:	cf 91       	pop	r28
    1ebe:	df 91       	pop	r29
    1ec0:	08 95       	ret

00001ec2 <main>:
u8 global_u8_operation2;
u8 global_u8_result=0;
u8 arr[10];
u8 calc(u8 num);
int main (void)
{
    1ec2:	df 93       	push	r29
    1ec4:	cf 93       	push	r28
    1ec6:	cd b7       	in	r28, 0x3d	; 61
    1ec8:	de b7       	in	r29, 0x3e	; 62
    1eca:	60 97       	sbiw	r28, 0x10	; 16
    1ecc:	0f b6       	in	r0, 0x3f	; 63
    1ece:	f8 94       	cli
    1ed0:	de bf       	out	0x3e, r29	; 62
    1ed2:	0f be       	out	0x3f, r0	; 63
    1ed4:	cd bf       	out	0x3d, r28	; 61
	//u8 local_press;
	H_LCD_Vid_Int();
    1ed6:	0e 94 50 09 	call	0x12a0	; 0x12a0 <H_LCD_Vid_Int>
	H_KPD_Init();
    1eda:	0e 94 57 08 	call	0x10ae	; 0x10ae <H_KPD_Init>
		local_press=255;
		*/


		/********************calculator*****************************/
		global_u8_op1[0]=H_KPD_GetPressedKey();
    1ede:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1ee2:	80 93 89 00 	sts	0x0089, r24
    1ee6:	04 c0       	rjmp	.+8      	; 0x1ef0 <main+0x2e>
		while(global_u8_op1[0]==255)
		{
			global_u8_op1[0]=H_KPD_GetPressedKey();
    1ee8:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1eec:	80 93 89 00 	sts	0x0089, r24
		*/


		/********************calculator*****************************/
		global_u8_op1[0]=H_KPD_GetPressedKey();
		while(global_u8_op1[0]==255)
    1ef0:	80 91 89 00 	lds	r24, 0x0089
    1ef4:	8f 3f       	cpi	r24, 0xFF	; 255
    1ef6:	c1 f3       	breq	.-16     	; 0x1ee8 <main+0x26>
		{
			global_u8_op1[0]=H_KPD_GetPressedKey();
		}

		/***************print num on lcd and convrt it to intger***********/
		H_LCD_Vid_Clear();
    1ef8:	0e 94 0c 0f 	call	0x1e18	; 0x1e18 <H_LCD_Vid_Clear>
		H_LCD_Vid_Wrt_CHr( global_u8_op1[0]);
    1efc:	80 91 89 00 	lds	r24, 0x0089
    1f00:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <H_LCD_Vid_Wrt_CHr>
		global_u8_op1[0]=calc(global_u8_op1[0]);
    1f04:	80 91 89 00 	lds	r24, 0x0089
    1f08:	0e 94 56 11 	call	0x22ac	; 0x22ac <calc>
    1f0c:	80 93 89 00 	sts	0x0089, r24
		global_u8_op1[1]=H_KPD_GetPressedKey();
    1f10:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1f14:	80 93 8a 00 	sts	0x008A, r24
    1f18:	04 c0       	rjmp	.+8      	; 0x1f22 <main+0x60>
		while(global_u8_op1[1]==255)
		{
			global_u8_op1[1]=H_KPD_GetPressedKey();
    1f1a:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1f1e:	80 93 8a 00 	sts	0x008A, r24
		/***************print num on lcd and convrt it to intger***********/
		H_LCD_Vid_Clear();
		H_LCD_Vid_Wrt_CHr( global_u8_op1[0]);
		global_u8_op1[0]=calc(global_u8_op1[0]);
		global_u8_op1[1]=H_KPD_GetPressedKey();
		while(global_u8_op1[1]==255)
    1f22:	80 91 8a 00 	lds	r24, 0x008A
    1f26:	8f 3f       	cpi	r24, 0xFF	; 255
    1f28:	c1 f3       	breq	.-16     	; 0x1f1a <main+0x58>
		{
			global_u8_op1[1]=H_KPD_GetPressedKey();
		}

		/***************print num on lcd and convrt it to intger***********/
		H_LCD_Vid_Wrt_CHr( global_u8_op1[1]);
    1f2a:	80 91 8a 00 	lds	r24, 0x008A
    1f2e:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <H_LCD_Vid_Wrt_CHr>
		global_u8_op1[1]=calc(global_u8_op1[1]);
    1f32:	80 91 8a 00 	lds	r24, 0x008A
    1f36:	0e 94 56 11 	call	0x22ac	; 0x22ac <calc>
    1f3a:	80 93 8a 00 	sts	0x008A, r24

		global_u8_operation1=H_KPD_GetPressedKey();
    1f3e:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1f42:	80 93 8c 00 	sts	0x008C, r24
    1f46:	04 c0       	rjmp	.+8      	; 0x1f50 <main+0x8e>
		while(global_u8_operation1==255)
		{
			global_u8_operation1=H_KPD_GetPressedKey();
    1f48:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1f4c:	80 93 8c 00 	sts	0x008C, r24
		/***************print num on lcd and convrt it to intger***********/
		H_LCD_Vid_Wrt_CHr( global_u8_op1[1]);
		global_u8_op1[1]=calc(global_u8_op1[1]);

		global_u8_operation1=H_KPD_GetPressedKey();
		while(global_u8_operation1==255)
    1f50:	80 91 8c 00 	lds	r24, 0x008C
    1f54:	8f 3f       	cpi	r24, 0xFF	; 255
    1f56:	c1 f3       	breq	.-16     	; 0x1f48 <main+0x86>
		{
			global_u8_operation1=H_KPD_GetPressedKey();
		}

		/***************print on lcd ***********/
		H_LCD_Vid_Wrt_CHr( global_u8_operation1);
    1f58:	80 91 8c 00 	lds	r24, 0x008C
    1f5c:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <H_LCD_Vid_Wrt_CHr>


		global_u8_op2[0]=H_KPD_GetPressedKey();
    1f60:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1f64:	80 93 87 00 	sts	0x0087, r24
    1f68:	04 c0       	rjmp	.+8      	; 0x1f72 <main+0xb0>
		while(global_u8_op2[0]==255)
		{
			global_u8_op2[0]=H_KPD_GetPressedKey();
    1f6a:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1f6e:	80 93 87 00 	sts	0x0087, r24
		/***************print on lcd ***********/
		H_LCD_Vid_Wrt_CHr( global_u8_operation1);


		global_u8_op2[0]=H_KPD_GetPressedKey();
		while(global_u8_op2[0]==255)
    1f72:	80 91 87 00 	lds	r24, 0x0087
    1f76:	8f 3f       	cpi	r24, 0xFF	; 255
    1f78:	c1 f3       	breq	.-16     	; 0x1f6a <main+0xa8>
		{
			global_u8_op2[0]=H_KPD_GetPressedKey();
		}

		/***************print num on lcd and convrt it to intger***********/
		H_LCD_Vid_Wrt_CHr( global_u8_op2[0]);
    1f7a:	80 91 87 00 	lds	r24, 0x0087
    1f7e:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <H_LCD_Vid_Wrt_CHr>
		global_u8_op2[0]=calc(global_u8_op2[0]);
    1f82:	80 91 87 00 	lds	r24, 0x0087
    1f86:	0e 94 56 11 	call	0x22ac	; 0x22ac <calc>
    1f8a:	80 93 87 00 	sts	0x0087, r24

		global_u8_op2[1]=H_KPD_GetPressedKey();
    1f8e:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1f92:	80 93 88 00 	sts	0x0088, r24
    1f96:	04 c0       	rjmp	.+8      	; 0x1fa0 <main+0xde>
		while(global_u8_op2[1]==255)
		{
			global_u8_op2[1]=H_KPD_GetPressedKey();
    1f98:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1f9c:	80 93 88 00 	sts	0x0088, r24
		/***************print num on lcd and convrt it to intger***********/
		H_LCD_Vid_Wrt_CHr( global_u8_op2[0]);
		global_u8_op2[0]=calc(global_u8_op2[0]);

		global_u8_op2[1]=H_KPD_GetPressedKey();
		while(global_u8_op2[1]==255)
    1fa0:	80 91 88 00 	lds	r24, 0x0088
    1fa4:	8f 3f       	cpi	r24, 0xFF	; 255
    1fa6:	c1 f3       	breq	.-16     	; 0x1f98 <main+0xd6>
		{
			global_u8_op2[1]=H_KPD_GetPressedKey();
		}
		/***************print num on lcd and convrt it to intger***********/
		H_LCD_Vid_Wrt_CHr( global_u8_op2[1]);
    1fa8:	80 91 88 00 	lds	r24, 0x0088
    1fac:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <H_LCD_Vid_Wrt_CHr>
		global_u8_op2[1]=calc(global_u8_op2[1]);
    1fb0:	80 91 88 00 	lds	r24, 0x0088
    1fb4:	0e 94 56 11 	call	0x22ac	; 0x22ac <calc>
    1fb8:	80 93 88 00 	sts	0x0088, r24

		global_u8_operation2=H_KPD_GetPressedKey();
    1fbc:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1fc0:	80 93 8b 00 	sts	0x008B, r24
    1fc4:	04 c0       	rjmp	.+8      	; 0x1fce <main+0x10c>
		while(global_u8_operation2==255)
		{
			global_u8_operation2=H_KPD_GetPressedKey();
    1fc6:	0e 94 8a 08 	call	0x1114	; 0x1114 <H_KPD_GetPressedKey>
    1fca:	80 93 8b 00 	sts	0x008B, r24
		/***************print num on lcd and convrt it to intger***********/
		H_LCD_Vid_Wrt_CHr( global_u8_op2[1]);
		global_u8_op2[1]=calc(global_u8_op2[1]);

		global_u8_operation2=H_KPD_GetPressedKey();
		while(global_u8_operation2==255)
    1fce:	80 91 8b 00 	lds	r24, 0x008B
    1fd2:	8f 3f       	cpi	r24, 0xFF	; 255
    1fd4:	c1 f3       	breq	.-16     	; 0x1fc6 <main+0x104>
		{
			global_u8_operation2=H_KPD_GetPressedKey();
		}
		H_LCD_Vid_Wrt_CHr( global_u8_operation2);
    1fd6:	80 91 8b 00 	lds	r24, 0x008B
    1fda:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <H_LCD_Vid_Wrt_CHr>
		switch(global_u8_operation1)
    1fde:	80 91 8c 00 	lds	r24, 0x008C
    1fe2:	28 2f       	mov	r18, r24
    1fe4:	30 e0       	ldi	r19, 0x00	; 0
    1fe6:	38 8b       	std	Y+16, r19	; 0x10
    1fe8:	2f 87       	std	Y+15, r18	; 0x0f
    1fea:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fec:	98 89       	ldd	r25, Y+16	; 0x10
    1fee:	8b 32       	cpi	r24, 0x2B	; 43
    1ff0:	91 05       	cpc	r25, r1
    1ff2:	c1 f0       	breq	.+48     	; 0x2024 <main+0x162>
    1ff4:	2f 85       	ldd	r18, Y+15	; 0x0f
    1ff6:	38 89       	ldd	r19, Y+16	; 0x10
    1ff8:	2c 32       	cpi	r18, 0x2C	; 44
    1ffa:	31 05       	cpc	r19, r1
    1ffc:	3c f4       	brge	.+14     	; 0x200c <main+0x14a>
    1ffe:	8f 85       	ldd	r24, Y+15	; 0x0f
    2000:	98 89       	ldd	r25, Y+16	; 0x10
    2002:	8a 32       	cpi	r24, 0x2A	; 42
    2004:	91 05       	cpc	r25, r1
    2006:	09 f4       	brne	.+2      	; 0x200a <main+0x148>
    2008:	58 c0       	rjmp	.+176    	; 0x20ba <main+0x1f8>
    200a:	bb c0       	rjmp	.+374    	; 0x2182 <main+0x2c0>
    200c:	2f 85       	ldd	r18, Y+15	; 0x0f
    200e:	38 89       	ldd	r19, Y+16	; 0x10
    2010:	2d 32       	cpi	r18, 0x2D	; 45
    2012:	31 05       	cpc	r19, r1
    2014:	29 f1       	breq	.+74     	; 0x2060 <main+0x19e>
    2016:	8f 85       	ldd	r24, Y+15	; 0x0f
    2018:	98 89       	ldd	r25, Y+16	; 0x10
    201a:	8f 32       	cpi	r24, 0x2F	; 47
    201c:	91 05       	cpc	r25, r1
    201e:	09 f4       	brne	.+2      	; 0x2022 <main+0x160>
    2020:	80 c0       	rjmp	.+256    	; 0x2122 <main+0x260>
    2022:	af c0       	rjmp	.+350    	; 0x2182 <main+0x2c0>
		{
			case '+': global_u8_result=(global_u8_op1[0]*10)+global_u8_op1[1] +(global_u8_op2[0]*10)+global_u8_op2[1];      break;
    2024:	80 91 89 00 	lds	r24, 0x0089
    2028:	28 2f       	mov	r18, r24
    202a:	30 e0       	ldi	r19, 0x00	; 0
    202c:	80 91 87 00 	lds	r24, 0x0087
    2030:	88 2f       	mov	r24, r24
    2032:	90 e0       	ldi	r25, 0x00	; 0
    2034:	82 0f       	add	r24, r18
    2036:	93 1f       	adc	r25, r19
    2038:	9c 01       	movw	r18, r24
    203a:	22 0f       	add	r18, r18
    203c:	33 1f       	adc	r19, r19
    203e:	c9 01       	movw	r24, r18
    2040:	88 0f       	add	r24, r24
    2042:	99 1f       	adc	r25, r25
    2044:	88 0f       	add	r24, r24
    2046:	99 1f       	adc	r25, r25
    2048:	82 0f       	add	r24, r18
    204a:	93 1f       	adc	r25, r19
    204c:	98 2f       	mov	r25, r24
    204e:	80 91 8a 00 	lds	r24, 0x008A
    2052:	98 0f       	add	r25, r24
    2054:	80 91 88 00 	lds	r24, 0x0088
    2058:	89 0f       	add	r24, r25
    205a:	80 93 7c 00 	sts	0x007C, r24
    205e:	91 c0       	rjmp	.+290    	; 0x2182 <main+0x2c0>
			case '-': global_u8_result=(global_u8_op1[0]*10)+(global_u8_op1[1]) -(global_u8_op2[0]*10)-global_u8_op2[1];      break;
    2060:	80 91 89 00 	lds	r24, 0x0089
    2064:	88 2f       	mov	r24, r24
    2066:	90 e0       	ldi	r25, 0x00	; 0
    2068:	9c 01       	movw	r18, r24
    206a:	22 0f       	add	r18, r18
    206c:	33 1f       	adc	r19, r19
    206e:	c9 01       	movw	r24, r18
    2070:	88 0f       	add	r24, r24
    2072:	99 1f       	adc	r25, r25
    2074:	88 0f       	add	r24, r24
    2076:	99 1f       	adc	r25, r25
    2078:	82 0f       	add	r24, r18
    207a:	93 1f       	adc	r25, r19
    207c:	48 2f       	mov	r20, r24
    207e:	80 91 87 00 	lds	r24, 0x0087
    2082:	88 2f       	mov	r24, r24
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	9c 01       	movw	r18, r24
    2088:	22 0f       	add	r18, r18
    208a:	33 1f       	adc	r19, r19
    208c:	c9 01       	movw	r24, r18
    208e:	88 0f       	add	r24, r24
    2090:	99 1f       	adc	r25, r25
    2092:	88 0f       	add	r24, r24
    2094:	99 1f       	adc	r25, r25
    2096:	82 0f       	add	r24, r18
    2098:	93 1f       	adc	r25, r19
    209a:	90 95       	com	r25
    209c:	81 95       	neg	r24
    209e:	9f 4f       	sbci	r25, 0xFF	; 255
    20a0:	94 2f       	mov	r25, r20
    20a2:	98 0f       	add	r25, r24
    20a4:	80 91 8a 00 	lds	r24, 0x008A
    20a8:	98 0f       	add	r25, r24
    20aa:	80 91 88 00 	lds	r24, 0x0088
    20ae:	29 2f       	mov	r18, r25
    20b0:	28 1b       	sub	r18, r24
    20b2:	82 2f       	mov	r24, r18
    20b4:	80 93 7c 00 	sts	0x007C, r24
    20b8:	64 c0       	rjmp	.+200    	; 0x2182 <main+0x2c0>
			case '*': global_u8_result=((global_u8_op1[0]*10)+(global_u8_op1[1])) *((global_u8_op2[0]*10)+(global_u8_op2[1]));  break;
    20ba:	80 91 89 00 	lds	r24, 0x0089
    20be:	88 2f       	mov	r24, r24
    20c0:	90 e0       	ldi	r25, 0x00	; 0
    20c2:	9c 01       	movw	r18, r24
    20c4:	22 0f       	add	r18, r18
    20c6:	33 1f       	adc	r19, r19
    20c8:	c9 01       	movw	r24, r18
    20ca:	88 0f       	add	r24, r24
    20cc:	99 1f       	adc	r25, r25
    20ce:	88 0f       	add	r24, r24
    20d0:	99 1f       	adc	r25, r25
    20d2:	28 0f       	add	r18, r24
    20d4:	39 1f       	adc	r19, r25
    20d6:	80 91 8a 00 	lds	r24, 0x008A
    20da:	88 2f       	mov	r24, r24
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	a9 01       	movw	r20, r18
    20e0:	48 0f       	add	r20, r24
    20e2:	59 1f       	adc	r21, r25
    20e4:	80 91 87 00 	lds	r24, 0x0087
    20e8:	88 2f       	mov	r24, r24
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	9c 01       	movw	r18, r24
    20ee:	22 0f       	add	r18, r18
    20f0:	33 1f       	adc	r19, r19
    20f2:	c9 01       	movw	r24, r18
    20f4:	88 0f       	add	r24, r24
    20f6:	99 1f       	adc	r25, r25
    20f8:	88 0f       	add	r24, r24
    20fa:	99 1f       	adc	r25, r25
    20fc:	28 0f       	add	r18, r24
    20fe:	39 1f       	adc	r19, r25
    2100:	80 91 88 00 	lds	r24, 0x0088
    2104:	88 2f       	mov	r24, r24
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	82 0f       	add	r24, r18
    210a:	93 1f       	adc	r25, r19
    210c:	9c 01       	movw	r18, r24
    210e:	42 9f       	mul	r20, r18
    2110:	c0 01       	movw	r24, r0
    2112:	43 9f       	mul	r20, r19
    2114:	90 0d       	add	r25, r0
    2116:	52 9f       	mul	r21, r18
    2118:	90 0d       	add	r25, r0
    211a:	11 24       	eor	r1, r1
    211c:	80 93 7c 00 	sts	0x007C, r24
    2120:	30 c0       	rjmp	.+96     	; 0x2182 <main+0x2c0>
			case '/': global_u8_result=(global_u8_op1[0]*10+global_u8_op1[1]) /(global_u8_op2[0]*10+global_u8_op2[1]);  break;
    2122:	80 91 89 00 	lds	r24, 0x0089
    2126:	88 2f       	mov	r24, r24
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	9c 01       	movw	r18, r24
    212c:	22 0f       	add	r18, r18
    212e:	33 1f       	adc	r19, r19
    2130:	c9 01       	movw	r24, r18
    2132:	88 0f       	add	r24, r24
    2134:	99 1f       	adc	r25, r25
    2136:	88 0f       	add	r24, r24
    2138:	99 1f       	adc	r25, r25
    213a:	28 0f       	add	r18, r24
    213c:	39 1f       	adc	r19, r25
    213e:	80 91 8a 00 	lds	r24, 0x008A
    2142:	88 2f       	mov	r24, r24
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	a9 01       	movw	r20, r18
    2148:	48 0f       	add	r20, r24
    214a:	59 1f       	adc	r21, r25
    214c:	80 91 87 00 	lds	r24, 0x0087
    2150:	88 2f       	mov	r24, r24
    2152:	90 e0       	ldi	r25, 0x00	; 0
    2154:	9c 01       	movw	r18, r24
    2156:	22 0f       	add	r18, r18
    2158:	33 1f       	adc	r19, r19
    215a:	c9 01       	movw	r24, r18
    215c:	88 0f       	add	r24, r24
    215e:	99 1f       	adc	r25, r25
    2160:	88 0f       	add	r24, r24
    2162:	99 1f       	adc	r25, r25
    2164:	28 0f       	add	r18, r24
    2166:	39 1f       	adc	r19, r25
    2168:	80 91 88 00 	lds	r24, 0x0088
    216c:	88 2f       	mov	r24, r24
    216e:	90 e0       	ldi	r25, 0x00	; 0
    2170:	28 0f       	add	r18, r24
    2172:	39 1f       	adc	r19, r25
    2174:	ca 01       	movw	r24, r20
    2176:	b9 01       	movw	r22, r18
    2178:	0e 94 cb 11 	call	0x2396	; 0x2396 <__divmodhi4>
    217c:	cb 01       	movw	r24, r22
    217e:	80 93 7c 00 	sts	0x007C, r24
		}
		sprintf(arr,"%d",global_u8_result);
    2182:	80 91 7c 00 	lds	r24, 0x007C
    2186:	28 2f       	mov	r18, r24
    2188:	30 e0       	ldi	r19, 0x00	; 0
    218a:	00 d0       	rcall	.+0      	; 0x218c <main+0x2ca>
    218c:	00 d0       	rcall	.+0      	; 0x218e <main+0x2cc>
    218e:	00 d0       	rcall	.+0      	; 0x2190 <main+0x2ce>
    2190:	ed b7       	in	r30, 0x3d	; 61
    2192:	fe b7       	in	r31, 0x3e	; 62
    2194:	31 96       	adiw	r30, 0x01	; 1
    2196:	8d e7       	ldi	r24, 0x7D	; 125
    2198:	90 e0       	ldi	r25, 0x00	; 0
    219a:	91 83       	std	Z+1, r25	; 0x01
    219c:	80 83       	st	Z, r24
    219e:	80 e6       	ldi	r24, 0x60	; 96
    21a0:	90 e0       	ldi	r25, 0x00	; 0
    21a2:	93 83       	std	Z+3, r25	; 0x03
    21a4:	82 83       	std	Z+2, r24	; 0x02
    21a6:	35 83       	std	Z+5, r19	; 0x05
    21a8:	24 83       	std	Z+4, r18	; 0x04
    21aa:	0e 94 29 12 	call	0x2452	; 0x2452 <sprintf>
    21ae:	8d b7       	in	r24, 0x3d	; 61
    21b0:	9e b7       	in	r25, 0x3e	; 62
    21b2:	06 96       	adiw	r24, 0x06	; 6
    21b4:	0f b6       	in	r0, 0x3f	; 63
    21b6:	f8 94       	cli
    21b8:	9e bf       	out	0x3e, r25	; 62
    21ba:	0f be       	out	0x3f, r0	; 63
    21bc:	8d bf       	out	0x3d, r24	; 61
		H_LCD_Vid_Wrt_Str(arr);
    21be:	8d e7       	ldi	r24, 0x7D	; 125
    21c0:	90 e0       	ldi	r25, 0x00	; 0
    21c2:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <H_LCD_Vid_Wrt_Str>
    21c6:	80 e0       	ldi	r24, 0x00	; 0
    21c8:	90 e0       	ldi	r25, 0x00	; 0
    21ca:	aa e7       	ldi	r26, 0x7A	; 122
    21cc:	b4 e4       	ldi	r27, 0x44	; 68
    21ce:	8b 87       	std	Y+11, r24	; 0x0b
    21d0:	9c 87       	std	Y+12, r25	; 0x0c
    21d2:	ad 87       	std	Y+13, r26	; 0x0d
    21d4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    21d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    21da:	8d 85       	ldd	r24, Y+13	; 0x0d
    21dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    21de:	20 e0       	ldi	r18, 0x00	; 0
    21e0:	30 e0       	ldi	r19, 0x00	; 0
    21e2:	4a ef       	ldi	r20, 0xFA	; 250
    21e4:	54 e4       	ldi	r21, 0x44	; 68
    21e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21ea:	dc 01       	movw	r26, r24
    21ec:	cb 01       	movw	r24, r22
    21ee:	8f 83       	std	Y+7, r24	; 0x07
    21f0:	98 87       	std	Y+8, r25	; 0x08
    21f2:	a9 87       	std	Y+9, r26	; 0x09
    21f4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    21f6:	6f 81       	ldd	r22, Y+7	; 0x07
    21f8:	78 85       	ldd	r23, Y+8	; 0x08
    21fa:	89 85       	ldd	r24, Y+9	; 0x09
    21fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    21fe:	20 e0       	ldi	r18, 0x00	; 0
    2200:	30 e0       	ldi	r19, 0x00	; 0
    2202:	40 e8       	ldi	r20, 0x80	; 128
    2204:	5f e3       	ldi	r21, 0x3F	; 63
    2206:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    220a:	88 23       	and	r24, r24
    220c:	2c f4       	brge	.+10     	; 0x2218 <main+0x356>
		__ticks = 1;
    220e:	81 e0       	ldi	r24, 0x01	; 1
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	9e 83       	std	Y+6, r25	; 0x06
    2214:	8d 83       	std	Y+5, r24	; 0x05
    2216:	3f c0       	rjmp	.+126    	; 0x2296 <main+0x3d4>
	else if (__tmp > 65535)
    2218:	6f 81       	ldd	r22, Y+7	; 0x07
    221a:	78 85       	ldd	r23, Y+8	; 0x08
    221c:	89 85       	ldd	r24, Y+9	; 0x09
    221e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2220:	20 e0       	ldi	r18, 0x00	; 0
    2222:	3f ef       	ldi	r19, 0xFF	; 255
    2224:	4f e7       	ldi	r20, 0x7F	; 127
    2226:	57 e4       	ldi	r21, 0x47	; 71
    2228:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    222c:	18 16       	cp	r1, r24
    222e:	4c f5       	brge	.+82     	; 0x2282 <main+0x3c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2230:	6b 85       	ldd	r22, Y+11	; 0x0b
    2232:	7c 85       	ldd	r23, Y+12	; 0x0c
    2234:	8d 85       	ldd	r24, Y+13	; 0x0d
    2236:	9e 85       	ldd	r25, Y+14	; 0x0e
    2238:	20 e0       	ldi	r18, 0x00	; 0
    223a:	30 e0       	ldi	r19, 0x00	; 0
    223c:	40 e2       	ldi	r20, 0x20	; 32
    223e:	51 e4       	ldi	r21, 0x41	; 65
    2240:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2244:	dc 01       	movw	r26, r24
    2246:	cb 01       	movw	r24, r22
    2248:	bc 01       	movw	r22, r24
    224a:	cd 01       	movw	r24, r26
    224c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2250:	dc 01       	movw	r26, r24
    2252:	cb 01       	movw	r24, r22
    2254:	9e 83       	std	Y+6, r25	; 0x06
    2256:	8d 83       	std	Y+5, r24	; 0x05
    2258:	0f c0       	rjmp	.+30     	; 0x2278 <main+0x3b6>
    225a:	88 ec       	ldi	r24, 0xC8	; 200
    225c:	90 e0       	ldi	r25, 0x00	; 0
    225e:	9c 83       	std	Y+4, r25	; 0x04
    2260:	8b 83       	std	Y+3, r24	; 0x03
    2262:	8b 81       	ldd	r24, Y+3	; 0x03
    2264:	9c 81       	ldd	r25, Y+4	; 0x04
    2266:	01 97       	sbiw	r24, 0x01	; 1
    2268:	f1 f7       	brne	.-4      	; 0x2266 <main+0x3a4>
    226a:	9c 83       	std	Y+4, r25	; 0x04
    226c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    226e:	8d 81       	ldd	r24, Y+5	; 0x05
    2270:	9e 81       	ldd	r25, Y+6	; 0x06
    2272:	01 97       	sbiw	r24, 0x01	; 1
    2274:	9e 83       	std	Y+6, r25	; 0x06
    2276:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2278:	8d 81       	ldd	r24, Y+5	; 0x05
    227a:	9e 81       	ldd	r25, Y+6	; 0x06
    227c:	00 97       	sbiw	r24, 0x00	; 0
    227e:	69 f7       	brne	.-38     	; 0x225a <main+0x398>
    2280:	2e ce       	rjmp	.-932    	; 0x1ede <main+0x1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2282:	6f 81       	ldd	r22, Y+7	; 0x07
    2284:	78 85       	ldd	r23, Y+8	; 0x08
    2286:	89 85       	ldd	r24, Y+9	; 0x09
    2288:	9a 85       	ldd	r25, Y+10	; 0x0a
    228a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    228e:	dc 01       	movw	r26, r24
    2290:	cb 01       	movw	r24, r22
    2292:	9e 83       	std	Y+6, r25	; 0x06
    2294:	8d 83       	std	Y+5, r24	; 0x05
    2296:	8d 81       	ldd	r24, Y+5	; 0x05
    2298:	9e 81       	ldd	r25, Y+6	; 0x06
    229a:	9a 83       	std	Y+2, r25	; 0x02
    229c:	89 83       	std	Y+1, r24	; 0x01
    229e:	89 81       	ldd	r24, Y+1	; 0x01
    22a0:	9a 81       	ldd	r25, Y+2	; 0x02
    22a2:	01 97       	sbiw	r24, 0x01	; 1
    22a4:	f1 f7       	brne	.-4      	; 0x22a2 <main+0x3e0>
    22a6:	9a 83       	std	Y+2, r25	; 0x02
    22a8:	89 83       	std	Y+1, r24	; 0x01
    22aa:	19 ce       	rjmp	.-974    	; 0x1ede <main+0x1c>

000022ac <calc>:

	}
}
/************function to mapp char to integer numbers*********/
u8 calc(u8 num)
{
    22ac:	df 93       	push	r29
    22ae:	cf 93       	push	r28
    22b0:	00 d0       	rcall	.+0      	; 0x22b2 <calc+0x6>
    22b2:	0f 92       	push	r0
    22b4:	cd b7       	in	r28, 0x3d	; 61
    22b6:	de b7       	in	r29, 0x3e	; 62
    22b8:	89 83       	std	Y+1, r24	; 0x01
	switch(num)
    22ba:	89 81       	ldd	r24, Y+1	; 0x01
    22bc:	28 2f       	mov	r18, r24
    22be:	30 e0       	ldi	r19, 0x00	; 0
    22c0:	3b 83       	std	Y+3, r19	; 0x03
    22c2:	2a 83       	std	Y+2, r18	; 0x02
    22c4:	8a 81       	ldd	r24, Y+2	; 0x02
    22c6:	9b 81       	ldd	r25, Y+3	; 0x03
    22c8:	84 33       	cpi	r24, 0x34	; 52
    22ca:	91 05       	cpc	r25, r1
    22cc:	09 f4       	brne	.+2      	; 0x22d0 <calc+0x24>
    22ce:	4b c0       	rjmp	.+150    	; 0x2366 <calc+0xba>
    22d0:	2a 81       	ldd	r18, Y+2	; 0x02
    22d2:	3b 81       	ldd	r19, Y+3	; 0x03
    22d4:	25 33       	cpi	r18, 0x35	; 53
    22d6:	31 05       	cpc	r19, r1
    22d8:	dc f4       	brge	.+54     	; 0x2310 <calc+0x64>
    22da:	8a 81       	ldd	r24, Y+2	; 0x02
    22dc:	9b 81       	ldd	r25, Y+3	; 0x03
    22de:	81 33       	cpi	r24, 0x31	; 49
    22e0:	91 05       	cpc	r25, r1
    22e2:	c1 f1       	breq	.+112    	; 0x2354 <calc+0xa8>
    22e4:	2a 81       	ldd	r18, Y+2	; 0x02
    22e6:	3b 81       	ldd	r19, Y+3	; 0x03
    22e8:	22 33       	cpi	r18, 0x32	; 50
    22ea:	31 05       	cpc	r19, r1
    22ec:	34 f4       	brge	.+12     	; 0x22fa <calc+0x4e>
    22ee:	8a 81       	ldd	r24, Y+2	; 0x02
    22f0:	9b 81       	ldd	r25, Y+3	; 0x03
    22f2:	80 33       	cpi	r24, 0x30	; 48
    22f4:	91 05       	cpc	r25, r1
    22f6:	61 f1       	breq	.+88     	; 0x2350 <calc+0xa4>
    22f8:	47 c0       	rjmp	.+142    	; 0x2388 <calc+0xdc>
    22fa:	2a 81       	ldd	r18, Y+2	; 0x02
    22fc:	3b 81       	ldd	r19, Y+3	; 0x03
    22fe:	22 33       	cpi	r18, 0x32	; 50
    2300:	31 05       	cpc	r19, r1
    2302:	59 f1       	breq	.+86     	; 0x235a <calc+0xae>
    2304:	8a 81       	ldd	r24, Y+2	; 0x02
    2306:	9b 81       	ldd	r25, Y+3	; 0x03
    2308:	83 33       	cpi	r24, 0x33	; 51
    230a:	91 05       	cpc	r25, r1
    230c:	49 f1       	breq	.+82     	; 0x2360 <calc+0xb4>
    230e:	3c c0       	rjmp	.+120    	; 0x2388 <calc+0xdc>
    2310:	2a 81       	ldd	r18, Y+2	; 0x02
    2312:	3b 81       	ldd	r19, Y+3	; 0x03
    2314:	27 33       	cpi	r18, 0x37	; 55
    2316:	31 05       	cpc	r19, r1
    2318:	79 f1       	breq	.+94     	; 0x2378 <calc+0xcc>
    231a:	8a 81       	ldd	r24, Y+2	; 0x02
    231c:	9b 81       	ldd	r25, Y+3	; 0x03
    231e:	88 33       	cpi	r24, 0x38	; 56
    2320:	91 05       	cpc	r25, r1
    2322:	5c f4       	brge	.+22     	; 0x233a <calc+0x8e>
    2324:	2a 81       	ldd	r18, Y+2	; 0x02
    2326:	3b 81       	ldd	r19, Y+3	; 0x03
    2328:	25 33       	cpi	r18, 0x35	; 53
    232a:	31 05       	cpc	r19, r1
    232c:	f9 f0       	breq	.+62     	; 0x236c <calc+0xc0>
    232e:	8a 81       	ldd	r24, Y+2	; 0x02
    2330:	9b 81       	ldd	r25, Y+3	; 0x03
    2332:	86 33       	cpi	r24, 0x36	; 54
    2334:	91 05       	cpc	r25, r1
    2336:	e9 f0       	breq	.+58     	; 0x2372 <calc+0xc6>
    2338:	27 c0       	rjmp	.+78     	; 0x2388 <calc+0xdc>
    233a:	2a 81       	ldd	r18, Y+2	; 0x02
    233c:	3b 81       	ldd	r19, Y+3	; 0x03
    233e:	28 33       	cpi	r18, 0x38	; 56
    2340:	31 05       	cpc	r19, r1
    2342:	e9 f0       	breq	.+58     	; 0x237e <calc+0xd2>
    2344:	8a 81       	ldd	r24, Y+2	; 0x02
    2346:	9b 81       	ldd	r25, Y+3	; 0x03
    2348:	89 33       	cpi	r24, 0x39	; 57
    234a:	91 05       	cpc	r25, r1
    234c:	d9 f0       	breq	.+54     	; 0x2384 <calc+0xd8>
    234e:	1c c0       	rjmp	.+56     	; 0x2388 <calc+0xdc>
	{
		case '0': num=0;                                                                                            break;
    2350:	19 82       	std	Y+1, r1	; 0x01
    2352:	1a c0       	rjmp	.+52     	; 0x2388 <calc+0xdc>
		case '1': num=1 ;                                                                                           break;
    2354:	81 e0       	ldi	r24, 0x01	; 1
    2356:	89 83       	std	Y+1, r24	; 0x01
    2358:	17 c0       	rjmp	.+46     	; 0x2388 <calc+0xdc>
		case '2': num=2 ;                                                                                           break;
    235a:	82 e0       	ldi	r24, 0x02	; 2
    235c:	89 83       	std	Y+1, r24	; 0x01
    235e:	14 c0       	rjmp	.+40     	; 0x2388 <calc+0xdc>
		case '3': num=3 ;                                                                                           break;
    2360:	83 e0       	ldi	r24, 0x03	; 3
    2362:	89 83       	std	Y+1, r24	; 0x01
    2364:	11 c0       	rjmp	.+34     	; 0x2388 <calc+0xdc>
		case '4': num=4 ;                                                                                           break;
    2366:	84 e0       	ldi	r24, 0x04	; 4
    2368:	89 83       	std	Y+1, r24	; 0x01
    236a:	0e c0       	rjmp	.+28     	; 0x2388 <calc+0xdc>
		case '5': num=5 ;                                                                                           break;
    236c:	85 e0       	ldi	r24, 0x05	; 5
    236e:	89 83       	std	Y+1, r24	; 0x01
    2370:	0b c0       	rjmp	.+22     	; 0x2388 <calc+0xdc>
		case '6': num=6 ;                                                                                           break;
    2372:	86 e0       	ldi	r24, 0x06	; 6
    2374:	89 83       	std	Y+1, r24	; 0x01
    2376:	08 c0       	rjmp	.+16     	; 0x2388 <calc+0xdc>
		case '7': num=7 ;                                                                                           break;
    2378:	87 e0       	ldi	r24, 0x07	; 7
    237a:	89 83       	std	Y+1, r24	; 0x01
    237c:	05 c0       	rjmp	.+10     	; 0x2388 <calc+0xdc>
		case '8': num=8 ;                                                                                           break;
    237e:	88 e0       	ldi	r24, 0x08	; 8
    2380:	89 83       	std	Y+1, r24	; 0x01
    2382:	02 c0       	rjmp	.+4      	; 0x2388 <calc+0xdc>
		case '9': num=9 ;                                                                                           break;
    2384:	89 e0       	ldi	r24, 0x09	; 9
    2386:	89 83       	std	Y+1, r24	; 0x01
	}
	return num;
    2388:	89 81       	ldd	r24, Y+1	; 0x01
}
    238a:	0f 90       	pop	r0
    238c:	0f 90       	pop	r0
    238e:	0f 90       	pop	r0
    2390:	cf 91       	pop	r28
    2392:	df 91       	pop	r29
    2394:	08 95       	ret

00002396 <__divmodhi4>:
    2396:	97 fb       	bst	r25, 7
    2398:	09 2e       	mov	r0, r25
    239a:	07 26       	eor	r0, r23
    239c:	0a d0       	rcall	.+20     	; 0x23b2 <__divmodhi4_neg1>
    239e:	77 fd       	sbrc	r23, 7
    23a0:	04 d0       	rcall	.+8      	; 0x23aa <__divmodhi4_neg2>
    23a2:	0c d0       	rcall	.+24     	; 0x23bc <__udivmodhi4>
    23a4:	06 d0       	rcall	.+12     	; 0x23b2 <__divmodhi4_neg1>
    23a6:	00 20       	and	r0, r0
    23a8:	1a f4       	brpl	.+6      	; 0x23b0 <__divmodhi4_exit>

000023aa <__divmodhi4_neg2>:
    23aa:	70 95       	com	r23
    23ac:	61 95       	neg	r22
    23ae:	7f 4f       	sbci	r23, 0xFF	; 255

000023b0 <__divmodhi4_exit>:
    23b0:	08 95       	ret

000023b2 <__divmodhi4_neg1>:
    23b2:	f6 f7       	brtc	.-4      	; 0x23b0 <__divmodhi4_exit>
    23b4:	90 95       	com	r25
    23b6:	81 95       	neg	r24
    23b8:	9f 4f       	sbci	r25, 0xFF	; 255
    23ba:	08 95       	ret

000023bc <__udivmodhi4>:
    23bc:	aa 1b       	sub	r26, r26
    23be:	bb 1b       	sub	r27, r27
    23c0:	51 e1       	ldi	r21, 0x11	; 17
    23c2:	07 c0       	rjmp	.+14     	; 0x23d2 <__udivmodhi4_ep>

000023c4 <__udivmodhi4_loop>:
    23c4:	aa 1f       	adc	r26, r26
    23c6:	bb 1f       	adc	r27, r27
    23c8:	a6 17       	cp	r26, r22
    23ca:	b7 07       	cpc	r27, r23
    23cc:	10 f0       	brcs	.+4      	; 0x23d2 <__udivmodhi4_ep>
    23ce:	a6 1b       	sub	r26, r22
    23d0:	b7 0b       	sbc	r27, r23

000023d2 <__udivmodhi4_ep>:
    23d2:	88 1f       	adc	r24, r24
    23d4:	99 1f       	adc	r25, r25
    23d6:	5a 95       	dec	r21
    23d8:	a9 f7       	brne	.-22     	; 0x23c4 <__udivmodhi4_loop>
    23da:	80 95       	com	r24
    23dc:	90 95       	com	r25
    23de:	bc 01       	movw	r22, r24
    23e0:	cd 01       	movw	r24, r26
    23e2:	08 95       	ret

000023e4 <__prologue_saves__>:
    23e4:	2f 92       	push	r2
    23e6:	3f 92       	push	r3
    23e8:	4f 92       	push	r4
    23ea:	5f 92       	push	r5
    23ec:	6f 92       	push	r6
    23ee:	7f 92       	push	r7
    23f0:	8f 92       	push	r8
    23f2:	9f 92       	push	r9
    23f4:	af 92       	push	r10
    23f6:	bf 92       	push	r11
    23f8:	cf 92       	push	r12
    23fa:	df 92       	push	r13
    23fc:	ef 92       	push	r14
    23fe:	ff 92       	push	r15
    2400:	0f 93       	push	r16
    2402:	1f 93       	push	r17
    2404:	cf 93       	push	r28
    2406:	df 93       	push	r29
    2408:	cd b7       	in	r28, 0x3d	; 61
    240a:	de b7       	in	r29, 0x3e	; 62
    240c:	ca 1b       	sub	r28, r26
    240e:	db 0b       	sbc	r29, r27
    2410:	0f b6       	in	r0, 0x3f	; 63
    2412:	f8 94       	cli
    2414:	de bf       	out	0x3e, r29	; 62
    2416:	0f be       	out	0x3f, r0	; 63
    2418:	cd bf       	out	0x3d, r28	; 61
    241a:	09 94       	ijmp

0000241c <__epilogue_restores__>:
    241c:	2a 88       	ldd	r2, Y+18	; 0x12
    241e:	39 88       	ldd	r3, Y+17	; 0x11
    2420:	48 88       	ldd	r4, Y+16	; 0x10
    2422:	5f 84       	ldd	r5, Y+15	; 0x0f
    2424:	6e 84       	ldd	r6, Y+14	; 0x0e
    2426:	7d 84       	ldd	r7, Y+13	; 0x0d
    2428:	8c 84       	ldd	r8, Y+12	; 0x0c
    242a:	9b 84       	ldd	r9, Y+11	; 0x0b
    242c:	aa 84       	ldd	r10, Y+10	; 0x0a
    242e:	b9 84       	ldd	r11, Y+9	; 0x09
    2430:	c8 84       	ldd	r12, Y+8	; 0x08
    2432:	df 80       	ldd	r13, Y+7	; 0x07
    2434:	ee 80       	ldd	r14, Y+6	; 0x06
    2436:	fd 80       	ldd	r15, Y+5	; 0x05
    2438:	0c 81       	ldd	r16, Y+4	; 0x04
    243a:	1b 81       	ldd	r17, Y+3	; 0x03
    243c:	aa 81       	ldd	r26, Y+2	; 0x02
    243e:	b9 81       	ldd	r27, Y+1	; 0x01
    2440:	ce 0f       	add	r28, r30
    2442:	d1 1d       	adc	r29, r1
    2444:	0f b6       	in	r0, 0x3f	; 63
    2446:	f8 94       	cli
    2448:	de bf       	out	0x3e, r29	; 62
    244a:	0f be       	out	0x3f, r0	; 63
    244c:	cd bf       	out	0x3d, r28	; 61
    244e:	ed 01       	movw	r28, r26
    2450:	08 95       	ret

00002452 <sprintf>:
    2452:	ae e0       	ldi	r26, 0x0E	; 14
    2454:	b0 e0       	ldi	r27, 0x00	; 0
    2456:	ef e2       	ldi	r30, 0x2F	; 47
    2458:	f2 e1       	ldi	r31, 0x12	; 18
    245a:	0c 94 00 12 	jmp	0x2400	; 0x2400 <__prologue_saves__+0x1c>
    245e:	0d 89       	ldd	r16, Y+21	; 0x15
    2460:	1e 89       	ldd	r17, Y+22	; 0x16
    2462:	86 e0       	ldi	r24, 0x06	; 6
    2464:	8c 83       	std	Y+4, r24	; 0x04
    2466:	1a 83       	std	Y+2, r17	; 0x02
    2468:	09 83       	std	Y+1, r16	; 0x01
    246a:	8f ef       	ldi	r24, 0xFF	; 255
    246c:	9f e7       	ldi	r25, 0x7F	; 127
    246e:	9e 83       	std	Y+6, r25	; 0x06
    2470:	8d 83       	std	Y+5, r24	; 0x05
    2472:	9e 01       	movw	r18, r28
    2474:	27 5e       	subi	r18, 0xE7	; 231
    2476:	3f 4f       	sbci	r19, 0xFF	; 255
    2478:	ce 01       	movw	r24, r28
    247a:	01 96       	adiw	r24, 0x01	; 1
    247c:	6f 89       	ldd	r22, Y+23	; 0x17
    247e:	78 8d       	ldd	r23, Y+24	; 0x18
    2480:	a9 01       	movw	r20, r18
    2482:	0e 94 4d 12 	call	0x249a	; 0x249a <vfprintf>
    2486:	2f 81       	ldd	r18, Y+7	; 0x07
    2488:	38 85       	ldd	r19, Y+8	; 0x08
    248a:	02 0f       	add	r16, r18
    248c:	13 1f       	adc	r17, r19
    248e:	f8 01       	movw	r30, r16
    2490:	10 82       	st	Z, r1
    2492:	2e 96       	adiw	r28, 0x0e	; 14
    2494:	e4 e0       	ldi	r30, 0x04	; 4
    2496:	0c 94 1c 12 	jmp	0x2438	; 0x2438 <__epilogue_restores__+0x1c>

0000249a <vfprintf>:
    249a:	ab e0       	ldi	r26, 0x0B	; 11
    249c:	b0 e0       	ldi	r27, 0x00	; 0
    249e:	e3 e5       	ldi	r30, 0x53	; 83
    24a0:	f2 e1       	ldi	r31, 0x12	; 18
    24a2:	0c 94 f2 11 	jmp	0x23e4	; 0x23e4 <__prologue_saves__>
    24a6:	3c 01       	movw	r6, r24
    24a8:	2b 01       	movw	r4, r22
    24aa:	5a 01       	movw	r10, r20
    24ac:	fc 01       	movw	r30, r24
    24ae:	17 82       	std	Z+7, r1	; 0x07
    24b0:	16 82       	std	Z+6, r1	; 0x06
    24b2:	83 81       	ldd	r24, Z+3	; 0x03
    24b4:	81 fd       	sbrc	r24, 1
    24b6:	03 c0       	rjmp	.+6      	; 0x24be <vfprintf+0x24>
    24b8:	6f ef       	ldi	r22, 0xFF	; 255
    24ba:	7f ef       	ldi	r23, 0xFF	; 255
    24bc:	c6 c1       	rjmp	.+908    	; 0x284a <vfprintf+0x3b0>
    24be:	9a e0       	ldi	r25, 0x0A	; 10
    24c0:	89 2e       	mov	r8, r25
    24c2:	1e 01       	movw	r2, r28
    24c4:	08 94       	sec
    24c6:	21 1c       	adc	r2, r1
    24c8:	31 1c       	adc	r3, r1
    24ca:	f3 01       	movw	r30, r6
    24cc:	23 81       	ldd	r18, Z+3	; 0x03
    24ce:	f2 01       	movw	r30, r4
    24d0:	23 fd       	sbrc	r18, 3
    24d2:	85 91       	lpm	r24, Z+
    24d4:	23 ff       	sbrs	r18, 3
    24d6:	81 91       	ld	r24, Z+
    24d8:	2f 01       	movw	r4, r30
    24da:	88 23       	and	r24, r24
    24dc:	09 f4       	brne	.+2      	; 0x24e0 <vfprintf+0x46>
    24de:	b2 c1       	rjmp	.+868    	; 0x2844 <vfprintf+0x3aa>
    24e0:	85 32       	cpi	r24, 0x25	; 37
    24e2:	39 f4       	brne	.+14     	; 0x24f2 <vfprintf+0x58>
    24e4:	23 fd       	sbrc	r18, 3
    24e6:	85 91       	lpm	r24, Z+
    24e8:	23 ff       	sbrs	r18, 3
    24ea:	81 91       	ld	r24, Z+
    24ec:	2f 01       	movw	r4, r30
    24ee:	85 32       	cpi	r24, 0x25	; 37
    24f0:	29 f4       	brne	.+10     	; 0x24fc <vfprintf+0x62>
    24f2:	90 e0       	ldi	r25, 0x00	; 0
    24f4:	b3 01       	movw	r22, r6
    24f6:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    24fa:	e7 cf       	rjmp	.-50     	; 0x24ca <vfprintf+0x30>
    24fc:	98 2f       	mov	r25, r24
    24fe:	ff 24       	eor	r15, r15
    2500:	ee 24       	eor	r14, r14
    2502:	99 24       	eor	r9, r9
    2504:	ff e1       	ldi	r31, 0x1F	; 31
    2506:	ff 15       	cp	r31, r15
    2508:	d0 f0       	brcs	.+52     	; 0x253e <vfprintf+0xa4>
    250a:	9b 32       	cpi	r25, 0x2B	; 43
    250c:	69 f0       	breq	.+26     	; 0x2528 <vfprintf+0x8e>
    250e:	9c 32       	cpi	r25, 0x2C	; 44
    2510:	28 f4       	brcc	.+10     	; 0x251c <vfprintf+0x82>
    2512:	90 32       	cpi	r25, 0x20	; 32
    2514:	59 f0       	breq	.+22     	; 0x252c <vfprintf+0x92>
    2516:	93 32       	cpi	r25, 0x23	; 35
    2518:	91 f4       	brne	.+36     	; 0x253e <vfprintf+0xa4>
    251a:	0e c0       	rjmp	.+28     	; 0x2538 <vfprintf+0x9e>
    251c:	9d 32       	cpi	r25, 0x2D	; 45
    251e:	49 f0       	breq	.+18     	; 0x2532 <vfprintf+0x98>
    2520:	90 33       	cpi	r25, 0x30	; 48
    2522:	69 f4       	brne	.+26     	; 0x253e <vfprintf+0xa4>
    2524:	41 e0       	ldi	r20, 0x01	; 1
    2526:	24 c0       	rjmp	.+72     	; 0x2570 <vfprintf+0xd6>
    2528:	52 e0       	ldi	r21, 0x02	; 2
    252a:	f5 2a       	or	r15, r21
    252c:	84 e0       	ldi	r24, 0x04	; 4
    252e:	f8 2a       	or	r15, r24
    2530:	28 c0       	rjmp	.+80     	; 0x2582 <vfprintf+0xe8>
    2532:	98 e0       	ldi	r25, 0x08	; 8
    2534:	f9 2a       	or	r15, r25
    2536:	25 c0       	rjmp	.+74     	; 0x2582 <vfprintf+0xe8>
    2538:	e0 e1       	ldi	r30, 0x10	; 16
    253a:	fe 2a       	or	r15, r30
    253c:	22 c0       	rjmp	.+68     	; 0x2582 <vfprintf+0xe8>
    253e:	f7 fc       	sbrc	r15, 7
    2540:	29 c0       	rjmp	.+82     	; 0x2594 <vfprintf+0xfa>
    2542:	89 2f       	mov	r24, r25
    2544:	80 53       	subi	r24, 0x30	; 48
    2546:	8a 30       	cpi	r24, 0x0A	; 10
    2548:	70 f4       	brcc	.+28     	; 0x2566 <vfprintf+0xcc>
    254a:	f6 fe       	sbrs	r15, 6
    254c:	05 c0       	rjmp	.+10     	; 0x2558 <vfprintf+0xbe>
    254e:	98 9c       	mul	r9, r8
    2550:	90 2c       	mov	r9, r0
    2552:	11 24       	eor	r1, r1
    2554:	98 0e       	add	r9, r24
    2556:	15 c0       	rjmp	.+42     	; 0x2582 <vfprintf+0xe8>
    2558:	e8 9c       	mul	r14, r8
    255a:	e0 2c       	mov	r14, r0
    255c:	11 24       	eor	r1, r1
    255e:	e8 0e       	add	r14, r24
    2560:	f0 e2       	ldi	r31, 0x20	; 32
    2562:	ff 2a       	or	r15, r31
    2564:	0e c0       	rjmp	.+28     	; 0x2582 <vfprintf+0xe8>
    2566:	9e 32       	cpi	r25, 0x2E	; 46
    2568:	29 f4       	brne	.+10     	; 0x2574 <vfprintf+0xda>
    256a:	f6 fc       	sbrc	r15, 6
    256c:	6b c1       	rjmp	.+726    	; 0x2844 <vfprintf+0x3aa>
    256e:	40 e4       	ldi	r20, 0x40	; 64
    2570:	f4 2a       	or	r15, r20
    2572:	07 c0       	rjmp	.+14     	; 0x2582 <vfprintf+0xe8>
    2574:	9c 36       	cpi	r25, 0x6C	; 108
    2576:	19 f4       	brne	.+6      	; 0x257e <vfprintf+0xe4>
    2578:	50 e8       	ldi	r21, 0x80	; 128
    257a:	f5 2a       	or	r15, r21
    257c:	02 c0       	rjmp	.+4      	; 0x2582 <vfprintf+0xe8>
    257e:	98 36       	cpi	r25, 0x68	; 104
    2580:	49 f4       	brne	.+18     	; 0x2594 <vfprintf+0xfa>
    2582:	f2 01       	movw	r30, r4
    2584:	23 fd       	sbrc	r18, 3
    2586:	95 91       	lpm	r25, Z+
    2588:	23 ff       	sbrs	r18, 3
    258a:	91 91       	ld	r25, Z+
    258c:	2f 01       	movw	r4, r30
    258e:	99 23       	and	r25, r25
    2590:	09 f0       	breq	.+2      	; 0x2594 <vfprintf+0xfa>
    2592:	b8 cf       	rjmp	.-144    	; 0x2504 <vfprintf+0x6a>
    2594:	89 2f       	mov	r24, r25
    2596:	85 54       	subi	r24, 0x45	; 69
    2598:	83 30       	cpi	r24, 0x03	; 3
    259a:	18 f0       	brcs	.+6      	; 0x25a2 <vfprintf+0x108>
    259c:	80 52       	subi	r24, 0x20	; 32
    259e:	83 30       	cpi	r24, 0x03	; 3
    25a0:	38 f4       	brcc	.+14     	; 0x25b0 <vfprintf+0x116>
    25a2:	44 e0       	ldi	r20, 0x04	; 4
    25a4:	50 e0       	ldi	r21, 0x00	; 0
    25a6:	a4 0e       	add	r10, r20
    25a8:	b5 1e       	adc	r11, r21
    25aa:	5f e3       	ldi	r21, 0x3F	; 63
    25ac:	59 83       	std	Y+1, r21	; 0x01
    25ae:	0f c0       	rjmp	.+30     	; 0x25ce <vfprintf+0x134>
    25b0:	93 36       	cpi	r25, 0x63	; 99
    25b2:	31 f0       	breq	.+12     	; 0x25c0 <vfprintf+0x126>
    25b4:	93 37       	cpi	r25, 0x73	; 115
    25b6:	79 f0       	breq	.+30     	; 0x25d6 <vfprintf+0x13c>
    25b8:	93 35       	cpi	r25, 0x53	; 83
    25ba:	09 f0       	breq	.+2      	; 0x25be <vfprintf+0x124>
    25bc:	56 c0       	rjmp	.+172    	; 0x266a <vfprintf+0x1d0>
    25be:	20 c0       	rjmp	.+64     	; 0x2600 <vfprintf+0x166>
    25c0:	f5 01       	movw	r30, r10
    25c2:	80 81       	ld	r24, Z
    25c4:	89 83       	std	Y+1, r24	; 0x01
    25c6:	42 e0       	ldi	r20, 0x02	; 2
    25c8:	50 e0       	ldi	r21, 0x00	; 0
    25ca:	a4 0e       	add	r10, r20
    25cc:	b5 1e       	adc	r11, r21
    25ce:	61 01       	movw	r12, r2
    25d0:	01 e0       	ldi	r16, 0x01	; 1
    25d2:	10 e0       	ldi	r17, 0x00	; 0
    25d4:	12 c0       	rjmp	.+36     	; 0x25fa <vfprintf+0x160>
    25d6:	f5 01       	movw	r30, r10
    25d8:	c0 80       	ld	r12, Z
    25da:	d1 80       	ldd	r13, Z+1	; 0x01
    25dc:	f6 fc       	sbrc	r15, 6
    25de:	03 c0       	rjmp	.+6      	; 0x25e6 <vfprintf+0x14c>
    25e0:	6f ef       	ldi	r22, 0xFF	; 255
    25e2:	7f ef       	ldi	r23, 0xFF	; 255
    25e4:	02 c0       	rjmp	.+4      	; 0x25ea <vfprintf+0x150>
    25e6:	69 2d       	mov	r22, r9
    25e8:	70 e0       	ldi	r23, 0x00	; 0
    25ea:	42 e0       	ldi	r20, 0x02	; 2
    25ec:	50 e0       	ldi	r21, 0x00	; 0
    25ee:	a4 0e       	add	r10, r20
    25f0:	b5 1e       	adc	r11, r21
    25f2:	c6 01       	movw	r24, r12
    25f4:	0e 94 35 14 	call	0x286a	; 0x286a <strnlen>
    25f8:	8c 01       	movw	r16, r24
    25fa:	5f e7       	ldi	r21, 0x7F	; 127
    25fc:	f5 22       	and	r15, r21
    25fe:	14 c0       	rjmp	.+40     	; 0x2628 <vfprintf+0x18e>
    2600:	f5 01       	movw	r30, r10
    2602:	c0 80       	ld	r12, Z
    2604:	d1 80       	ldd	r13, Z+1	; 0x01
    2606:	f6 fc       	sbrc	r15, 6
    2608:	03 c0       	rjmp	.+6      	; 0x2610 <vfprintf+0x176>
    260a:	6f ef       	ldi	r22, 0xFF	; 255
    260c:	7f ef       	ldi	r23, 0xFF	; 255
    260e:	02 c0       	rjmp	.+4      	; 0x2614 <vfprintf+0x17a>
    2610:	69 2d       	mov	r22, r9
    2612:	70 e0       	ldi	r23, 0x00	; 0
    2614:	42 e0       	ldi	r20, 0x02	; 2
    2616:	50 e0       	ldi	r21, 0x00	; 0
    2618:	a4 0e       	add	r10, r20
    261a:	b5 1e       	adc	r11, r21
    261c:	c6 01       	movw	r24, r12
    261e:	0e 94 2a 14 	call	0x2854	; 0x2854 <strnlen_P>
    2622:	8c 01       	movw	r16, r24
    2624:	50 e8       	ldi	r21, 0x80	; 128
    2626:	f5 2a       	or	r15, r21
    2628:	f3 fe       	sbrs	r15, 3
    262a:	07 c0       	rjmp	.+14     	; 0x263a <vfprintf+0x1a0>
    262c:	1a c0       	rjmp	.+52     	; 0x2662 <vfprintf+0x1c8>
    262e:	80 e2       	ldi	r24, 0x20	; 32
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	b3 01       	movw	r22, r6
    2634:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    2638:	ea 94       	dec	r14
    263a:	8e 2d       	mov	r24, r14
    263c:	90 e0       	ldi	r25, 0x00	; 0
    263e:	08 17       	cp	r16, r24
    2640:	19 07       	cpc	r17, r25
    2642:	a8 f3       	brcs	.-22     	; 0x262e <vfprintf+0x194>
    2644:	0e c0       	rjmp	.+28     	; 0x2662 <vfprintf+0x1c8>
    2646:	f6 01       	movw	r30, r12
    2648:	f7 fc       	sbrc	r15, 7
    264a:	85 91       	lpm	r24, Z+
    264c:	f7 fe       	sbrs	r15, 7
    264e:	81 91       	ld	r24, Z+
    2650:	6f 01       	movw	r12, r30
    2652:	90 e0       	ldi	r25, 0x00	; 0
    2654:	b3 01       	movw	r22, r6
    2656:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    265a:	e1 10       	cpse	r14, r1
    265c:	ea 94       	dec	r14
    265e:	01 50       	subi	r16, 0x01	; 1
    2660:	10 40       	sbci	r17, 0x00	; 0
    2662:	01 15       	cp	r16, r1
    2664:	11 05       	cpc	r17, r1
    2666:	79 f7       	brne	.-34     	; 0x2646 <vfprintf+0x1ac>
    2668:	ea c0       	rjmp	.+468    	; 0x283e <vfprintf+0x3a4>
    266a:	94 36       	cpi	r25, 0x64	; 100
    266c:	11 f0       	breq	.+4      	; 0x2672 <vfprintf+0x1d8>
    266e:	99 36       	cpi	r25, 0x69	; 105
    2670:	69 f5       	brne	.+90     	; 0x26cc <vfprintf+0x232>
    2672:	f7 fe       	sbrs	r15, 7
    2674:	08 c0       	rjmp	.+16     	; 0x2686 <vfprintf+0x1ec>
    2676:	f5 01       	movw	r30, r10
    2678:	20 81       	ld	r18, Z
    267a:	31 81       	ldd	r19, Z+1	; 0x01
    267c:	42 81       	ldd	r20, Z+2	; 0x02
    267e:	53 81       	ldd	r21, Z+3	; 0x03
    2680:	84 e0       	ldi	r24, 0x04	; 4
    2682:	90 e0       	ldi	r25, 0x00	; 0
    2684:	0a c0       	rjmp	.+20     	; 0x269a <vfprintf+0x200>
    2686:	f5 01       	movw	r30, r10
    2688:	80 81       	ld	r24, Z
    268a:	91 81       	ldd	r25, Z+1	; 0x01
    268c:	9c 01       	movw	r18, r24
    268e:	44 27       	eor	r20, r20
    2690:	37 fd       	sbrc	r19, 7
    2692:	40 95       	com	r20
    2694:	54 2f       	mov	r21, r20
    2696:	82 e0       	ldi	r24, 0x02	; 2
    2698:	90 e0       	ldi	r25, 0x00	; 0
    269a:	a8 0e       	add	r10, r24
    269c:	b9 1e       	adc	r11, r25
    269e:	9f e6       	ldi	r25, 0x6F	; 111
    26a0:	f9 22       	and	r15, r25
    26a2:	57 ff       	sbrs	r21, 7
    26a4:	09 c0       	rjmp	.+18     	; 0x26b8 <vfprintf+0x21e>
    26a6:	50 95       	com	r21
    26a8:	40 95       	com	r20
    26aa:	30 95       	com	r19
    26ac:	21 95       	neg	r18
    26ae:	3f 4f       	sbci	r19, 0xFF	; 255
    26b0:	4f 4f       	sbci	r20, 0xFF	; 255
    26b2:	5f 4f       	sbci	r21, 0xFF	; 255
    26b4:	e0 e8       	ldi	r30, 0x80	; 128
    26b6:	fe 2a       	or	r15, r30
    26b8:	ca 01       	movw	r24, r20
    26ba:	b9 01       	movw	r22, r18
    26bc:	a1 01       	movw	r20, r2
    26be:	2a e0       	ldi	r18, 0x0A	; 10
    26c0:	30 e0       	ldi	r19, 0x00	; 0
    26c2:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <__ultoa_invert>
    26c6:	d8 2e       	mov	r13, r24
    26c8:	d2 18       	sub	r13, r2
    26ca:	40 c0       	rjmp	.+128    	; 0x274c <vfprintf+0x2b2>
    26cc:	95 37       	cpi	r25, 0x75	; 117
    26ce:	29 f4       	brne	.+10     	; 0x26da <vfprintf+0x240>
    26d0:	1f 2d       	mov	r17, r15
    26d2:	1f 7e       	andi	r17, 0xEF	; 239
    26d4:	2a e0       	ldi	r18, 0x0A	; 10
    26d6:	30 e0       	ldi	r19, 0x00	; 0
    26d8:	1d c0       	rjmp	.+58     	; 0x2714 <vfprintf+0x27a>
    26da:	1f 2d       	mov	r17, r15
    26dc:	19 7f       	andi	r17, 0xF9	; 249
    26de:	9f 36       	cpi	r25, 0x6F	; 111
    26e0:	61 f0       	breq	.+24     	; 0x26fa <vfprintf+0x260>
    26e2:	90 37       	cpi	r25, 0x70	; 112
    26e4:	20 f4       	brcc	.+8      	; 0x26ee <vfprintf+0x254>
    26e6:	98 35       	cpi	r25, 0x58	; 88
    26e8:	09 f0       	breq	.+2      	; 0x26ec <vfprintf+0x252>
    26ea:	ac c0       	rjmp	.+344    	; 0x2844 <vfprintf+0x3aa>
    26ec:	0f c0       	rjmp	.+30     	; 0x270c <vfprintf+0x272>
    26ee:	90 37       	cpi	r25, 0x70	; 112
    26f0:	39 f0       	breq	.+14     	; 0x2700 <vfprintf+0x266>
    26f2:	98 37       	cpi	r25, 0x78	; 120
    26f4:	09 f0       	breq	.+2      	; 0x26f8 <vfprintf+0x25e>
    26f6:	a6 c0       	rjmp	.+332    	; 0x2844 <vfprintf+0x3aa>
    26f8:	04 c0       	rjmp	.+8      	; 0x2702 <vfprintf+0x268>
    26fa:	28 e0       	ldi	r18, 0x08	; 8
    26fc:	30 e0       	ldi	r19, 0x00	; 0
    26fe:	0a c0       	rjmp	.+20     	; 0x2714 <vfprintf+0x27a>
    2700:	10 61       	ori	r17, 0x10	; 16
    2702:	14 fd       	sbrc	r17, 4
    2704:	14 60       	ori	r17, 0x04	; 4
    2706:	20 e1       	ldi	r18, 0x10	; 16
    2708:	30 e0       	ldi	r19, 0x00	; 0
    270a:	04 c0       	rjmp	.+8      	; 0x2714 <vfprintf+0x27a>
    270c:	14 fd       	sbrc	r17, 4
    270e:	16 60       	ori	r17, 0x06	; 6
    2710:	20 e1       	ldi	r18, 0x10	; 16
    2712:	32 e0       	ldi	r19, 0x02	; 2
    2714:	17 ff       	sbrs	r17, 7
    2716:	08 c0       	rjmp	.+16     	; 0x2728 <vfprintf+0x28e>
    2718:	f5 01       	movw	r30, r10
    271a:	60 81       	ld	r22, Z
    271c:	71 81       	ldd	r23, Z+1	; 0x01
    271e:	82 81       	ldd	r24, Z+2	; 0x02
    2720:	93 81       	ldd	r25, Z+3	; 0x03
    2722:	44 e0       	ldi	r20, 0x04	; 4
    2724:	50 e0       	ldi	r21, 0x00	; 0
    2726:	08 c0       	rjmp	.+16     	; 0x2738 <vfprintf+0x29e>
    2728:	f5 01       	movw	r30, r10
    272a:	80 81       	ld	r24, Z
    272c:	91 81       	ldd	r25, Z+1	; 0x01
    272e:	bc 01       	movw	r22, r24
    2730:	80 e0       	ldi	r24, 0x00	; 0
    2732:	90 e0       	ldi	r25, 0x00	; 0
    2734:	42 e0       	ldi	r20, 0x02	; 2
    2736:	50 e0       	ldi	r21, 0x00	; 0
    2738:	a4 0e       	add	r10, r20
    273a:	b5 1e       	adc	r11, r21
    273c:	a1 01       	movw	r20, r2
    273e:	0e 94 6c 14 	call	0x28d8	; 0x28d8 <__ultoa_invert>
    2742:	d8 2e       	mov	r13, r24
    2744:	d2 18       	sub	r13, r2
    2746:	8f e7       	ldi	r24, 0x7F	; 127
    2748:	f8 2e       	mov	r15, r24
    274a:	f1 22       	and	r15, r17
    274c:	f6 fe       	sbrs	r15, 6
    274e:	0b c0       	rjmp	.+22     	; 0x2766 <vfprintf+0x2cc>
    2750:	5e ef       	ldi	r21, 0xFE	; 254
    2752:	f5 22       	and	r15, r21
    2754:	d9 14       	cp	r13, r9
    2756:	38 f4       	brcc	.+14     	; 0x2766 <vfprintf+0x2cc>
    2758:	f4 fe       	sbrs	r15, 4
    275a:	07 c0       	rjmp	.+14     	; 0x276a <vfprintf+0x2d0>
    275c:	f2 fc       	sbrc	r15, 2
    275e:	05 c0       	rjmp	.+10     	; 0x276a <vfprintf+0x2d0>
    2760:	8f ee       	ldi	r24, 0xEF	; 239
    2762:	f8 22       	and	r15, r24
    2764:	02 c0       	rjmp	.+4      	; 0x276a <vfprintf+0x2d0>
    2766:	1d 2d       	mov	r17, r13
    2768:	01 c0       	rjmp	.+2      	; 0x276c <vfprintf+0x2d2>
    276a:	19 2d       	mov	r17, r9
    276c:	f4 fe       	sbrs	r15, 4
    276e:	0d c0       	rjmp	.+26     	; 0x278a <vfprintf+0x2f0>
    2770:	fe 01       	movw	r30, r28
    2772:	ed 0d       	add	r30, r13
    2774:	f1 1d       	adc	r31, r1
    2776:	80 81       	ld	r24, Z
    2778:	80 33       	cpi	r24, 0x30	; 48
    277a:	19 f4       	brne	.+6      	; 0x2782 <vfprintf+0x2e8>
    277c:	99 ee       	ldi	r25, 0xE9	; 233
    277e:	f9 22       	and	r15, r25
    2780:	08 c0       	rjmp	.+16     	; 0x2792 <vfprintf+0x2f8>
    2782:	1f 5f       	subi	r17, 0xFF	; 255
    2784:	f2 fe       	sbrs	r15, 2
    2786:	05 c0       	rjmp	.+10     	; 0x2792 <vfprintf+0x2f8>
    2788:	03 c0       	rjmp	.+6      	; 0x2790 <vfprintf+0x2f6>
    278a:	8f 2d       	mov	r24, r15
    278c:	86 78       	andi	r24, 0x86	; 134
    278e:	09 f0       	breq	.+2      	; 0x2792 <vfprintf+0x2f8>
    2790:	1f 5f       	subi	r17, 0xFF	; 255
    2792:	0f 2d       	mov	r16, r15
    2794:	f3 fc       	sbrc	r15, 3
    2796:	14 c0       	rjmp	.+40     	; 0x27c0 <vfprintf+0x326>
    2798:	f0 fe       	sbrs	r15, 0
    279a:	0f c0       	rjmp	.+30     	; 0x27ba <vfprintf+0x320>
    279c:	1e 15       	cp	r17, r14
    279e:	10 f0       	brcs	.+4      	; 0x27a4 <vfprintf+0x30a>
    27a0:	9d 2c       	mov	r9, r13
    27a2:	0b c0       	rjmp	.+22     	; 0x27ba <vfprintf+0x320>
    27a4:	9d 2c       	mov	r9, r13
    27a6:	9e 0c       	add	r9, r14
    27a8:	91 1a       	sub	r9, r17
    27aa:	1e 2d       	mov	r17, r14
    27ac:	06 c0       	rjmp	.+12     	; 0x27ba <vfprintf+0x320>
    27ae:	80 e2       	ldi	r24, 0x20	; 32
    27b0:	90 e0       	ldi	r25, 0x00	; 0
    27b2:	b3 01       	movw	r22, r6
    27b4:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    27b8:	1f 5f       	subi	r17, 0xFF	; 255
    27ba:	1e 15       	cp	r17, r14
    27bc:	c0 f3       	brcs	.-16     	; 0x27ae <vfprintf+0x314>
    27be:	04 c0       	rjmp	.+8      	; 0x27c8 <vfprintf+0x32e>
    27c0:	1e 15       	cp	r17, r14
    27c2:	10 f4       	brcc	.+4      	; 0x27c8 <vfprintf+0x32e>
    27c4:	e1 1a       	sub	r14, r17
    27c6:	01 c0       	rjmp	.+2      	; 0x27ca <vfprintf+0x330>
    27c8:	ee 24       	eor	r14, r14
    27ca:	04 ff       	sbrs	r16, 4
    27cc:	0f c0       	rjmp	.+30     	; 0x27ec <vfprintf+0x352>
    27ce:	80 e3       	ldi	r24, 0x30	; 48
    27d0:	90 e0       	ldi	r25, 0x00	; 0
    27d2:	b3 01       	movw	r22, r6
    27d4:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    27d8:	02 ff       	sbrs	r16, 2
    27da:	1d c0       	rjmp	.+58     	; 0x2816 <vfprintf+0x37c>
    27dc:	01 fd       	sbrc	r16, 1
    27de:	03 c0       	rjmp	.+6      	; 0x27e6 <vfprintf+0x34c>
    27e0:	88 e7       	ldi	r24, 0x78	; 120
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	0e c0       	rjmp	.+28     	; 0x2802 <vfprintf+0x368>
    27e6:	88 e5       	ldi	r24, 0x58	; 88
    27e8:	90 e0       	ldi	r25, 0x00	; 0
    27ea:	0b c0       	rjmp	.+22     	; 0x2802 <vfprintf+0x368>
    27ec:	80 2f       	mov	r24, r16
    27ee:	86 78       	andi	r24, 0x86	; 134
    27f0:	91 f0       	breq	.+36     	; 0x2816 <vfprintf+0x37c>
    27f2:	01 ff       	sbrs	r16, 1
    27f4:	02 c0       	rjmp	.+4      	; 0x27fa <vfprintf+0x360>
    27f6:	8b e2       	ldi	r24, 0x2B	; 43
    27f8:	01 c0       	rjmp	.+2      	; 0x27fc <vfprintf+0x362>
    27fa:	80 e2       	ldi	r24, 0x20	; 32
    27fc:	f7 fc       	sbrc	r15, 7
    27fe:	8d e2       	ldi	r24, 0x2D	; 45
    2800:	90 e0       	ldi	r25, 0x00	; 0
    2802:	b3 01       	movw	r22, r6
    2804:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    2808:	06 c0       	rjmp	.+12     	; 0x2816 <vfprintf+0x37c>
    280a:	80 e3       	ldi	r24, 0x30	; 48
    280c:	90 e0       	ldi	r25, 0x00	; 0
    280e:	b3 01       	movw	r22, r6
    2810:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    2814:	9a 94       	dec	r9
    2816:	d9 14       	cp	r13, r9
    2818:	c0 f3       	brcs	.-16     	; 0x280a <vfprintf+0x370>
    281a:	da 94       	dec	r13
    281c:	f1 01       	movw	r30, r2
    281e:	ed 0d       	add	r30, r13
    2820:	f1 1d       	adc	r31, r1
    2822:	80 81       	ld	r24, Z
    2824:	90 e0       	ldi	r25, 0x00	; 0
    2826:	b3 01       	movw	r22, r6
    2828:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    282c:	dd 20       	and	r13, r13
    282e:	a9 f7       	brne	.-22     	; 0x281a <vfprintf+0x380>
    2830:	06 c0       	rjmp	.+12     	; 0x283e <vfprintf+0x3a4>
    2832:	80 e2       	ldi	r24, 0x20	; 32
    2834:	90 e0       	ldi	r25, 0x00	; 0
    2836:	b3 01       	movw	r22, r6
    2838:	0e 94 40 14 	call	0x2880	; 0x2880 <fputc>
    283c:	ea 94       	dec	r14
    283e:	ee 20       	and	r14, r14
    2840:	c1 f7       	brne	.-16     	; 0x2832 <vfprintf+0x398>
    2842:	43 ce       	rjmp	.-890    	; 0x24ca <vfprintf+0x30>
    2844:	f3 01       	movw	r30, r6
    2846:	66 81       	ldd	r22, Z+6	; 0x06
    2848:	77 81       	ldd	r23, Z+7	; 0x07
    284a:	cb 01       	movw	r24, r22
    284c:	2b 96       	adiw	r28, 0x0b	; 11
    284e:	e2 e1       	ldi	r30, 0x12	; 18
    2850:	0c 94 0e 12 	jmp	0x241c	; 0x241c <__epilogue_restores__>

00002854 <strnlen_P>:
    2854:	fc 01       	movw	r30, r24
    2856:	05 90       	lpm	r0, Z+
    2858:	61 50       	subi	r22, 0x01	; 1
    285a:	70 40       	sbci	r23, 0x00	; 0
    285c:	01 10       	cpse	r0, r1
    285e:	d8 f7       	brcc	.-10     	; 0x2856 <strnlen_P+0x2>
    2860:	80 95       	com	r24
    2862:	90 95       	com	r25
    2864:	8e 0f       	add	r24, r30
    2866:	9f 1f       	adc	r25, r31
    2868:	08 95       	ret

0000286a <strnlen>:
    286a:	fc 01       	movw	r30, r24
    286c:	61 50       	subi	r22, 0x01	; 1
    286e:	70 40       	sbci	r23, 0x00	; 0
    2870:	01 90       	ld	r0, Z+
    2872:	01 10       	cpse	r0, r1
    2874:	d8 f7       	brcc	.-10     	; 0x286c <strnlen+0x2>
    2876:	80 95       	com	r24
    2878:	90 95       	com	r25
    287a:	8e 0f       	add	r24, r30
    287c:	9f 1f       	adc	r25, r31
    287e:	08 95       	ret

00002880 <fputc>:
    2880:	0f 93       	push	r16
    2882:	1f 93       	push	r17
    2884:	cf 93       	push	r28
    2886:	df 93       	push	r29
    2888:	8c 01       	movw	r16, r24
    288a:	eb 01       	movw	r28, r22
    288c:	8b 81       	ldd	r24, Y+3	; 0x03
    288e:	81 ff       	sbrs	r24, 1
    2890:	1b c0       	rjmp	.+54     	; 0x28c8 <fputc+0x48>
    2892:	82 ff       	sbrs	r24, 2
    2894:	0d c0       	rjmp	.+26     	; 0x28b0 <fputc+0x30>
    2896:	2e 81       	ldd	r18, Y+6	; 0x06
    2898:	3f 81       	ldd	r19, Y+7	; 0x07
    289a:	8c 81       	ldd	r24, Y+4	; 0x04
    289c:	9d 81       	ldd	r25, Y+5	; 0x05
    289e:	28 17       	cp	r18, r24
    28a0:	39 07       	cpc	r19, r25
    28a2:	64 f4       	brge	.+24     	; 0x28bc <fputc+0x3c>
    28a4:	e8 81       	ld	r30, Y
    28a6:	f9 81       	ldd	r31, Y+1	; 0x01
    28a8:	01 93       	st	Z+, r16
    28aa:	f9 83       	std	Y+1, r31	; 0x01
    28ac:	e8 83       	st	Y, r30
    28ae:	06 c0       	rjmp	.+12     	; 0x28bc <fputc+0x3c>
    28b0:	e8 85       	ldd	r30, Y+8	; 0x08
    28b2:	f9 85       	ldd	r31, Y+9	; 0x09
    28b4:	80 2f       	mov	r24, r16
    28b6:	09 95       	icall
    28b8:	89 2b       	or	r24, r25
    28ba:	31 f4       	brne	.+12     	; 0x28c8 <fputc+0x48>
    28bc:	8e 81       	ldd	r24, Y+6	; 0x06
    28be:	9f 81       	ldd	r25, Y+7	; 0x07
    28c0:	01 96       	adiw	r24, 0x01	; 1
    28c2:	9f 83       	std	Y+7, r25	; 0x07
    28c4:	8e 83       	std	Y+6, r24	; 0x06
    28c6:	02 c0       	rjmp	.+4      	; 0x28cc <fputc+0x4c>
    28c8:	0f ef       	ldi	r16, 0xFF	; 255
    28ca:	1f ef       	ldi	r17, 0xFF	; 255
    28cc:	c8 01       	movw	r24, r16
    28ce:	df 91       	pop	r29
    28d0:	cf 91       	pop	r28
    28d2:	1f 91       	pop	r17
    28d4:	0f 91       	pop	r16
    28d6:	08 95       	ret

000028d8 <__ultoa_invert>:
    28d8:	fa 01       	movw	r30, r20
    28da:	aa 27       	eor	r26, r26
    28dc:	28 30       	cpi	r18, 0x08	; 8
    28de:	51 f1       	breq	.+84     	; 0x2934 <__ultoa_invert+0x5c>
    28e0:	20 31       	cpi	r18, 0x10	; 16
    28e2:	81 f1       	breq	.+96     	; 0x2944 <__ultoa_invert+0x6c>
    28e4:	e8 94       	clt
    28e6:	6f 93       	push	r22
    28e8:	6e 7f       	andi	r22, 0xFE	; 254
    28ea:	6e 5f       	subi	r22, 0xFE	; 254
    28ec:	7f 4f       	sbci	r23, 0xFF	; 255
    28ee:	8f 4f       	sbci	r24, 0xFF	; 255
    28f0:	9f 4f       	sbci	r25, 0xFF	; 255
    28f2:	af 4f       	sbci	r26, 0xFF	; 255
    28f4:	b1 e0       	ldi	r27, 0x01	; 1
    28f6:	3e d0       	rcall	.+124    	; 0x2974 <__ultoa_invert+0x9c>
    28f8:	b4 e0       	ldi	r27, 0x04	; 4
    28fa:	3c d0       	rcall	.+120    	; 0x2974 <__ultoa_invert+0x9c>
    28fc:	67 0f       	add	r22, r23
    28fe:	78 1f       	adc	r23, r24
    2900:	89 1f       	adc	r24, r25
    2902:	9a 1f       	adc	r25, r26
    2904:	a1 1d       	adc	r26, r1
    2906:	68 0f       	add	r22, r24
    2908:	79 1f       	adc	r23, r25
    290a:	8a 1f       	adc	r24, r26
    290c:	91 1d       	adc	r25, r1
    290e:	a1 1d       	adc	r26, r1
    2910:	6a 0f       	add	r22, r26
    2912:	71 1d       	adc	r23, r1
    2914:	81 1d       	adc	r24, r1
    2916:	91 1d       	adc	r25, r1
    2918:	a1 1d       	adc	r26, r1
    291a:	20 d0       	rcall	.+64     	; 0x295c <__ultoa_invert+0x84>
    291c:	09 f4       	brne	.+2      	; 0x2920 <__ultoa_invert+0x48>
    291e:	68 94       	set
    2920:	3f 91       	pop	r19
    2922:	2a e0       	ldi	r18, 0x0A	; 10
    2924:	26 9f       	mul	r18, r22
    2926:	11 24       	eor	r1, r1
    2928:	30 19       	sub	r19, r0
    292a:	30 5d       	subi	r19, 0xD0	; 208
    292c:	31 93       	st	Z+, r19
    292e:	de f6       	brtc	.-74     	; 0x28e6 <__ultoa_invert+0xe>
    2930:	cf 01       	movw	r24, r30
    2932:	08 95       	ret
    2934:	46 2f       	mov	r20, r22
    2936:	47 70       	andi	r20, 0x07	; 7
    2938:	40 5d       	subi	r20, 0xD0	; 208
    293a:	41 93       	st	Z+, r20
    293c:	b3 e0       	ldi	r27, 0x03	; 3
    293e:	0f d0       	rcall	.+30     	; 0x295e <__ultoa_invert+0x86>
    2940:	c9 f7       	brne	.-14     	; 0x2934 <__ultoa_invert+0x5c>
    2942:	f6 cf       	rjmp	.-20     	; 0x2930 <__ultoa_invert+0x58>
    2944:	46 2f       	mov	r20, r22
    2946:	4f 70       	andi	r20, 0x0F	; 15
    2948:	40 5d       	subi	r20, 0xD0	; 208
    294a:	4a 33       	cpi	r20, 0x3A	; 58
    294c:	18 f0       	brcs	.+6      	; 0x2954 <__ultoa_invert+0x7c>
    294e:	49 5d       	subi	r20, 0xD9	; 217
    2950:	31 fd       	sbrc	r19, 1
    2952:	40 52       	subi	r20, 0x20	; 32
    2954:	41 93       	st	Z+, r20
    2956:	02 d0       	rcall	.+4      	; 0x295c <__ultoa_invert+0x84>
    2958:	a9 f7       	brne	.-22     	; 0x2944 <__ultoa_invert+0x6c>
    295a:	ea cf       	rjmp	.-44     	; 0x2930 <__ultoa_invert+0x58>
    295c:	b4 e0       	ldi	r27, 0x04	; 4
    295e:	a6 95       	lsr	r26
    2960:	97 95       	ror	r25
    2962:	87 95       	ror	r24
    2964:	77 95       	ror	r23
    2966:	67 95       	ror	r22
    2968:	ba 95       	dec	r27
    296a:	c9 f7       	brne	.-14     	; 0x295e <__ultoa_invert+0x86>
    296c:	00 97       	sbiw	r24, 0x00	; 0
    296e:	61 05       	cpc	r22, r1
    2970:	71 05       	cpc	r23, r1
    2972:	08 95       	ret
    2974:	9b 01       	movw	r18, r22
    2976:	ac 01       	movw	r20, r24
    2978:	0a 2e       	mov	r0, r26
    297a:	06 94       	lsr	r0
    297c:	57 95       	ror	r21
    297e:	47 95       	ror	r20
    2980:	37 95       	ror	r19
    2982:	27 95       	ror	r18
    2984:	ba 95       	dec	r27
    2986:	c9 f7       	brne	.-14     	; 0x297a <__ultoa_invert+0xa2>
    2988:	62 0f       	add	r22, r18
    298a:	73 1f       	adc	r23, r19
    298c:	84 1f       	adc	r24, r20
    298e:	95 1f       	adc	r25, r21
    2990:	a0 1d       	adc	r26, r0
    2992:	08 95       	ret

00002994 <_exit>:
    2994:	f8 94       	cli

00002996 <__stop_program>:
    2996:	ff cf       	rjmp	.-2      	; 0x2996 <__stop_program>
