
TIMER1_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002e3a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000116  00800060  00002e3a  00002ece  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001f  00800176  00800176  00002fe4  2**0
                  ALLOC
  3 .stab         00001fc8  00000000  00000000  00002fe4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000fa9  00000000  00000000  00004fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00005f55  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f2  00000000  00000000  000060f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240b  00000000  00000000  000062e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001386  00000000  00000000  000086f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d6  00000000  00000000  00009a78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  0000ac50  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f6  00000000  00000000  0000ae10  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  0000b106  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000ba74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 03 11 	jmp	0x2206	; 0x2206 <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 4e 12 	jmp	0x249c	; 0x249c <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e3       	ldi	r30, 0x3A	; 58
      68:	fe e2       	ldi	r31, 0x2E	; 46
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 37       	cpi	r26, 0x76	; 118
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a6 e7       	ldi	r26, 0x76	; 118
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 39       	cpi	r26, 0x95	; 149
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 7b 12 	call	0x24f6	; 0x24f6 <main>
      8a:	0c 94 1b 17 	jmp	0x2e36	; 0x2e36 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 43 14 	jmp	0x2886	; 0x2886 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	ae e6       	ldi	r26, 0x6E	; 110
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 5f 14 	jmp	0x28be	; 0x28be <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 4f 14 	jmp	0x289e	; 0x289e <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 6b 14 	jmp	0x28d6	; 0x28d6 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 4f 14 	jmp	0x289e	; 0x289e <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 6b 14 	jmp	0x28d6	; 0x28d6 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 43 14 	jmp	0x2886	; 0x2886 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	8e e6       	ldi	r24, 0x6E	; 110
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 5f 14 	jmp	0x28be	; 0x28be <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 4b 14 	jmp	0x2896	; 0x2896 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	6e e6       	ldi	r22, 0x6E	; 110
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 67 14 	jmp	0x28ce	; 0x28ce <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 4f 14 	jmp	0x289e	; 0x289e <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 6b 14 	jmp	0x28d6	; 0x28d6 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 4f 14 	jmp	0x289e	; 0x289e <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 6b 14 	jmp	0x28d6	; 0x28d6 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 4f 14 	jmp	0x289e	; 0x289e <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 6b 14 	jmp	0x28d6	; 0x28d6 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 53 14 	jmp	0x28a6	; 0x28a6 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 6f 14 	jmp	0x28de	; 0x28de <__epilogue_restores__+0x20>

00000952 <__floatunsisf>:
     952:	a8 e0       	ldi	r26, 0x08	; 8
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	ef ea       	ldi	r30, 0xAF	; 175
     958:	f4 e0       	ldi	r31, 0x04	; 4
     95a:	0c 94 4b 14 	jmp	0x2896	; 0x2896 <__prologue_saves__+0x10>
     95e:	7b 01       	movw	r14, r22
     960:	8c 01       	movw	r16, r24
     962:	61 15       	cp	r22, r1
     964:	71 05       	cpc	r23, r1
     966:	81 05       	cpc	r24, r1
     968:	91 05       	cpc	r25, r1
     96a:	19 f4       	brne	.+6      	; 0x972 <__floatunsisf+0x20>
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	60 c0       	rjmp	.+192    	; 0xa32 <__floatunsisf+0xe0>
     972:	83 e0       	ldi	r24, 0x03	; 3
     974:	89 83       	std	Y+1, r24	; 0x01
     976:	8e e1       	ldi	r24, 0x1E	; 30
     978:	c8 2e       	mov	r12, r24
     97a:	d1 2c       	mov	r13, r1
     97c:	dc 82       	std	Y+4, r13	; 0x04
     97e:	cb 82       	std	Y+3, r12	; 0x03
     980:	ed 82       	std	Y+5, r14	; 0x05
     982:	fe 82       	std	Y+6, r15	; 0x06
     984:	0f 83       	std	Y+7, r16	; 0x07
     986:	18 87       	std	Y+8, r17	; 0x08
     988:	c8 01       	movw	r24, r16
     98a:	b7 01       	movw	r22, r14
     98c:	0e 94 22 05 	call	0xa44	; 0xa44 <__clzsi2>
     990:	fc 01       	movw	r30, r24
     992:	31 97       	sbiw	r30, 0x01	; 1
     994:	f7 ff       	sbrs	r31, 7
     996:	3b c0       	rjmp	.+118    	; 0xa0e <__floatunsisf+0xbc>
     998:	22 27       	eor	r18, r18
     99a:	33 27       	eor	r19, r19
     99c:	2e 1b       	sub	r18, r30
     99e:	3f 0b       	sbc	r19, r31
     9a0:	57 01       	movw	r10, r14
     9a2:	68 01       	movw	r12, r16
     9a4:	02 2e       	mov	r0, r18
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__floatunsisf+0x5e>
     9a8:	d6 94       	lsr	r13
     9aa:	c7 94       	ror	r12
     9ac:	b7 94       	ror	r11
     9ae:	a7 94       	ror	r10
     9b0:	0a 94       	dec	r0
     9b2:	d2 f7       	brpl	.-12     	; 0x9a8 <__floatunsisf+0x56>
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e0       	ldi	r26, 0x00	; 0
     9c2:	b0 e0       	ldi	r27, 0x00	; 0
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__floatunsisf+0x7c>
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	2a 95       	dec	r18
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__floatunsisf+0x74>
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	a1 09       	sbc	r26, r1
     9d6:	b1 09       	sbc	r27, r1
     9d8:	8e 21       	and	r24, r14
     9da:	9f 21       	and	r25, r15
     9dc:	a0 23       	and	r26, r16
     9de:	b1 23       	and	r27, r17
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	a1 05       	cpc	r26, r1
     9e4:	b1 05       	cpc	r27, r1
     9e6:	21 f0       	breq	.+8      	; 0x9f0 <__floatunsisf+0x9e>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	4a 29       	or	r20, r10
     9f2:	5b 29       	or	r21, r11
     9f4:	6c 29       	or	r22, r12
     9f6:	7d 29       	or	r23, r13
     9f8:	4d 83       	std	Y+5, r20	; 0x05
     9fa:	5e 83       	std	Y+6, r21	; 0x06
     9fc:	6f 83       	std	Y+7, r22	; 0x07
     9fe:	78 87       	std	Y+8, r23	; 0x08
     a00:	8e e1       	ldi	r24, 0x1E	; 30
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	8e 1b       	sub	r24, r30
     a06:	9f 0b       	sbc	r25, r31
     a08:	9c 83       	std	Y+4, r25	; 0x04
     a0a:	8b 83       	std	Y+3, r24	; 0x03
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__floatunsisf+0xe0>
     a0e:	30 97       	sbiw	r30, 0x00	; 0
     a10:	81 f0       	breq	.+32     	; 0xa32 <__floatunsisf+0xe0>
     a12:	0e 2e       	mov	r0, r30
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__floatunsisf+0xcc>
     a16:	ee 0c       	add	r14, r14
     a18:	ff 1c       	adc	r15, r15
     a1a:	00 1f       	adc	r16, r16
     a1c:	11 1f       	adc	r17, r17
     a1e:	0a 94       	dec	r0
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__floatunsisf+0xc4>
     a22:	ed 82       	std	Y+5, r14	; 0x05
     a24:	fe 82       	std	Y+6, r15	; 0x06
     a26:	0f 83       	std	Y+7, r16	; 0x07
     a28:	18 87       	std	Y+8, r17	; 0x08
     a2a:	ce 1a       	sub	r12, r30
     a2c:	df 0a       	sbc	r13, r31
     a2e:	dc 82       	std	Y+4, r13	; 0x04
     a30:	cb 82       	std	Y+3, r12	; 0x03
     a32:	1a 82       	std	Y+2, r1	; 0x02
     a34:	ce 01       	movw	r24, r28
     a36:	01 96       	adiw	r24, 0x01	; 1
     a38:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     a3c:	28 96       	adiw	r28, 0x08	; 8
     a3e:	ea e0       	ldi	r30, 0x0A	; 10
     a40:	0c 94 67 14 	jmp	0x28ce	; 0x28ce <__epilogue_restores__+0x10>

00000a44 <__clzsi2>:
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	7b 01       	movw	r14, r22
     a4e:	8c 01       	movw	r16, r24
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	e8 16       	cp	r14, r24
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	f8 06       	cpc	r15, r24
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	08 07       	cpc	r16, r24
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	18 07       	cpc	r17, r24
     a60:	88 f4       	brcc	.+34     	; 0xa84 <__clzsi2+0x40>
     a62:	8f ef       	ldi	r24, 0xFF	; 255
     a64:	e8 16       	cp	r14, r24
     a66:	f1 04       	cpc	r15, r1
     a68:	01 05       	cpc	r16, r1
     a6a:	11 05       	cpc	r17, r1
     a6c:	31 f0       	breq	.+12     	; 0xa7a <__clzsi2+0x36>
     a6e:	28 f0       	brcs	.+10     	; 0xa7a <__clzsi2+0x36>
     a70:	88 e0       	ldi	r24, 0x08	; 8
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	a0 e0       	ldi	r26, 0x00	; 0
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	17 c0       	rjmp	.+46     	; 0xaa8 <__clzsi2+0x64>
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a0 e0       	ldi	r26, 0x00	; 0
     a80:	b0 e0       	ldi	r27, 0x00	; 0
     a82:	12 c0       	rjmp	.+36     	; 0xaa8 <__clzsi2+0x64>
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	e8 16       	cp	r14, r24
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	f8 06       	cpc	r15, r24
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	08 07       	cpc	r16, r24
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	18 07       	cpc	r17, r24
     a94:	28 f0       	brcs	.+10     	; 0xaa0 <__clzsi2+0x5c>
     a96:	88 e1       	ldi	r24, 0x18	; 24
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__clzsi2+0x64>
     aa0:	80 e1       	ldi	r24, 0x10	; 16
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	20 e2       	ldi	r18, 0x20	; 32
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	28 1b       	sub	r18, r24
     ab2:	39 0b       	sbc	r19, r25
     ab4:	4a 0b       	sbc	r20, r26
     ab6:	5b 0b       	sbc	r21, r27
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <__clzsi2+0x7e>
     aba:	16 95       	lsr	r17
     abc:	07 95       	ror	r16
     abe:	f7 94       	ror	r15
     ac0:	e7 94       	ror	r14
     ac2:	8a 95       	dec	r24
     ac4:	d2 f7       	brpl	.-12     	; 0xaba <__clzsi2+0x76>
     ac6:	f7 01       	movw	r30, r14
     ac8:	ea 58       	subi	r30, 0x8A	; 138
     aca:	ff 4f       	sbci	r31, 0xFF	; 255
     acc:	80 81       	ld	r24, Z
     ace:	28 1b       	sub	r18, r24
     ad0:	31 09       	sbc	r19, r1
     ad2:	41 09       	sbc	r20, r1
     ad4:	51 09       	sbc	r21, r1
     ad6:	c9 01       	movw	r24, r18
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	ff 90       	pop	r15
     ade:	ef 90       	pop	r14
     ae0:	08 95       	ret

00000ae2 <__pack_f>:
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	fc 01       	movw	r30, r24
     aee:	e4 80       	ldd	r14, Z+4	; 0x04
     af0:	f5 80       	ldd	r15, Z+5	; 0x05
     af2:	06 81       	ldd	r16, Z+6	; 0x06
     af4:	17 81       	ldd	r17, Z+7	; 0x07
     af6:	d1 80       	ldd	r13, Z+1	; 0x01
     af8:	80 81       	ld	r24, Z
     afa:	82 30       	cpi	r24, 0x02	; 2
     afc:	48 f4       	brcc	.+18     	; 0xb10 <__pack_f+0x2e>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	a0 e1       	ldi	r26, 0x10	; 16
     b04:	b0 e0       	ldi	r27, 0x00	; 0
     b06:	e8 2a       	or	r14, r24
     b08:	f9 2a       	or	r15, r25
     b0a:	0a 2b       	or	r16, r26
     b0c:	1b 2b       	or	r17, r27
     b0e:	a5 c0       	rjmp	.+330    	; 0xc5a <__pack_f+0x178>
     b10:	84 30       	cpi	r24, 0x04	; 4
     b12:	09 f4       	brne	.+2      	; 0xb16 <__pack_f+0x34>
     b14:	9f c0       	rjmp	.+318    	; 0xc54 <__pack_f+0x172>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	21 f4       	brne	.+8      	; 0xb22 <__pack_f+0x40>
     b1a:	ee 24       	eor	r14, r14
     b1c:	ff 24       	eor	r15, r15
     b1e:	87 01       	movw	r16, r14
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__pack_f+0x4a>
     b22:	e1 14       	cp	r14, r1
     b24:	f1 04       	cpc	r15, r1
     b26:	01 05       	cpc	r16, r1
     b28:	11 05       	cpc	r17, r1
     b2a:	19 f4       	brne	.+6      	; 0xb32 <__pack_f+0x50>
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	96 c0       	rjmp	.+300    	; 0xc5e <__pack_f+0x17c>
     b32:	62 81       	ldd	r22, Z+2	; 0x02
     b34:	73 81       	ldd	r23, Z+3	; 0x03
     b36:	9f ef       	ldi	r25, 0xFF	; 255
     b38:	62 38       	cpi	r22, 0x82	; 130
     b3a:	79 07       	cpc	r23, r25
     b3c:	0c f0       	brlt	.+2      	; 0xb40 <__pack_f+0x5e>
     b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <__pack_f+0x114>
     b40:	22 e8       	ldi	r18, 0x82	; 130
     b42:	3f ef       	ldi	r19, 0xFF	; 255
     b44:	26 1b       	sub	r18, r22
     b46:	37 0b       	sbc	r19, r23
     b48:	2a 31       	cpi	r18, 0x1A	; 26
     b4a:	31 05       	cpc	r19, r1
     b4c:	2c f0       	brlt	.+10     	; 0xb58 <__pack_f+0x76>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	2a c0       	rjmp	.+84     	; 0xbac <__pack_f+0xca>
     b58:	b8 01       	movw	r22, r16
     b5a:	a7 01       	movw	r20, r14
     b5c:	02 2e       	mov	r0, r18
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__pack_f+0x86>
     b60:	76 95       	lsr	r23
     b62:	67 95       	ror	r22
     b64:	57 95       	ror	r21
     b66:	47 95       	ror	r20
     b68:	0a 94       	dec	r0
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__pack_f+0x7e>
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__pack_f+0x9c>
     b76:	88 0f       	add	r24, r24
     b78:	99 1f       	adc	r25, r25
     b7a:	aa 1f       	adc	r26, r26
     b7c:	bb 1f       	adc	r27, r27
     b7e:	2a 95       	dec	r18
     b80:	d2 f7       	brpl	.-12     	; 0xb76 <__pack_f+0x94>
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	a1 09       	sbc	r26, r1
     b86:	b1 09       	sbc	r27, r1
     b88:	8e 21       	and	r24, r14
     b8a:	9f 21       	and	r25, r15
     b8c:	a0 23       	and	r26, r16
     b8e:	b1 23       	and	r27, r17
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	a1 05       	cpc	r26, r1
     b94:	b1 05       	cpc	r27, r1
     b96:	21 f0       	breq	.+8      	; 0xba0 <__pack_f+0xbe>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	9a 01       	movw	r18, r20
     ba2:	ab 01       	movw	r20, r22
     ba4:	28 2b       	or	r18, r24
     ba6:	39 2b       	or	r19, r25
     ba8:	4a 2b       	or	r20, r26
     baa:	5b 2b       	or	r21, r27
     bac:	da 01       	movw	r26, r20
     bae:	c9 01       	movw	r24, r18
     bb0:	8f 77       	andi	r24, 0x7F	; 127
     bb2:	90 70       	andi	r25, 0x00	; 0
     bb4:	a0 70       	andi	r26, 0x00	; 0
     bb6:	b0 70       	andi	r27, 0x00	; 0
     bb8:	80 34       	cpi	r24, 0x40	; 64
     bba:	91 05       	cpc	r25, r1
     bbc:	a1 05       	cpc	r26, r1
     bbe:	b1 05       	cpc	r27, r1
     bc0:	39 f4       	brne	.+14     	; 0xbd0 <__pack_f+0xee>
     bc2:	27 ff       	sbrs	r18, 7
     bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <__pack_f+0xf6>
     bc6:	20 5c       	subi	r18, 0xC0	; 192
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	4f 4f       	sbci	r20, 0xFF	; 255
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	04 c0       	rjmp	.+8      	; 0xbd8 <__pack_f+0xf6>
     bd0:	21 5c       	subi	r18, 0xC1	; 193
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	4f 4f       	sbci	r20, 0xFF	; 255
     bd6:	5f 4f       	sbci	r21, 0xFF	; 255
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	20 30       	cpi	r18, 0x00	; 0
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	3a 07       	cpc	r19, r26
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	4a 07       	cpc	r20, r26
     be6:	a0 e4       	ldi	r26, 0x40	; 64
     be8:	5a 07       	cpc	r21, r26
     bea:	10 f0       	brcs	.+4      	; 0xbf0 <__pack_f+0x10e>
     bec:	e1 e0       	ldi	r30, 0x01	; 1
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	79 01       	movw	r14, r18
     bf2:	8a 01       	movw	r16, r20
     bf4:	27 c0       	rjmp	.+78     	; 0xc44 <__pack_f+0x162>
     bf6:	60 38       	cpi	r22, 0x80	; 128
     bf8:	71 05       	cpc	r23, r1
     bfa:	64 f5       	brge	.+88     	; 0xc54 <__pack_f+0x172>
     bfc:	fb 01       	movw	r30, r22
     bfe:	e1 58       	subi	r30, 0x81	; 129
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	d8 01       	movw	r26, r16
     c04:	c7 01       	movw	r24, r14
     c06:	8f 77       	andi	r24, 0x7F	; 127
     c08:	90 70       	andi	r25, 0x00	; 0
     c0a:	a0 70       	andi	r26, 0x00	; 0
     c0c:	b0 70       	andi	r27, 0x00	; 0
     c0e:	80 34       	cpi	r24, 0x40	; 64
     c10:	91 05       	cpc	r25, r1
     c12:	a1 05       	cpc	r26, r1
     c14:	b1 05       	cpc	r27, r1
     c16:	39 f4       	brne	.+14     	; 0xc26 <__pack_f+0x144>
     c18:	e7 fe       	sbrs	r14, 7
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <__pack_f+0x154>
     c1c:	80 e4       	ldi	r24, 0x40	; 64
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__pack_f+0x14c>
     c26:	8f e3       	ldi	r24, 0x3F	; 63
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e8 0e       	add	r14, r24
     c30:	f9 1e       	adc	r15, r25
     c32:	0a 1f       	adc	r16, r26
     c34:	1b 1f       	adc	r17, r27
     c36:	17 ff       	sbrs	r17, 7
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <__pack_f+0x162>
     c3a:	16 95       	lsr	r17
     c3c:	07 95       	ror	r16
     c3e:	f7 94       	ror	r15
     c40:	e7 94       	ror	r14
     c42:	31 96       	adiw	r30, 0x01	; 1
     c44:	87 e0       	ldi	r24, 0x07	; 7
     c46:	16 95       	lsr	r17
     c48:	07 95       	ror	r16
     c4a:	f7 94       	ror	r15
     c4c:	e7 94       	ror	r14
     c4e:	8a 95       	dec	r24
     c50:	d1 f7       	brne	.-12     	; 0xc46 <__pack_f+0x164>
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__pack_f+0x17c>
     c54:	ee 24       	eor	r14, r14
     c56:	ff 24       	eor	r15, r15
     c58:	87 01       	movw	r16, r14
     c5a:	ef ef       	ldi	r30, 0xFF	; 255
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	6e 2f       	mov	r22, r30
     c60:	67 95       	ror	r22
     c62:	66 27       	eor	r22, r22
     c64:	67 95       	ror	r22
     c66:	90 2f       	mov	r25, r16
     c68:	9f 77       	andi	r25, 0x7F	; 127
     c6a:	d7 94       	ror	r13
     c6c:	dd 24       	eor	r13, r13
     c6e:	d7 94       	ror	r13
     c70:	8e 2f       	mov	r24, r30
     c72:	86 95       	lsr	r24
     c74:	49 2f       	mov	r20, r25
     c76:	46 2b       	or	r20, r22
     c78:	58 2f       	mov	r21, r24
     c7a:	5d 29       	or	r21, r13
     c7c:	b7 01       	movw	r22, r14
     c7e:	ca 01       	movw	r24, r20
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	ff 90       	pop	r15
     c86:	ef 90       	pop	r14
     c88:	df 90       	pop	r13
     c8a:	08 95       	ret

00000c8c <__unpack_f>:
     c8c:	fc 01       	movw	r30, r24
     c8e:	db 01       	movw	r26, r22
     c90:	40 81       	ld	r20, Z
     c92:	51 81       	ldd	r21, Z+1	; 0x01
     c94:	22 81       	ldd	r18, Z+2	; 0x02
     c96:	62 2f       	mov	r22, r18
     c98:	6f 77       	andi	r22, 0x7F	; 127
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	22 1f       	adc	r18, r18
     c9e:	22 27       	eor	r18, r18
     ca0:	22 1f       	adc	r18, r18
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	89 2f       	mov	r24, r25
     ca6:	88 0f       	add	r24, r24
     ca8:	82 2b       	or	r24, r18
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	99 1f       	adc	r25, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	99 1f       	adc	r25, r25
     cb4:	11 96       	adiw	r26, 0x01	; 1
     cb6:	9c 93       	st	X, r25
     cb8:	11 97       	sbiw	r26, 0x01	; 1
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	a9 f5       	brne	.+106    	; 0xd2a <__unpack_f+0x9e>
     cc0:	41 15       	cp	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	61 05       	cpc	r22, r1
     cc6:	71 05       	cpc	r23, r1
     cc8:	11 f4       	brne	.+4      	; 0xcce <__unpack_f+0x42>
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	37 c0       	rjmp	.+110    	; 0xd3c <__unpack_f+0xb0>
     cce:	82 e8       	ldi	r24, 0x82	; 130
     cd0:	9f ef       	ldi	r25, 0xFF	; 255
     cd2:	13 96       	adiw	r26, 0x03	; 3
     cd4:	9c 93       	st	X, r25
     cd6:	8e 93       	st	-X, r24
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	9a 01       	movw	r18, r20
     cdc:	ab 01       	movw	r20, r22
     cde:	67 e0       	ldi	r22, 0x07	; 7
     ce0:	22 0f       	add	r18, r18
     ce2:	33 1f       	adc	r19, r19
     ce4:	44 1f       	adc	r20, r20
     ce6:	55 1f       	adc	r21, r21
     ce8:	6a 95       	dec	r22
     cea:	d1 f7       	brne	.-12     	; 0xce0 <__unpack_f+0x54>
     cec:	83 e0       	ldi	r24, 0x03	; 3
     cee:	8c 93       	st	X, r24
     cf0:	0d c0       	rjmp	.+26     	; 0xd0c <__unpack_f+0x80>
     cf2:	22 0f       	add	r18, r18
     cf4:	33 1f       	adc	r19, r19
     cf6:	44 1f       	adc	r20, r20
     cf8:	55 1f       	adc	r21, r21
     cfa:	12 96       	adiw	r26, 0x02	; 2
     cfc:	8d 91       	ld	r24, X+
     cfe:	9c 91       	ld	r25, X
     d00:	13 97       	sbiw	r26, 0x03	; 3
     d02:	01 97       	sbiw	r24, 0x01	; 1
     d04:	13 96       	adiw	r26, 0x03	; 3
     d06:	9c 93       	st	X, r25
     d08:	8e 93       	st	-X, r24
     d0a:	12 97       	sbiw	r26, 0x02	; 2
     d0c:	20 30       	cpi	r18, 0x00	; 0
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	38 07       	cpc	r19, r24
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	48 07       	cpc	r20, r24
     d16:	80 e4       	ldi	r24, 0x40	; 64
     d18:	58 07       	cpc	r21, r24
     d1a:	58 f3       	brcs	.-42     	; 0xcf2 <__unpack_f+0x66>
     d1c:	14 96       	adiw	r26, 0x04	; 4
     d1e:	2d 93       	st	X+, r18
     d20:	3d 93       	st	X+, r19
     d22:	4d 93       	st	X+, r20
     d24:	5c 93       	st	X, r21
     d26:	17 97       	sbiw	r26, 0x07	; 7
     d28:	08 95       	ret
     d2a:	2f 3f       	cpi	r18, 0xFF	; 255
     d2c:	31 05       	cpc	r19, r1
     d2e:	79 f4       	brne	.+30     	; 0xd4e <__unpack_f+0xc2>
     d30:	41 15       	cp	r20, r1
     d32:	51 05       	cpc	r21, r1
     d34:	61 05       	cpc	r22, r1
     d36:	71 05       	cpc	r23, r1
     d38:	19 f4       	brne	.+6      	; 0xd40 <__unpack_f+0xb4>
     d3a:	84 e0       	ldi	r24, 0x04	; 4
     d3c:	8c 93       	st	X, r24
     d3e:	08 95       	ret
     d40:	64 ff       	sbrs	r22, 4
     d42:	03 c0       	rjmp	.+6      	; 0xd4a <__unpack_f+0xbe>
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	8c 93       	st	X, r24
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <__unpack_f+0xe2>
     d4a:	1c 92       	st	X, r1
     d4c:	10 c0       	rjmp	.+32     	; 0xd6e <__unpack_f+0xe2>
     d4e:	2f 57       	subi	r18, 0x7F	; 127
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	13 96       	adiw	r26, 0x03	; 3
     d54:	3c 93       	st	X, r19
     d56:	2e 93       	st	-X, r18
     d58:	12 97       	sbiw	r26, 0x02	; 2
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	8c 93       	st	X, r24
     d5e:	87 e0       	ldi	r24, 0x07	; 7
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	8a 95       	dec	r24
     d6a:	d1 f7       	brne	.-12     	; 0xd60 <__unpack_f+0xd4>
     d6c:	70 64       	ori	r23, 0x40	; 64
     d6e:	14 96       	adiw	r26, 0x04	; 4
     d70:	4d 93       	st	X+, r20
     d72:	5d 93       	st	X+, r21
     d74:	6d 93       	st	X+, r22
     d76:	7c 93       	st	X, r23
     d78:	17 97       	sbiw	r26, 0x07	; 7
     d7a:	08 95       	ret

00000d7c <__fpcmp_parts_f>:
     d7c:	1f 93       	push	r17
     d7e:	dc 01       	movw	r26, r24
     d80:	fb 01       	movw	r30, r22
     d82:	9c 91       	ld	r25, X
     d84:	92 30       	cpi	r25, 0x02	; 2
     d86:	08 f4       	brcc	.+2      	; 0xd8a <__fpcmp_parts_f+0xe>
     d88:	47 c0       	rjmp	.+142    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d8a:	80 81       	ld	r24, Z
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	08 f4       	brcc	.+2      	; 0xd92 <__fpcmp_parts_f+0x16>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d92:	94 30       	cpi	r25, 0x04	; 4
     d94:	51 f4       	brne	.+20     	; 0xdaa <__fpcmp_parts_f+0x2e>
     d96:	11 96       	adiw	r26, 0x01	; 1
     d98:	1c 91       	ld	r17, X
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	99 f5       	brne	.+102    	; 0xe04 <__fpcmp_parts_f+0x88>
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	68 2f       	mov	r22, r24
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	61 1b       	sub	r22, r17
     da6:	71 09       	sbc	r23, r1
     da8:	3f c0       	rjmp	.+126    	; 0xe28 <__fpcmp_parts_f+0xac>
     daa:	84 30       	cpi	r24, 0x04	; 4
     dac:	21 f0       	breq	.+8      	; 0xdb6 <__fpcmp_parts_f+0x3a>
     dae:	92 30       	cpi	r25, 0x02	; 2
     db0:	31 f4       	brne	.+12     	; 0xdbe <__fpcmp_parts_f+0x42>
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	b9 f1       	breq	.+110    	; 0xe24 <__fpcmp_parts_f+0xa8>
     db6:	81 81       	ldd	r24, Z+1	; 0x01
     db8:	88 23       	and	r24, r24
     dba:	89 f1       	breq	.+98     	; 0xe1e <__fpcmp_parts_f+0xa2>
     dbc:	2d c0       	rjmp	.+90     	; 0xe18 <__fpcmp_parts_f+0x9c>
     dbe:	11 96       	adiw	r26, 0x01	; 1
     dc0:	1c 91       	ld	r17, X
     dc2:	11 97       	sbiw	r26, 0x01	; 1
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	f1 f0       	breq	.+60     	; 0xe04 <__fpcmp_parts_f+0x88>
     dc8:	81 81       	ldd	r24, Z+1	; 0x01
     dca:	18 17       	cp	r17, r24
     dcc:	d9 f4       	brne	.+54     	; 0xe04 <__fpcmp_parts_f+0x88>
     dce:	12 96       	adiw	r26, 0x02	; 2
     dd0:	2d 91       	ld	r18, X+
     dd2:	3c 91       	ld	r19, X
     dd4:	13 97       	sbiw	r26, 0x03	; 3
     dd6:	82 81       	ldd	r24, Z+2	; 0x02
     dd8:	93 81       	ldd	r25, Z+3	; 0x03
     dda:	82 17       	cp	r24, r18
     ddc:	93 07       	cpc	r25, r19
     dde:	94 f0       	brlt	.+36     	; 0xe04 <__fpcmp_parts_f+0x88>
     de0:	28 17       	cp	r18, r24
     de2:	39 07       	cpc	r19, r25
     de4:	bc f0       	brlt	.+46     	; 0xe14 <__fpcmp_parts_f+0x98>
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	8d 91       	ld	r24, X+
     dea:	9d 91       	ld	r25, X+
     dec:	0d 90       	ld	r0, X+
     dee:	bc 91       	ld	r27, X
     df0:	a0 2d       	mov	r26, r0
     df2:	24 81       	ldd	r18, Z+4	; 0x04
     df4:	35 81       	ldd	r19, Z+5	; 0x05
     df6:	46 81       	ldd	r20, Z+6	; 0x06
     df8:	57 81       	ldd	r21, Z+7	; 0x07
     dfa:	28 17       	cp	r18, r24
     dfc:	39 07       	cpc	r19, r25
     dfe:	4a 07       	cpc	r20, r26
     e00:	5b 07       	cpc	r21, r27
     e02:	18 f4       	brcc	.+6      	; 0xe0a <__fpcmp_parts_f+0x8e>
     e04:	11 23       	and	r17, r17
     e06:	41 f0       	breq	.+16     	; 0xe18 <__fpcmp_parts_f+0x9c>
     e08:	0a c0       	rjmp	.+20     	; 0xe1e <__fpcmp_parts_f+0xa2>
     e0a:	82 17       	cp	r24, r18
     e0c:	93 07       	cpc	r25, r19
     e0e:	a4 07       	cpc	r26, r20
     e10:	b5 07       	cpc	r27, r21
     e12:	40 f4       	brcc	.+16     	; 0xe24 <__fpcmp_parts_f+0xa8>
     e14:	11 23       	and	r17, r17
     e16:	19 f0       	breq	.+6      	; 0xe1e <__fpcmp_parts_f+0xa2>
     e18:	61 e0       	ldi	r22, 0x01	; 1
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <__fpcmp_parts_f+0xac>
     e1e:	6f ef       	ldi	r22, 0xFF	; 255
     e20:	7f ef       	ldi	r23, 0xFF	; 255
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <__fpcmp_parts_f+0xac>
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	cb 01       	movw	r24, r22
     e2a:	1f 91       	pop	r17
     e2c:	08 95       	ret

00000e2e <M_DIO_Vid_WrtPinDir>:
/*
*public functions defintions 
*/

void M_DIO_Vid_WrtPinDir(u8 copy_u8_port,u8 copy_u8_pin,u8 copy_u8_direcrion)
{
     e2e:	df 93       	push	r29
     e30:	cf 93       	push	r28
     e32:	00 d0       	rcall	.+0      	; 0xe34 <M_DIO_Vid_WrtPinDir+0x6>
     e34:	00 d0       	rcall	.+0      	; 0xe36 <M_DIO_Vid_WrtPinDir+0x8>
     e36:	0f 92       	push	r0
     e38:	cd b7       	in	r28, 0x3d	; 61
     e3a:	de b7       	in	r29, 0x3e	; 62
     e3c:	89 83       	std	Y+1, r24	; 0x01
     e3e:	6a 83       	std	Y+2, r22	; 0x02
     e40:	4b 83       	std	Y+3, r20	; 0x03
	switch(copy_u8_port)
     e42:	89 81       	ldd	r24, Y+1	; 0x01
     e44:	28 2f       	mov	r18, r24
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	3d 83       	std	Y+5, r19	; 0x05
     e4a:	2c 83       	std	Y+4, r18	; 0x04
     e4c:	6c 81       	ldd	r22, Y+4	; 0x04
     e4e:	7d 81       	ldd	r23, Y+5	; 0x05
     e50:	61 30       	cpi	r22, 0x01	; 1
     e52:	71 05       	cpc	r23, r1
     e54:	d1 f1       	breq	.+116    	; 0xeca <M_DIO_Vid_WrtPinDir+0x9c>
     e56:	8c 81       	ldd	r24, Y+4	; 0x04
     e58:	9d 81       	ldd	r25, Y+5	; 0x05
     e5a:	82 30       	cpi	r24, 0x02	; 2
     e5c:	91 05       	cpc	r25, r1
     e5e:	34 f4       	brge	.+12     	; 0xe6c <M_DIO_Vid_WrtPinDir+0x3e>
     e60:	2c 81       	ldd	r18, Y+4	; 0x04
     e62:	3d 81       	ldd	r19, Y+5	; 0x05
     e64:	21 15       	cp	r18, r1
     e66:	31 05       	cpc	r19, r1
     e68:	71 f0       	breq	.+28     	; 0xe86 <M_DIO_Vid_WrtPinDir+0x58>
     e6a:	94 c0       	rjmp	.+296    	; 0xf94 <M_DIO_Vid_WrtPinDir+0x166>
     e6c:	6c 81       	ldd	r22, Y+4	; 0x04
     e6e:	7d 81       	ldd	r23, Y+5	; 0x05
     e70:	62 30       	cpi	r22, 0x02	; 2
     e72:	71 05       	cpc	r23, r1
     e74:	09 f4       	brne	.+2      	; 0xe78 <M_DIO_Vid_WrtPinDir+0x4a>
     e76:	4b c0       	rjmp	.+150    	; 0xf0e <M_DIO_Vid_WrtPinDir+0xe0>
     e78:	8c 81       	ldd	r24, Y+4	; 0x04
     e7a:	9d 81       	ldd	r25, Y+5	; 0x05
     e7c:	83 30       	cpi	r24, 0x03	; 3
     e7e:	91 05       	cpc	r25, r1
     e80:	09 f4       	brne	.+2      	; 0xe84 <M_DIO_Vid_WrtPinDir+0x56>
     e82:	67 c0       	rjmp	.+206    	; 0xf52 <M_DIO_Vid_WrtPinDir+0x124>
     e84:	87 c0       	rjmp	.+270    	; 0xf94 <M_DIO_Vid_WrtPinDir+0x166>
	{
		case M_DIO_PORTA: WRT_BIT(DDRA,copy_u8_pin,copy_u8_direcrion); break;
     e86:	aa e3       	ldi	r26, 0x3A	; 58
     e88:	b0 e0       	ldi	r27, 0x00	; 0
     e8a:	ea e3       	ldi	r30, 0x3A	; 58
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	80 81       	ld	r24, Z
     e90:	48 2f       	mov	r20, r24
     e92:	8a 81       	ldd	r24, Y+2	; 0x02
     e94:	28 2f       	mov	r18, r24
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	81 e0       	ldi	r24, 0x01	; 1
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <M_DIO_Vid_WrtPinDir+0x74>
     e9e:	88 0f       	add	r24, r24
     ea0:	99 1f       	adc	r25, r25
     ea2:	2a 95       	dec	r18
     ea4:	e2 f7       	brpl	.-8      	; 0xe9e <M_DIO_Vid_WrtPinDir+0x70>
     ea6:	80 95       	com	r24
     ea8:	48 23       	and	r20, r24
     eaa:	8b 81       	ldd	r24, Y+3	; 0x03
     eac:	28 2f       	mov	r18, r24
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	8a 81       	ldd	r24, Y+2	; 0x02
     eb2:	88 2f       	mov	r24, r24
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	b9 01       	movw	r22, r18
     eb8:	02 c0       	rjmp	.+4      	; 0xebe <M_DIO_Vid_WrtPinDir+0x90>
     eba:	66 0f       	add	r22, r22
     ebc:	77 1f       	adc	r23, r23
     ebe:	8a 95       	dec	r24
     ec0:	e2 f7       	brpl	.-8      	; 0xeba <M_DIO_Vid_WrtPinDir+0x8c>
     ec2:	cb 01       	movw	r24, r22
     ec4:	84 2b       	or	r24, r20
     ec6:	8c 93       	st	X, r24
     ec8:	65 c0       	rjmp	.+202    	; 0xf94 <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTB: WRT_BIT(DDRB,copy_u8_pin,copy_u8_direcrion); break;
     eca:	a7 e3       	ldi	r26, 0x37	; 55
     ecc:	b0 e0       	ldi	r27, 0x00	; 0
     ece:	e7 e3       	ldi	r30, 0x37	; 55
     ed0:	f0 e0       	ldi	r31, 0x00	; 0
     ed2:	80 81       	ld	r24, Z
     ed4:	48 2f       	mov	r20, r24
     ed6:	8a 81       	ldd	r24, Y+2	; 0x02
     ed8:	28 2f       	mov	r18, r24
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	81 e0       	ldi	r24, 0x01	; 1
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <M_DIO_Vid_WrtPinDir+0xb8>
     ee2:	88 0f       	add	r24, r24
     ee4:	99 1f       	adc	r25, r25
     ee6:	2a 95       	dec	r18
     ee8:	e2 f7       	brpl	.-8      	; 0xee2 <M_DIO_Vid_WrtPinDir+0xb4>
     eea:	80 95       	com	r24
     eec:	48 23       	and	r20, r24
     eee:	8b 81       	ldd	r24, Y+3	; 0x03
     ef0:	28 2f       	mov	r18, r24
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	8a 81       	ldd	r24, Y+2	; 0x02
     ef6:	88 2f       	mov	r24, r24
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	b9 01       	movw	r22, r18
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <M_DIO_Vid_WrtPinDir+0xd4>
     efe:	66 0f       	add	r22, r22
     f00:	77 1f       	adc	r23, r23
     f02:	8a 95       	dec	r24
     f04:	e2 f7       	brpl	.-8      	; 0xefe <M_DIO_Vid_WrtPinDir+0xd0>
     f06:	cb 01       	movw	r24, r22
     f08:	84 2b       	or	r24, r20
     f0a:	8c 93       	st	X, r24
     f0c:	43 c0       	rjmp	.+134    	; 0xf94 <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTC: WRT_BIT(DDRC,copy_u8_pin,copy_u8_direcrion); break;
     f0e:	a4 e3       	ldi	r26, 0x34	; 52
     f10:	b0 e0       	ldi	r27, 0x00	; 0
     f12:	e4 e3       	ldi	r30, 0x34	; 52
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	80 81       	ld	r24, Z
     f18:	48 2f       	mov	r20, r24
     f1a:	8a 81       	ldd	r24, Y+2	; 0x02
     f1c:	28 2f       	mov	r18, r24
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	81 e0       	ldi	r24, 0x01	; 1
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	02 c0       	rjmp	.+4      	; 0xf2a <M_DIO_Vid_WrtPinDir+0xfc>
     f26:	88 0f       	add	r24, r24
     f28:	99 1f       	adc	r25, r25
     f2a:	2a 95       	dec	r18
     f2c:	e2 f7       	brpl	.-8      	; 0xf26 <M_DIO_Vid_WrtPinDir+0xf8>
     f2e:	80 95       	com	r24
     f30:	48 23       	and	r20, r24
     f32:	8b 81       	ldd	r24, Y+3	; 0x03
     f34:	28 2f       	mov	r18, r24
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	8a 81       	ldd	r24, Y+2	; 0x02
     f3a:	88 2f       	mov	r24, r24
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	b9 01       	movw	r22, r18
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <M_DIO_Vid_WrtPinDir+0x118>
     f42:	66 0f       	add	r22, r22
     f44:	77 1f       	adc	r23, r23
     f46:	8a 95       	dec	r24
     f48:	e2 f7       	brpl	.-8      	; 0xf42 <M_DIO_Vid_WrtPinDir+0x114>
     f4a:	cb 01       	movw	r24, r22
     f4c:	84 2b       	or	r24, r20
     f4e:	8c 93       	st	X, r24
     f50:	21 c0       	rjmp	.+66     	; 0xf94 <M_DIO_Vid_WrtPinDir+0x166>
		case M_DIO_PORTD: WRT_BIT(DDRD,copy_u8_pin,copy_u8_direcrion); break;
     f52:	a1 e3       	ldi	r26, 0x31	; 49
     f54:	b0 e0       	ldi	r27, 0x00	; 0
     f56:	e1 e3       	ldi	r30, 0x31	; 49
     f58:	f0 e0       	ldi	r31, 0x00	; 0
     f5a:	80 81       	ld	r24, Z
     f5c:	48 2f       	mov	r20, r24
     f5e:	8a 81       	ldd	r24, Y+2	; 0x02
     f60:	28 2f       	mov	r18, r24
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <M_DIO_Vid_WrtPinDir+0x140>
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	2a 95       	dec	r18
     f70:	e2 f7       	brpl	.-8      	; 0xf6a <M_DIO_Vid_WrtPinDir+0x13c>
     f72:	80 95       	com	r24
     f74:	48 23       	and	r20, r24
     f76:	8b 81       	ldd	r24, Y+3	; 0x03
     f78:	28 2f       	mov	r18, r24
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	8a 81       	ldd	r24, Y+2	; 0x02
     f7e:	88 2f       	mov	r24, r24
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	b9 01       	movw	r22, r18
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <M_DIO_Vid_WrtPinDir+0x15c>
     f86:	66 0f       	add	r22, r22
     f88:	77 1f       	adc	r23, r23
     f8a:	8a 95       	dec	r24
     f8c:	e2 f7       	brpl	.-8      	; 0xf86 <M_DIO_Vid_WrtPinDir+0x158>
     f8e:	cb 01       	movw	r24, r22
     f90:	84 2b       	or	r24, r20
     f92:	8c 93       	st	X, r24
		default:break;
	}
}
     f94:	0f 90       	pop	r0
     f96:	0f 90       	pop	r0
     f98:	0f 90       	pop	r0
     f9a:	0f 90       	pop	r0
     f9c:	0f 90       	pop	r0
     f9e:	cf 91       	pop	r28
     fa0:	df 91       	pop	r29
     fa2:	08 95       	ret

00000fa4 <M_DIO_Vid_wrtPinVal>:
void M_DIO_Vid_wrtPinVal(u8 copy_u8_Port,u8 copy_u8_Pin,u8 copy_u8_pinVal)
{
     fa4:	df 93       	push	r29
     fa6:	cf 93       	push	r28
     fa8:	00 d0       	rcall	.+0      	; 0xfaa <M_DIO_Vid_wrtPinVal+0x6>
     faa:	00 d0       	rcall	.+0      	; 0xfac <M_DIO_Vid_wrtPinVal+0x8>
     fac:	0f 92       	push	r0
     fae:	cd b7       	in	r28, 0x3d	; 61
     fb0:	de b7       	in	r29, 0x3e	; 62
     fb2:	89 83       	std	Y+1, r24	; 0x01
     fb4:	6a 83       	std	Y+2, r22	; 0x02
     fb6:	4b 83       	std	Y+3, r20	; 0x03
	switch(copy_u8_Port)
     fb8:	89 81       	ldd	r24, Y+1	; 0x01
     fba:	28 2f       	mov	r18, r24
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	3d 83       	std	Y+5, r19	; 0x05
     fc0:	2c 83       	std	Y+4, r18	; 0x04
     fc2:	6c 81       	ldd	r22, Y+4	; 0x04
     fc4:	7d 81       	ldd	r23, Y+5	; 0x05
     fc6:	61 30       	cpi	r22, 0x01	; 1
     fc8:	71 05       	cpc	r23, r1
     fca:	d1 f1       	breq	.+116    	; 0x1040 <M_DIO_Vid_wrtPinVal+0x9c>
     fcc:	8c 81       	ldd	r24, Y+4	; 0x04
     fce:	9d 81       	ldd	r25, Y+5	; 0x05
     fd0:	82 30       	cpi	r24, 0x02	; 2
     fd2:	91 05       	cpc	r25, r1
     fd4:	34 f4       	brge	.+12     	; 0xfe2 <M_DIO_Vid_wrtPinVal+0x3e>
     fd6:	2c 81       	ldd	r18, Y+4	; 0x04
     fd8:	3d 81       	ldd	r19, Y+5	; 0x05
     fda:	21 15       	cp	r18, r1
     fdc:	31 05       	cpc	r19, r1
     fde:	71 f0       	breq	.+28     	; 0xffc <M_DIO_Vid_wrtPinVal+0x58>
     fe0:	94 c0       	rjmp	.+296    	; 0x110a <M_DIO_Vid_wrtPinVal+0x166>
     fe2:	6c 81       	ldd	r22, Y+4	; 0x04
     fe4:	7d 81       	ldd	r23, Y+5	; 0x05
     fe6:	62 30       	cpi	r22, 0x02	; 2
     fe8:	71 05       	cpc	r23, r1
     fea:	09 f4       	brne	.+2      	; 0xfee <M_DIO_Vid_wrtPinVal+0x4a>
     fec:	4b c0       	rjmp	.+150    	; 0x1084 <M_DIO_Vid_wrtPinVal+0xe0>
     fee:	8c 81       	ldd	r24, Y+4	; 0x04
     ff0:	9d 81       	ldd	r25, Y+5	; 0x05
     ff2:	83 30       	cpi	r24, 0x03	; 3
     ff4:	91 05       	cpc	r25, r1
     ff6:	09 f4       	brne	.+2      	; 0xffa <M_DIO_Vid_wrtPinVal+0x56>
     ff8:	67 c0       	rjmp	.+206    	; 0x10c8 <M_DIO_Vid_wrtPinVal+0x124>
     ffa:	87 c0       	rjmp	.+270    	; 0x110a <M_DIO_Vid_wrtPinVal+0x166>
	{
		case M_DIO_PORTA: WRT_BIT(PORTA,copy_u8_Pin,copy_u8_pinVal); break;
     ffc:	ab e3       	ldi	r26, 0x3B	; 59
     ffe:	b0 e0       	ldi	r27, 0x00	; 0
    1000:	eb e3       	ldi	r30, 0x3B	; 59
    1002:	f0 e0       	ldi	r31, 0x00	; 0
    1004:	80 81       	ld	r24, Z
    1006:	48 2f       	mov	r20, r24
    1008:	8a 81       	ldd	r24, Y+2	; 0x02
    100a:	28 2f       	mov	r18, r24
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	81 e0       	ldi	r24, 0x01	; 1
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	02 c0       	rjmp	.+4      	; 0x1018 <M_DIO_Vid_wrtPinVal+0x74>
    1014:	88 0f       	add	r24, r24
    1016:	99 1f       	adc	r25, r25
    1018:	2a 95       	dec	r18
    101a:	e2 f7       	brpl	.-8      	; 0x1014 <M_DIO_Vid_wrtPinVal+0x70>
    101c:	80 95       	com	r24
    101e:	48 23       	and	r20, r24
    1020:	8b 81       	ldd	r24, Y+3	; 0x03
    1022:	28 2f       	mov	r18, r24
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	8a 81       	ldd	r24, Y+2	; 0x02
    1028:	88 2f       	mov	r24, r24
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	b9 01       	movw	r22, r18
    102e:	02 c0       	rjmp	.+4      	; 0x1034 <M_DIO_Vid_wrtPinVal+0x90>
    1030:	66 0f       	add	r22, r22
    1032:	77 1f       	adc	r23, r23
    1034:	8a 95       	dec	r24
    1036:	e2 f7       	brpl	.-8      	; 0x1030 <M_DIO_Vid_wrtPinVal+0x8c>
    1038:	cb 01       	movw	r24, r22
    103a:	84 2b       	or	r24, r20
    103c:	8c 93       	st	X, r24
    103e:	65 c0       	rjmp	.+202    	; 0x110a <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTB: WRT_BIT(PORTB,copy_u8_Pin,copy_u8_pinVal); break;
    1040:	a8 e3       	ldi	r26, 0x38	; 56
    1042:	b0 e0       	ldi	r27, 0x00	; 0
    1044:	e8 e3       	ldi	r30, 0x38	; 56
    1046:	f0 e0       	ldi	r31, 0x00	; 0
    1048:	80 81       	ld	r24, Z
    104a:	48 2f       	mov	r20, r24
    104c:	8a 81       	ldd	r24, Y+2	; 0x02
    104e:	28 2f       	mov	r18, r24
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	02 c0       	rjmp	.+4      	; 0x105c <M_DIO_Vid_wrtPinVal+0xb8>
    1058:	88 0f       	add	r24, r24
    105a:	99 1f       	adc	r25, r25
    105c:	2a 95       	dec	r18
    105e:	e2 f7       	brpl	.-8      	; 0x1058 <M_DIO_Vid_wrtPinVal+0xb4>
    1060:	80 95       	com	r24
    1062:	48 23       	and	r20, r24
    1064:	8b 81       	ldd	r24, Y+3	; 0x03
    1066:	28 2f       	mov	r18, r24
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	8a 81       	ldd	r24, Y+2	; 0x02
    106c:	88 2f       	mov	r24, r24
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	b9 01       	movw	r22, r18
    1072:	02 c0       	rjmp	.+4      	; 0x1078 <M_DIO_Vid_wrtPinVal+0xd4>
    1074:	66 0f       	add	r22, r22
    1076:	77 1f       	adc	r23, r23
    1078:	8a 95       	dec	r24
    107a:	e2 f7       	brpl	.-8      	; 0x1074 <M_DIO_Vid_wrtPinVal+0xd0>
    107c:	cb 01       	movw	r24, r22
    107e:	84 2b       	or	r24, r20
    1080:	8c 93       	st	X, r24
    1082:	43 c0       	rjmp	.+134    	; 0x110a <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTC: WRT_BIT(PORTC,copy_u8_Pin,copy_u8_pinVal); break;
    1084:	a5 e3       	ldi	r26, 0x35	; 53
    1086:	b0 e0       	ldi	r27, 0x00	; 0
    1088:	e5 e3       	ldi	r30, 0x35	; 53
    108a:	f0 e0       	ldi	r31, 0x00	; 0
    108c:	80 81       	ld	r24, Z
    108e:	48 2f       	mov	r20, r24
    1090:	8a 81       	ldd	r24, Y+2	; 0x02
    1092:	28 2f       	mov	r18, r24
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <M_DIO_Vid_wrtPinVal+0xfc>
    109c:	88 0f       	add	r24, r24
    109e:	99 1f       	adc	r25, r25
    10a0:	2a 95       	dec	r18
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <M_DIO_Vid_wrtPinVal+0xf8>
    10a4:	80 95       	com	r24
    10a6:	48 23       	and	r20, r24
    10a8:	8b 81       	ldd	r24, Y+3	; 0x03
    10aa:	28 2f       	mov	r18, r24
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	8a 81       	ldd	r24, Y+2	; 0x02
    10b0:	88 2f       	mov	r24, r24
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	b9 01       	movw	r22, r18
    10b6:	02 c0       	rjmp	.+4      	; 0x10bc <M_DIO_Vid_wrtPinVal+0x118>
    10b8:	66 0f       	add	r22, r22
    10ba:	77 1f       	adc	r23, r23
    10bc:	8a 95       	dec	r24
    10be:	e2 f7       	brpl	.-8      	; 0x10b8 <M_DIO_Vid_wrtPinVal+0x114>
    10c0:	cb 01       	movw	r24, r22
    10c2:	84 2b       	or	r24, r20
    10c4:	8c 93       	st	X, r24
    10c6:	21 c0       	rjmp	.+66     	; 0x110a <M_DIO_Vid_wrtPinVal+0x166>
		case M_DIO_PORTD: WRT_BIT(PORTD,copy_u8_Pin,copy_u8_pinVal); break;
    10c8:	a2 e3       	ldi	r26, 0x32	; 50
    10ca:	b0 e0       	ldi	r27, 0x00	; 0
    10cc:	e2 e3       	ldi	r30, 0x32	; 50
    10ce:	f0 e0       	ldi	r31, 0x00	; 0
    10d0:	80 81       	ld	r24, Z
    10d2:	48 2f       	mov	r20, r24
    10d4:	8a 81       	ldd	r24, Y+2	; 0x02
    10d6:	28 2f       	mov	r18, r24
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	81 e0       	ldi	r24, 0x01	; 1
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	02 c0       	rjmp	.+4      	; 0x10e4 <M_DIO_Vid_wrtPinVal+0x140>
    10e0:	88 0f       	add	r24, r24
    10e2:	99 1f       	adc	r25, r25
    10e4:	2a 95       	dec	r18
    10e6:	e2 f7       	brpl	.-8      	; 0x10e0 <M_DIO_Vid_wrtPinVal+0x13c>
    10e8:	80 95       	com	r24
    10ea:	48 23       	and	r20, r24
    10ec:	8b 81       	ldd	r24, Y+3	; 0x03
    10ee:	28 2f       	mov	r18, r24
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	8a 81       	ldd	r24, Y+2	; 0x02
    10f4:	88 2f       	mov	r24, r24
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	b9 01       	movw	r22, r18
    10fa:	02 c0       	rjmp	.+4      	; 0x1100 <M_DIO_Vid_wrtPinVal+0x15c>
    10fc:	66 0f       	add	r22, r22
    10fe:	77 1f       	adc	r23, r23
    1100:	8a 95       	dec	r24
    1102:	e2 f7       	brpl	.-8      	; 0x10fc <M_DIO_Vid_wrtPinVal+0x158>
    1104:	cb 01       	movw	r24, r22
    1106:	84 2b       	or	r24, r20
    1108:	8c 93       	st	X, r24
		default:break;
	}
}
    110a:	0f 90       	pop	r0
    110c:	0f 90       	pop	r0
    110e:	0f 90       	pop	r0
    1110:	0f 90       	pop	r0
    1112:	0f 90       	pop	r0
    1114:	cf 91       	pop	r28
    1116:	df 91       	pop	r29
    1118:	08 95       	ret

0000111a <M_DIO_u8_READPinVal>:
u8  M_DIO_u8_READPinVal (u8 copy_u8_Port,u8 copy_u8_Pin)
{
    111a:	df 93       	push	r29
    111c:	cf 93       	push	r28
    111e:	00 d0       	rcall	.+0      	; 0x1120 <M_DIO_u8_READPinVal+0x6>
    1120:	00 d0       	rcall	.+0      	; 0x1122 <M_DIO_u8_READPinVal+0x8>
    1122:	0f 92       	push	r0
    1124:	cd b7       	in	r28, 0x3d	; 61
    1126:	de b7       	in	r29, 0x3e	; 62
    1128:	8a 83       	std	Y+2, r24	; 0x02
    112a:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8_pinval=0;
    112c:	19 82       	std	Y+1, r1	; 0x01
	switch(copy_u8_Port)
    112e:	8a 81       	ldd	r24, Y+2	; 0x02
    1130:	28 2f       	mov	r18, r24
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	3d 83       	std	Y+5, r19	; 0x05
    1136:	2c 83       	std	Y+4, r18	; 0x04
    1138:	4c 81       	ldd	r20, Y+4	; 0x04
    113a:	5d 81       	ldd	r21, Y+5	; 0x05
    113c:	41 30       	cpi	r20, 0x01	; 1
    113e:	51 05       	cpc	r21, r1
    1140:	41 f1       	breq	.+80     	; 0x1192 <M_DIO_u8_READPinVal+0x78>
    1142:	8c 81       	ldd	r24, Y+4	; 0x04
    1144:	9d 81       	ldd	r25, Y+5	; 0x05
    1146:	82 30       	cpi	r24, 0x02	; 2
    1148:	91 05       	cpc	r25, r1
    114a:	34 f4       	brge	.+12     	; 0x1158 <M_DIO_u8_READPinVal+0x3e>
    114c:	2c 81       	ldd	r18, Y+4	; 0x04
    114e:	3d 81       	ldd	r19, Y+5	; 0x05
    1150:	21 15       	cp	r18, r1
    1152:	31 05       	cpc	r19, r1
    1154:	61 f0       	breq	.+24     	; 0x116e <M_DIO_u8_READPinVal+0x54>
    1156:	52 c0       	rjmp	.+164    	; 0x11fc <M_DIO_u8_READPinVal+0xe2>
    1158:	4c 81       	ldd	r20, Y+4	; 0x04
    115a:	5d 81       	ldd	r21, Y+5	; 0x05
    115c:	42 30       	cpi	r20, 0x02	; 2
    115e:	51 05       	cpc	r21, r1
    1160:	51 f1       	breq	.+84     	; 0x11b6 <M_DIO_u8_READPinVal+0x9c>
    1162:	8c 81       	ldd	r24, Y+4	; 0x04
    1164:	9d 81       	ldd	r25, Y+5	; 0x05
    1166:	83 30       	cpi	r24, 0x03	; 3
    1168:	91 05       	cpc	r25, r1
    116a:	b9 f1       	breq	.+110    	; 0x11da <M_DIO_u8_READPinVal+0xc0>
    116c:	47 c0       	rjmp	.+142    	; 0x11fc <M_DIO_u8_READPinVal+0xe2>
	{
		case M_DIO_PORTA: local_u8_pinval = GIT_BIT(PINA,copy_u8_Pin); break;
    116e:	e9 e3       	ldi	r30, 0x39	; 57
    1170:	f0 e0       	ldi	r31, 0x00	; 0
    1172:	80 81       	ld	r24, Z
    1174:	28 2f       	mov	r18, r24
    1176:	30 e0       	ldi	r19, 0x00	; 0
    1178:	8b 81       	ldd	r24, Y+3	; 0x03
    117a:	88 2f       	mov	r24, r24
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	a9 01       	movw	r20, r18
    1180:	02 c0       	rjmp	.+4      	; 0x1186 <M_DIO_u8_READPinVal+0x6c>
    1182:	55 95       	asr	r21
    1184:	47 95       	ror	r20
    1186:	8a 95       	dec	r24
    1188:	e2 f7       	brpl	.-8      	; 0x1182 <M_DIO_u8_READPinVal+0x68>
    118a:	ca 01       	movw	r24, r20
    118c:	81 70       	andi	r24, 0x01	; 1
    118e:	89 83       	std	Y+1, r24	; 0x01
    1190:	35 c0       	rjmp	.+106    	; 0x11fc <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTB: local_u8_pinval = GIT_BIT(PINB,copy_u8_Pin); break;
    1192:	e6 e3       	ldi	r30, 0x36	; 54
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	80 81       	ld	r24, Z
    1198:	28 2f       	mov	r18, r24
    119a:	30 e0       	ldi	r19, 0x00	; 0
    119c:	8b 81       	ldd	r24, Y+3	; 0x03
    119e:	88 2f       	mov	r24, r24
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	a9 01       	movw	r20, r18
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <M_DIO_u8_READPinVal+0x90>
    11a6:	55 95       	asr	r21
    11a8:	47 95       	ror	r20
    11aa:	8a 95       	dec	r24
    11ac:	e2 f7       	brpl	.-8      	; 0x11a6 <M_DIO_u8_READPinVal+0x8c>
    11ae:	ca 01       	movw	r24, r20
    11b0:	81 70       	andi	r24, 0x01	; 1
    11b2:	89 83       	std	Y+1, r24	; 0x01
    11b4:	23 c0       	rjmp	.+70     	; 0x11fc <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTC: local_u8_pinval = GIT_BIT(PINC,copy_u8_Pin); break;
    11b6:	e3 e3       	ldi	r30, 0x33	; 51
    11b8:	f0 e0       	ldi	r31, 0x00	; 0
    11ba:	80 81       	ld	r24, Z
    11bc:	28 2f       	mov	r18, r24
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	8b 81       	ldd	r24, Y+3	; 0x03
    11c2:	88 2f       	mov	r24, r24
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	a9 01       	movw	r20, r18
    11c8:	02 c0       	rjmp	.+4      	; 0x11ce <M_DIO_u8_READPinVal+0xb4>
    11ca:	55 95       	asr	r21
    11cc:	47 95       	ror	r20
    11ce:	8a 95       	dec	r24
    11d0:	e2 f7       	brpl	.-8      	; 0x11ca <M_DIO_u8_READPinVal+0xb0>
    11d2:	ca 01       	movw	r24, r20
    11d4:	81 70       	andi	r24, 0x01	; 1
    11d6:	89 83       	std	Y+1, r24	; 0x01
    11d8:	11 c0       	rjmp	.+34     	; 0x11fc <M_DIO_u8_READPinVal+0xe2>
		case M_DIO_PORTD: local_u8_pinval = GIT_BIT(PIND,copy_u8_Pin); break;
    11da:	e0 e3       	ldi	r30, 0x30	; 48
    11dc:	f0 e0       	ldi	r31, 0x00	; 0
    11de:	80 81       	ld	r24, Z
    11e0:	28 2f       	mov	r18, r24
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	8b 81       	ldd	r24, Y+3	; 0x03
    11e6:	88 2f       	mov	r24, r24
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	a9 01       	movw	r20, r18
    11ec:	02 c0       	rjmp	.+4      	; 0x11f2 <M_DIO_u8_READPinVal+0xd8>
    11ee:	55 95       	asr	r21
    11f0:	47 95       	ror	r20
    11f2:	8a 95       	dec	r24
    11f4:	e2 f7       	brpl	.-8      	; 0x11ee <M_DIO_u8_READPinVal+0xd4>
    11f6:	ca 01       	movw	r24, r20
    11f8:	81 70       	andi	r24, 0x01	; 1
    11fa:	89 83       	std	Y+1, r24	; 0x01
		default:break;
	}
	return local_u8_pinval;
    11fc:	89 81       	ldd	r24, Y+1	; 0x01
}
    11fe:	0f 90       	pop	r0
    1200:	0f 90       	pop	r0
    1202:	0f 90       	pop	r0
    1204:	0f 90       	pop	r0
    1206:	0f 90       	pop	r0
    1208:	cf 91       	pop	r28
    120a:	df 91       	pop	r29
    120c:	08 95       	ret

0000120e <M_DIO_Vid_WrtPortDir>:
void M_DIO_Vid_WrtPortDir(u8 copy_u8_port,u8 copy_u8_Portdirecrion)
{
    120e:	df 93       	push	r29
    1210:	cf 93       	push	r28
    1212:	00 d0       	rcall	.+0      	; 0x1214 <M_DIO_Vid_WrtPortDir+0x6>
    1214:	00 d0       	rcall	.+0      	; 0x1216 <M_DIO_Vid_WrtPortDir+0x8>
    1216:	cd b7       	in	r28, 0x3d	; 61
    1218:	de b7       	in	r29, 0x3e	; 62
    121a:	89 83       	std	Y+1, r24	; 0x01
    121c:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8_port)
    121e:	89 81       	ldd	r24, Y+1	; 0x01
    1220:	28 2f       	mov	r18, r24
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	3c 83       	std	Y+4, r19	; 0x04
    1226:	2b 83       	std	Y+3, r18	; 0x03
    1228:	8b 81       	ldd	r24, Y+3	; 0x03
    122a:	9c 81       	ldd	r25, Y+4	; 0x04
    122c:	81 30       	cpi	r24, 0x01	; 1
    122e:	91 05       	cpc	r25, r1
    1230:	d1 f0       	breq	.+52     	; 0x1266 <M_DIO_Vid_WrtPortDir+0x58>
    1232:	2b 81       	ldd	r18, Y+3	; 0x03
    1234:	3c 81       	ldd	r19, Y+4	; 0x04
    1236:	22 30       	cpi	r18, 0x02	; 2
    1238:	31 05       	cpc	r19, r1
    123a:	2c f4       	brge	.+10     	; 0x1246 <M_DIO_Vid_WrtPortDir+0x38>
    123c:	8b 81       	ldd	r24, Y+3	; 0x03
    123e:	9c 81       	ldd	r25, Y+4	; 0x04
    1240:	00 97       	sbiw	r24, 0x00	; 0
    1242:	61 f0       	breq	.+24     	; 0x125c <M_DIO_Vid_WrtPortDir+0x4e>
    1244:	1e c0       	rjmp	.+60     	; 0x1282 <M_DIO_Vid_WrtPortDir+0x74>
    1246:	2b 81       	ldd	r18, Y+3	; 0x03
    1248:	3c 81       	ldd	r19, Y+4	; 0x04
    124a:	22 30       	cpi	r18, 0x02	; 2
    124c:	31 05       	cpc	r19, r1
    124e:	81 f0       	breq	.+32     	; 0x1270 <M_DIO_Vid_WrtPortDir+0x62>
    1250:	8b 81       	ldd	r24, Y+3	; 0x03
    1252:	9c 81       	ldd	r25, Y+4	; 0x04
    1254:	83 30       	cpi	r24, 0x03	; 3
    1256:	91 05       	cpc	r25, r1
    1258:	81 f0       	breq	.+32     	; 0x127a <M_DIO_Vid_WrtPortDir+0x6c>
    125a:	13 c0       	rjmp	.+38     	; 0x1282 <M_DIO_Vid_WrtPortDir+0x74>
	{
		case M_DIO_PORTA: DDRA = copy_u8_Portdirecrion; break;
    125c:	ea e3       	ldi	r30, 0x3A	; 58
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	8a 81       	ldd	r24, Y+2	; 0x02
    1262:	80 83       	st	Z, r24
    1264:	0e c0       	rjmp	.+28     	; 0x1282 <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTB: DDRB = copy_u8_Portdirecrion; break;
    1266:	e7 e3       	ldi	r30, 0x37	; 55
    1268:	f0 e0       	ldi	r31, 0x00	; 0
    126a:	8a 81       	ldd	r24, Y+2	; 0x02
    126c:	80 83       	st	Z, r24
    126e:	09 c0       	rjmp	.+18     	; 0x1282 <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTC: DDRC = copy_u8_Portdirecrion; break;
    1270:	e4 e3       	ldi	r30, 0x34	; 52
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	8a 81       	ldd	r24, Y+2	; 0x02
    1276:	80 83       	st	Z, r24
    1278:	04 c0       	rjmp	.+8      	; 0x1282 <M_DIO_Vid_WrtPortDir+0x74>
		case M_DIO_PORTD: DDRD = copy_u8_Portdirecrion; break;
    127a:	e1 e3       	ldi	r30, 0x31	; 49
    127c:	f0 e0       	ldi	r31, 0x00	; 0
    127e:	8a 81       	ldd	r24, Y+2	; 0x02
    1280:	80 83       	st	Z, r24
	}
}
    1282:	0f 90       	pop	r0
    1284:	0f 90       	pop	r0
    1286:	0f 90       	pop	r0
    1288:	0f 90       	pop	r0
    128a:	cf 91       	pop	r28
    128c:	df 91       	pop	r29
    128e:	08 95       	ret

00001290 <M_DIO_Vid_WrtPortVal>:
void M_DIO_Vid_WrtPortVal(u8 copy_u8_port,u8 copy_u8_PortVal)
{
    1290:	df 93       	push	r29
    1292:	cf 93       	push	r28
    1294:	00 d0       	rcall	.+0      	; 0x1296 <M_DIO_Vid_WrtPortVal+0x6>
    1296:	00 d0       	rcall	.+0      	; 0x1298 <M_DIO_Vid_WrtPortVal+0x8>
    1298:	cd b7       	in	r28, 0x3d	; 61
    129a:	de b7       	in	r29, 0x3e	; 62
    129c:	89 83       	std	Y+1, r24	; 0x01
    129e:	6a 83       	std	Y+2, r22	; 0x02
	switch(copy_u8_port)
    12a0:	89 81       	ldd	r24, Y+1	; 0x01
    12a2:	28 2f       	mov	r18, r24
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	3c 83       	std	Y+4, r19	; 0x04
    12a8:	2b 83       	std	Y+3, r18	; 0x03
    12aa:	8b 81       	ldd	r24, Y+3	; 0x03
    12ac:	9c 81       	ldd	r25, Y+4	; 0x04
    12ae:	81 30       	cpi	r24, 0x01	; 1
    12b0:	91 05       	cpc	r25, r1
    12b2:	d1 f0       	breq	.+52     	; 0x12e8 <M_DIO_Vid_WrtPortVal+0x58>
    12b4:	2b 81       	ldd	r18, Y+3	; 0x03
    12b6:	3c 81       	ldd	r19, Y+4	; 0x04
    12b8:	22 30       	cpi	r18, 0x02	; 2
    12ba:	31 05       	cpc	r19, r1
    12bc:	2c f4       	brge	.+10     	; 0x12c8 <M_DIO_Vid_WrtPortVal+0x38>
    12be:	8b 81       	ldd	r24, Y+3	; 0x03
    12c0:	9c 81       	ldd	r25, Y+4	; 0x04
    12c2:	00 97       	sbiw	r24, 0x00	; 0
    12c4:	61 f0       	breq	.+24     	; 0x12de <M_DIO_Vid_WrtPortVal+0x4e>
    12c6:	1e c0       	rjmp	.+60     	; 0x1304 <M_DIO_Vid_WrtPortVal+0x74>
    12c8:	2b 81       	ldd	r18, Y+3	; 0x03
    12ca:	3c 81       	ldd	r19, Y+4	; 0x04
    12cc:	22 30       	cpi	r18, 0x02	; 2
    12ce:	31 05       	cpc	r19, r1
    12d0:	81 f0       	breq	.+32     	; 0x12f2 <M_DIO_Vid_WrtPortVal+0x62>
    12d2:	8b 81       	ldd	r24, Y+3	; 0x03
    12d4:	9c 81       	ldd	r25, Y+4	; 0x04
    12d6:	83 30       	cpi	r24, 0x03	; 3
    12d8:	91 05       	cpc	r25, r1
    12da:	81 f0       	breq	.+32     	; 0x12fc <M_DIO_Vid_WrtPortVal+0x6c>
    12dc:	13 c0       	rjmp	.+38     	; 0x1304 <M_DIO_Vid_WrtPortVal+0x74>
	{
		case M_DIO_PORTA: PORTA = copy_u8_PortVal ; break;
    12de:	eb e3       	ldi	r30, 0x3B	; 59
    12e0:	f0 e0       	ldi	r31, 0x00	; 0
    12e2:	8a 81       	ldd	r24, Y+2	; 0x02
    12e4:	80 83       	st	Z, r24
    12e6:	0e c0       	rjmp	.+28     	; 0x1304 <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTB: PORTB = copy_u8_PortVal ; break;
    12e8:	e8 e3       	ldi	r30, 0x38	; 56
    12ea:	f0 e0       	ldi	r31, 0x00	; 0
    12ec:	8a 81       	ldd	r24, Y+2	; 0x02
    12ee:	80 83       	st	Z, r24
    12f0:	09 c0       	rjmp	.+18     	; 0x1304 <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTC: PORTC = copy_u8_PortVal ; break;
    12f2:	e5 e3       	ldi	r30, 0x35	; 53
    12f4:	f0 e0       	ldi	r31, 0x00	; 0
    12f6:	8a 81       	ldd	r24, Y+2	; 0x02
    12f8:	80 83       	st	Z, r24
    12fa:	04 c0       	rjmp	.+8      	; 0x1304 <M_DIO_Vid_WrtPortVal+0x74>
		case M_DIO_PORTD: PORTD = copy_u8_PortVal ; break;
    12fc:	e2 e3       	ldi	r30, 0x32	; 50
    12fe:	f0 e0       	ldi	r31, 0x00	; 0
    1300:	8a 81       	ldd	r24, Y+2	; 0x02
    1302:	80 83       	st	Z, r24
	}
}
    1304:	0f 90       	pop	r0
    1306:	0f 90       	pop	r0
    1308:	0f 90       	pop	r0
    130a:	0f 90       	pop	r0
    130c:	cf 91       	pop	r28
    130e:	df 91       	pop	r29
    1310:	08 95       	ret

00001312 <M_DIO_u8_ReadPortVal>:
u8 M_DIO_u8_ReadPortVal(u8 copy_u8_Port)
{
    1312:	df 93       	push	r29
    1314:	cf 93       	push	r28
    1316:	00 d0       	rcall	.+0      	; 0x1318 <M_DIO_u8_ReadPortVal+0x6>
    1318:	00 d0       	rcall	.+0      	; 0x131a <M_DIO_u8_ReadPortVal+0x8>
    131a:	cd b7       	in	r28, 0x3d	; 61
    131c:	de b7       	in	r29, 0x3e	; 62
    131e:	8a 83       	std	Y+2, r24	; 0x02
	u8 local_u8_portVal=0;
    1320:	19 82       	std	Y+1, r1	; 0x01
	switch(copy_u8_Port)
    1322:	8a 81       	ldd	r24, Y+2	; 0x02
    1324:	28 2f       	mov	r18, r24
    1326:	30 e0       	ldi	r19, 0x00	; 0
    1328:	3c 83       	std	Y+4, r19	; 0x04
    132a:	2b 83       	std	Y+3, r18	; 0x03
    132c:	8b 81       	ldd	r24, Y+3	; 0x03
    132e:	9c 81       	ldd	r25, Y+4	; 0x04
    1330:	81 30       	cpi	r24, 0x01	; 1
    1332:	91 05       	cpc	r25, r1
    1334:	d1 f0       	breq	.+52     	; 0x136a <M_DIO_u8_ReadPortVal+0x58>
    1336:	2b 81       	ldd	r18, Y+3	; 0x03
    1338:	3c 81       	ldd	r19, Y+4	; 0x04
    133a:	22 30       	cpi	r18, 0x02	; 2
    133c:	31 05       	cpc	r19, r1
    133e:	2c f4       	brge	.+10     	; 0x134a <M_DIO_u8_ReadPortVal+0x38>
    1340:	8b 81       	ldd	r24, Y+3	; 0x03
    1342:	9c 81       	ldd	r25, Y+4	; 0x04
    1344:	00 97       	sbiw	r24, 0x00	; 0
    1346:	61 f0       	breq	.+24     	; 0x1360 <M_DIO_u8_ReadPortVal+0x4e>
    1348:	1e c0       	rjmp	.+60     	; 0x1386 <M_DIO_u8_ReadPortVal+0x74>
    134a:	2b 81       	ldd	r18, Y+3	; 0x03
    134c:	3c 81       	ldd	r19, Y+4	; 0x04
    134e:	22 30       	cpi	r18, 0x02	; 2
    1350:	31 05       	cpc	r19, r1
    1352:	81 f0       	breq	.+32     	; 0x1374 <M_DIO_u8_ReadPortVal+0x62>
    1354:	8b 81       	ldd	r24, Y+3	; 0x03
    1356:	9c 81       	ldd	r25, Y+4	; 0x04
    1358:	83 30       	cpi	r24, 0x03	; 3
    135a:	91 05       	cpc	r25, r1
    135c:	81 f0       	breq	.+32     	; 0x137e <M_DIO_u8_ReadPortVal+0x6c>
    135e:	13 c0       	rjmp	.+38     	; 0x1386 <M_DIO_u8_ReadPortVal+0x74>
	{
		case M_DIO_PORTA: local_u8_portVal = PINA ; break;
    1360:	e9 e3       	ldi	r30, 0x39	; 57
    1362:	f0 e0       	ldi	r31, 0x00	; 0
    1364:	80 81       	ld	r24, Z
    1366:	89 83       	std	Y+1, r24	; 0x01
    1368:	0e c0       	rjmp	.+28     	; 0x1386 <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTB: local_u8_portVal = PINB ; break;
    136a:	e6 e3       	ldi	r30, 0x36	; 54
    136c:	f0 e0       	ldi	r31, 0x00	; 0
    136e:	80 81       	ld	r24, Z
    1370:	89 83       	std	Y+1, r24	; 0x01
    1372:	09 c0       	rjmp	.+18     	; 0x1386 <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTC: local_u8_portVal = PINC ; break;
    1374:	e3 e3       	ldi	r30, 0x33	; 51
    1376:	f0 e0       	ldi	r31, 0x00	; 0
    1378:	80 81       	ld	r24, Z
    137a:	89 83       	std	Y+1, r24	; 0x01
    137c:	04 c0       	rjmp	.+8      	; 0x1386 <M_DIO_u8_ReadPortVal+0x74>
		case M_DIO_PORTD: local_u8_portVal = PIND ; break;
    137e:	e0 e3       	ldi	r30, 0x30	; 48
    1380:	f0 e0       	ldi	r31, 0x00	; 0
    1382:	80 81       	ld	r24, Z
    1384:	89 83       	std	Y+1, r24	; 0x01
	}
	return local_u8_portVal;
    1386:	89 81       	ldd	r24, Y+1	; 0x01
}
    1388:	0f 90       	pop	r0
    138a:	0f 90       	pop	r0
    138c:	0f 90       	pop	r0
    138e:	0f 90       	pop	r0
    1390:	cf 91       	pop	r28
    1392:	df 91       	pop	r29
    1394:	08 95       	ret

00001396 <M_GIE_Vid_EnableGlbInt>:
/*
*public functions defintions
*/

void M_GIE_Vid_EnableGlbInt()
{
    1396:	df 93       	push	r29
    1398:	cf 93       	push	r28
    139a:	cd b7       	in	r28, 0x3d	; 61
    139c:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,7);
    139e:	af e5       	ldi	r26, 0x5F	; 95
    13a0:	b0 e0       	ldi	r27, 0x00	; 0
    13a2:	ef e5       	ldi	r30, 0x5F	; 95
    13a4:	f0 e0       	ldi	r31, 0x00	; 0
    13a6:	80 81       	ld	r24, Z
    13a8:	80 68       	ori	r24, 0x80	; 128
    13aa:	8c 93       	st	X, r24
}
    13ac:	cf 91       	pop	r28
    13ae:	df 91       	pop	r29
    13b0:	08 95       	ret

000013b2 <M_GIE_Vid_DisableGlbInt>:
void M_GIE_Vid_DisableGlbInt()
{
    13b2:	df 93       	push	r29
    13b4:	cf 93       	push	r28
    13b6:	cd b7       	in	r28, 0x3d	; 61
    13b8:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,7);
    13ba:	af e5       	ldi	r26, 0x5F	; 95
    13bc:	b0 e0       	ldi	r27, 0x00	; 0
    13be:	ef e5       	ldi	r30, 0x5F	; 95
    13c0:	f0 e0       	ldi	r31, 0x00	; 0
    13c2:	80 81       	ld	r24, Z
    13c4:	8f 77       	andi	r24, 0x7F	; 127
    13c6:	8c 93       	st	X, r24
}
    13c8:	cf 91       	pop	r28
    13ca:	df 91       	pop	r29
    13cc:	08 95       	ret

000013ce <H_LCD_Vid_Int>:


/* LCD INIT FOR 8 BIT */
/************************************************/
void H_LCD_Vid_Int()
{
    13ce:	0f 93       	push	r16
    13d0:	1f 93       	push	r17
    13d2:	df 93       	push	r29
    13d4:	cf 93       	push	r28
    13d6:	cd b7       	in	r28, 0x3d	; 61
    13d8:	de b7       	in	r29, 0x3e	; 62
    13da:	c6 54       	subi	r28, 0x46	; 70
    13dc:	d0 40       	sbci	r29, 0x00	; 0
    13de:	0f b6       	in	r0, 0x3f	; 63
    13e0:	f8 94       	cli
    13e2:	de bf       	out	0x3e, r29	; 62
    13e4:	0f be       	out	0x3f, r0	; 63
    13e6:	cd bf       	out	0x3d, r28	; 61
	/* set pin RS as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,RS,M_DIO_OUTPUT);
    13e8:	81 e0       	ldi	r24, 0x01	; 1
    13ea:	60 e0       	ldi	r22, 0x00	; 0
    13ec:	41 e0       	ldi	r20, 0x01	; 1
    13ee:	0e 94 17 07 	call	0xe2e	; 0xe2e <M_DIO_Vid_WrtPinDir>

	/* set pin R/w as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,RW,M_DIO_OUTPUT);
    13f2:	81 e0       	ldi	r24, 0x01	; 1
    13f4:	61 e0       	ldi	r22, 0x01	; 1
    13f6:	41 e0       	ldi	r20, 0x01	; 1
    13f8:	0e 94 17 07 	call	0xe2e	; 0xe2e <M_DIO_Vid_WrtPinDir>

	/* set pin E as output */
	M_DIO_Vid_WrtPinDir(LCD_control_Port,E,M_DIO_OUTPUT);
    13fc:	81 e0       	ldi	r24, 0x01	; 1
    13fe:	62 e0       	ldi	r22, 0x02	; 2
    1400:	41 e0       	ldi	r20, 0x01	; 1
    1402:	0e 94 17 07 	call	0xe2e	; 0xe2e <M_DIO_Vid_WrtPinDir>

	/*SET data port as output */
	M_DIO_Vid_WrtPortDir(LCD_Data_Port,M_DIO_PORT_OUTPUT);
    1406:	80 e0       	ldi	r24, 0x00	; 0
    1408:	6f ef       	ldi	r22, 0xFF	; 255
    140a:	0e 94 07 09 	call	0x120e	; 0x120e <M_DIO_Vid_WrtPortDir>
    140e:	fe 01       	movw	r30, r28
    1410:	ed 5b       	subi	r30, 0xBD	; 189
    1412:	ff 4f       	sbci	r31, 0xFF	; 255
    1414:	80 e0       	ldi	r24, 0x00	; 0
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	a0 ef       	ldi	r26, 0xF0	; 240
    141a:	b1 e4       	ldi	r27, 0x41	; 65
    141c:	80 83       	st	Z, r24
    141e:	91 83       	std	Z+1, r25	; 0x01
    1420:	a2 83       	std	Z+2, r26	; 0x02
    1422:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1424:	8e 01       	movw	r16, r28
    1426:	01 5c       	subi	r16, 0xC1	; 193
    1428:	1f 4f       	sbci	r17, 0xFF	; 255
    142a:	fe 01       	movw	r30, r28
    142c:	ed 5b       	subi	r30, 0xBD	; 189
    142e:	ff 4f       	sbci	r31, 0xFF	; 255
    1430:	60 81       	ld	r22, Z
    1432:	71 81       	ldd	r23, Z+1	; 0x01
    1434:	82 81       	ldd	r24, Z+2	; 0x02
    1436:	93 81       	ldd	r25, Z+3	; 0x03
    1438:	20 e0       	ldi	r18, 0x00	; 0
    143a:	30 e0       	ldi	r19, 0x00	; 0
    143c:	4a ef       	ldi	r20, 0xFA	; 250
    143e:	54 e4       	ldi	r21, 0x44	; 68
    1440:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1444:	dc 01       	movw	r26, r24
    1446:	cb 01       	movw	r24, r22
    1448:	f8 01       	movw	r30, r16
    144a:	80 83       	st	Z, r24
    144c:	91 83       	std	Z+1, r25	; 0x01
    144e:	a2 83       	std	Z+2, r26	; 0x02
    1450:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1452:	fe 01       	movw	r30, r28
    1454:	ff 96       	adiw	r30, 0x3f	; 63
    1456:	60 81       	ld	r22, Z
    1458:	71 81       	ldd	r23, Z+1	; 0x01
    145a:	82 81       	ldd	r24, Z+2	; 0x02
    145c:	93 81       	ldd	r25, Z+3	; 0x03
    145e:	20 e0       	ldi	r18, 0x00	; 0
    1460:	30 e0       	ldi	r19, 0x00	; 0
    1462:	40 e8       	ldi	r20, 0x80	; 128
    1464:	5f e3       	ldi	r21, 0x3F	; 63
    1466:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    146a:	88 23       	and	r24, r24
    146c:	2c f4       	brge	.+10     	; 0x1478 <H_LCD_Vid_Int+0xaa>
		__ticks = 1;
    146e:	81 e0       	ldi	r24, 0x01	; 1
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	9e af       	std	Y+62, r25	; 0x3e
    1474:	8d af       	std	Y+61, r24	; 0x3d
    1476:	46 c0       	rjmp	.+140    	; 0x1504 <H_LCD_Vid_Int+0x136>
	else if (__tmp > 65535)
    1478:	fe 01       	movw	r30, r28
    147a:	ff 96       	adiw	r30, 0x3f	; 63
    147c:	60 81       	ld	r22, Z
    147e:	71 81       	ldd	r23, Z+1	; 0x01
    1480:	82 81       	ldd	r24, Z+2	; 0x02
    1482:	93 81       	ldd	r25, Z+3	; 0x03
    1484:	20 e0       	ldi	r18, 0x00	; 0
    1486:	3f ef       	ldi	r19, 0xFF	; 255
    1488:	4f e7       	ldi	r20, 0x7F	; 127
    148a:	57 e4       	ldi	r21, 0x47	; 71
    148c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1490:	18 16       	cp	r1, r24
    1492:	64 f5       	brge	.+88     	; 0x14ec <H_LCD_Vid_Int+0x11e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1494:	fe 01       	movw	r30, r28
    1496:	ed 5b       	subi	r30, 0xBD	; 189
    1498:	ff 4f       	sbci	r31, 0xFF	; 255
    149a:	60 81       	ld	r22, Z
    149c:	71 81       	ldd	r23, Z+1	; 0x01
    149e:	82 81       	ldd	r24, Z+2	; 0x02
    14a0:	93 81       	ldd	r25, Z+3	; 0x03
    14a2:	20 e0       	ldi	r18, 0x00	; 0
    14a4:	30 e0       	ldi	r19, 0x00	; 0
    14a6:	40 e2       	ldi	r20, 0x20	; 32
    14a8:	51 e4       	ldi	r21, 0x41	; 65
    14aa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14ae:	dc 01       	movw	r26, r24
    14b0:	cb 01       	movw	r24, r22
    14b2:	bc 01       	movw	r22, r24
    14b4:	cd 01       	movw	r24, r26
    14b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14ba:	dc 01       	movw	r26, r24
    14bc:	cb 01       	movw	r24, r22
    14be:	9e af       	std	Y+62, r25	; 0x3e
    14c0:	8d af       	std	Y+61, r24	; 0x3d
    14c2:	0f c0       	rjmp	.+30     	; 0x14e2 <H_LCD_Vid_Int+0x114>
    14c4:	88 ec       	ldi	r24, 0xC8	; 200
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	9c af       	std	Y+60, r25	; 0x3c
    14ca:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    14cc:	8b ad       	ldd	r24, Y+59	; 0x3b
    14ce:	9c ad       	ldd	r25, Y+60	; 0x3c
    14d0:	01 97       	sbiw	r24, 0x01	; 1
    14d2:	f1 f7       	brne	.-4      	; 0x14d0 <H_LCD_Vid_Int+0x102>
    14d4:	9c af       	std	Y+60, r25	; 0x3c
    14d6:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14d8:	8d ad       	ldd	r24, Y+61	; 0x3d
    14da:	9e ad       	ldd	r25, Y+62	; 0x3e
    14dc:	01 97       	sbiw	r24, 0x01	; 1
    14de:	9e af       	std	Y+62, r25	; 0x3e
    14e0:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14e2:	8d ad       	ldd	r24, Y+61	; 0x3d
    14e4:	9e ad       	ldd	r25, Y+62	; 0x3e
    14e6:	00 97       	sbiw	r24, 0x00	; 0
    14e8:	69 f7       	brne	.-38     	; 0x14c4 <H_LCD_Vid_Int+0xf6>
    14ea:	16 c0       	rjmp	.+44     	; 0x1518 <H_LCD_Vid_Int+0x14a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14ec:	fe 01       	movw	r30, r28
    14ee:	ff 96       	adiw	r30, 0x3f	; 63
    14f0:	60 81       	ld	r22, Z
    14f2:	71 81       	ldd	r23, Z+1	; 0x01
    14f4:	82 81       	ldd	r24, Z+2	; 0x02
    14f6:	93 81       	ldd	r25, Z+3	; 0x03
    14f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14fc:	dc 01       	movw	r26, r24
    14fe:	cb 01       	movw	r24, r22
    1500:	9e af       	std	Y+62, r25	; 0x3e
    1502:	8d af       	std	Y+61, r24	; 0x3d
    1504:	8d ad       	ldd	r24, Y+61	; 0x3d
    1506:	9e ad       	ldd	r25, Y+62	; 0x3e
    1508:	9a af       	std	Y+58, r25	; 0x3a
    150a:	89 af       	std	Y+57, r24	; 0x39
    150c:	89 ad       	ldd	r24, Y+57	; 0x39
    150e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1510:	01 97       	sbiw	r24, 0x01	; 1
    1512:	f1 f7       	brne	.-4      	; 0x1510 <H_LCD_Vid_Int+0x142>
    1514:	9a af       	std	Y+58, r25	; 0x3a
    1516:	89 af       	std	Y+57, r24	; 0x39

	/* wait for 30 ms */
	_delay_ms(30);
	H_LCD_Vid_Wrt_Com(SET_8BITS_2LINES);
    1518:	88 e3       	ldi	r24, 0x38	; 56
    151a:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <H_LCD_Vid_Wrt_Com>
    151e:	80 e0       	ldi	r24, 0x00	; 0
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	a0 e8       	ldi	r26, 0x80	; 128
    1524:	bf e3       	ldi	r27, 0x3F	; 63
    1526:	8d ab       	std	Y+53, r24	; 0x35
    1528:	9e ab       	std	Y+54, r25	; 0x36
    152a:	af ab       	std	Y+55, r26	; 0x37
    152c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    152e:	6d a9       	ldd	r22, Y+53	; 0x35
    1530:	7e a9       	ldd	r23, Y+54	; 0x36
    1532:	8f a9       	ldd	r24, Y+55	; 0x37
    1534:	98 ad       	ldd	r25, Y+56	; 0x38
    1536:	20 e0       	ldi	r18, 0x00	; 0
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	4a ef       	ldi	r20, 0xFA	; 250
    153c:	54 e4       	ldi	r21, 0x44	; 68
    153e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1542:	dc 01       	movw	r26, r24
    1544:	cb 01       	movw	r24, r22
    1546:	89 ab       	std	Y+49, r24	; 0x31
    1548:	9a ab       	std	Y+50, r25	; 0x32
    154a:	ab ab       	std	Y+51, r26	; 0x33
    154c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    154e:	69 a9       	ldd	r22, Y+49	; 0x31
    1550:	7a a9       	ldd	r23, Y+50	; 0x32
    1552:	8b a9       	ldd	r24, Y+51	; 0x33
    1554:	9c a9       	ldd	r25, Y+52	; 0x34
    1556:	20 e0       	ldi	r18, 0x00	; 0
    1558:	30 e0       	ldi	r19, 0x00	; 0
    155a:	40 e8       	ldi	r20, 0x80	; 128
    155c:	5f e3       	ldi	r21, 0x3F	; 63
    155e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1562:	88 23       	and	r24, r24
    1564:	2c f4       	brge	.+10     	; 0x1570 <H_LCD_Vid_Int+0x1a2>
		__ticks = 1;
    1566:	81 e0       	ldi	r24, 0x01	; 1
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	98 ab       	std	Y+48, r25	; 0x30
    156c:	8f a7       	std	Y+47, r24	; 0x2f
    156e:	3f c0       	rjmp	.+126    	; 0x15ee <H_LCD_Vid_Int+0x220>
	else if (__tmp > 65535)
    1570:	69 a9       	ldd	r22, Y+49	; 0x31
    1572:	7a a9       	ldd	r23, Y+50	; 0x32
    1574:	8b a9       	ldd	r24, Y+51	; 0x33
    1576:	9c a9       	ldd	r25, Y+52	; 0x34
    1578:	20 e0       	ldi	r18, 0x00	; 0
    157a:	3f ef       	ldi	r19, 0xFF	; 255
    157c:	4f e7       	ldi	r20, 0x7F	; 127
    157e:	57 e4       	ldi	r21, 0x47	; 71
    1580:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1584:	18 16       	cp	r1, r24
    1586:	4c f5       	brge	.+82     	; 0x15da <H_LCD_Vid_Int+0x20c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1588:	6d a9       	ldd	r22, Y+53	; 0x35
    158a:	7e a9       	ldd	r23, Y+54	; 0x36
    158c:	8f a9       	ldd	r24, Y+55	; 0x37
    158e:	98 ad       	ldd	r25, Y+56	; 0x38
    1590:	20 e0       	ldi	r18, 0x00	; 0
    1592:	30 e0       	ldi	r19, 0x00	; 0
    1594:	40 e2       	ldi	r20, 0x20	; 32
    1596:	51 e4       	ldi	r21, 0x41	; 65
    1598:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    159c:	dc 01       	movw	r26, r24
    159e:	cb 01       	movw	r24, r22
    15a0:	bc 01       	movw	r22, r24
    15a2:	cd 01       	movw	r24, r26
    15a4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15a8:	dc 01       	movw	r26, r24
    15aa:	cb 01       	movw	r24, r22
    15ac:	98 ab       	std	Y+48, r25	; 0x30
    15ae:	8f a7       	std	Y+47, r24	; 0x2f
    15b0:	0f c0       	rjmp	.+30     	; 0x15d0 <H_LCD_Vid_Int+0x202>
    15b2:	88 ec       	ldi	r24, 0xC8	; 200
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	9e a7       	std	Y+46, r25	; 0x2e
    15b8:	8d a7       	std	Y+45, r24	; 0x2d
    15ba:	8d a5       	ldd	r24, Y+45	; 0x2d
    15bc:	9e a5       	ldd	r25, Y+46	; 0x2e
    15be:	01 97       	sbiw	r24, 0x01	; 1
    15c0:	f1 f7       	brne	.-4      	; 0x15be <H_LCD_Vid_Int+0x1f0>
    15c2:	9e a7       	std	Y+46, r25	; 0x2e
    15c4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15c6:	8f a5       	ldd	r24, Y+47	; 0x2f
    15c8:	98 a9       	ldd	r25, Y+48	; 0x30
    15ca:	01 97       	sbiw	r24, 0x01	; 1
    15cc:	98 ab       	std	Y+48, r25	; 0x30
    15ce:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    15d2:	98 a9       	ldd	r25, Y+48	; 0x30
    15d4:	00 97       	sbiw	r24, 0x00	; 0
    15d6:	69 f7       	brne	.-38     	; 0x15b2 <H_LCD_Vid_Int+0x1e4>
    15d8:	14 c0       	rjmp	.+40     	; 0x1602 <H_LCD_Vid_Int+0x234>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15da:	69 a9       	ldd	r22, Y+49	; 0x31
    15dc:	7a a9       	ldd	r23, Y+50	; 0x32
    15de:	8b a9       	ldd	r24, Y+51	; 0x33
    15e0:	9c a9       	ldd	r25, Y+52	; 0x34
    15e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15e6:	dc 01       	movw	r26, r24
    15e8:	cb 01       	movw	r24, r22
    15ea:	98 ab       	std	Y+48, r25	; 0x30
    15ec:	8f a7       	std	Y+47, r24	; 0x2f
    15ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    15f0:	98 a9       	ldd	r25, Y+48	; 0x30
    15f2:	9c a7       	std	Y+44, r25	; 0x2c
    15f4:	8b a7       	std	Y+43, r24	; 0x2b
    15f6:	8b a5       	ldd	r24, Y+43	; 0x2b
    15f8:	9c a5       	ldd	r25, Y+44	; 0x2c
    15fa:	01 97       	sbiw	r24, 0x01	; 1
    15fc:	f1 f7       	brne	.-4      	; 0x15fa <H_LCD_Vid_Int+0x22c>
    15fe:	9c a7       	std	Y+44, r25	; 0x2c
    1600:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	H_LCD_Vid_Wrt_Com(DISPLAY_ON);
    1602:	8c e0       	ldi	r24, 0x0C	; 12
    1604:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <H_LCD_Vid_Wrt_Com>
    1608:	80 e0       	ldi	r24, 0x00	; 0
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	a0 e8       	ldi	r26, 0x80	; 128
    160e:	bf e3       	ldi	r27, 0x3F	; 63
    1610:	8f a3       	std	Y+39, r24	; 0x27
    1612:	98 a7       	std	Y+40, r25	; 0x28
    1614:	a9 a7       	std	Y+41, r26	; 0x29
    1616:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1618:	6f a1       	ldd	r22, Y+39	; 0x27
    161a:	78 a5       	ldd	r23, Y+40	; 0x28
    161c:	89 a5       	ldd	r24, Y+41	; 0x29
    161e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1620:	20 e0       	ldi	r18, 0x00	; 0
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	4a ef       	ldi	r20, 0xFA	; 250
    1626:	54 e4       	ldi	r21, 0x44	; 68
    1628:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    162c:	dc 01       	movw	r26, r24
    162e:	cb 01       	movw	r24, r22
    1630:	8b a3       	std	Y+35, r24	; 0x23
    1632:	9c a3       	std	Y+36, r25	; 0x24
    1634:	ad a3       	std	Y+37, r26	; 0x25
    1636:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1638:	6b a1       	ldd	r22, Y+35	; 0x23
    163a:	7c a1       	ldd	r23, Y+36	; 0x24
    163c:	8d a1       	ldd	r24, Y+37	; 0x25
    163e:	9e a1       	ldd	r25, Y+38	; 0x26
    1640:	20 e0       	ldi	r18, 0x00	; 0
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	40 e8       	ldi	r20, 0x80	; 128
    1646:	5f e3       	ldi	r21, 0x3F	; 63
    1648:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    164c:	88 23       	and	r24, r24
    164e:	2c f4       	brge	.+10     	; 0x165a <H_LCD_Vid_Int+0x28c>
		__ticks = 1;
    1650:	81 e0       	ldi	r24, 0x01	; 1
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	9a a3       	std	Y+34, r25	; 0x22
    1656:	89 a3       	std	Y+33, r24	; 0x21
    1658:	3f c0       	rjmp	.+126    	; 0x16d8 <H_LCD_Vid_Int+0x30a>
	else if (__tmp > 65535)
    165a:	6b a1       	ldd	r22, Y+35	; 0x23
    165c:	7c a1       	ldd	r23, Y+36	; 0x24
    165e:	8d a1       	ldd	r24, Y+37	; 0x25
    1660:	9e a1       	ldd	r25, Y+38	; 0x26
    1662:	20 e0       	ldi	r18, 0x00	; 0
    1664:	3f ef       	ldi	r19, 0xFF	; 255
    1666:	4f e7       	ldi	r20, 0x7F	; 127
    1668:	57 e4       	ldi	r21, 0x47	; 71
    166a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    166e:	18 16       	cp	r1, r24
    1670:	4c f5       	brge	.+82     	; 0x16c4 <H_LCD_Vid_Int+0x2f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1672:	6f a1       	ldd	r22, Y+39	; 0x27
    1674:	78 a5       	ldd	r23, Y+40	; 0x28
    1676:	89 a5       	ldd	r24, Y+41	; 0x29
    1678:	9a a5       	ldd	r25, Y+42	; 0x2a
    167a:	20 e0       	ldi	r18, 0x00	; 0
    167c:	30 e0       	ldi	r19, 0x00	; 0
    167e:	40 e2       	ldi	r20, 0x20	; 32
    1680:	51 e4       	ldi	r21, 0x41	; 65
    1682:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1686:	dc 01       	movw	r26, r24
    1688:	cb 01       	movw	r24, r22
    168a:	bc 01       	movw	r22, r24
    168c:	cd 01       	movw	r24, r26
    168e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1692:	dc 01       	movw	r26, r24
    1694:	cb 01       	movw	r24, r22
    1696:	9a a3       	std	Y+34, r25	; 0x22
    1698:	89 a3       	std	Y+33, r24	; 0x21
    169a:	0f c0       	rjmp	.+30     	; 0x16ba <H_LCD_Vid_Int+0x2ec>
    169c:	88 ec       	ldi	r24, 0xC8	; 200
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	98 a3       	std	Y+32, r25	; 0x20
    16a2:	8f 8f       	std	Y+31, r24	; 0x1f
    16a4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    16a6:	98 a1       	ldd	r25, Y+32	; 0x20
    16a8:	01 97       	sbiw	r24, 0x01	; 1
    16aa:	f1 f7       	brne	.-4      	; 0x16a8 <H_LCD_Vid_Int+0x2da>
    16ac:	98 a3       	std	Y+32, r25	; 0x20
    16ae:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16b0:	89 a1       	ldd	r24, Y+33	; 0x21
    16b2:	9a a1       	ldd	r25, Y+34	; 0x22
    16b4:	01 97       	sbiw	r24, 0x01	; 1
    16b6:	9a a3       	std	Y+34, r25	; 0x22
    16b8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16ba:	89 a1       	ldd	r24, Y+33	; 0x21
    16bc:	9a a1       	ldd	r25, Y+34	; 0x22
    16be:	00 97       	sbiw	r24, 0x00	; 0
    16c0:	69 f7       	brne	.-38     	; 0x169c <H_LCD_Vid_Int+0x2ce>
    16c2:	14 c0       	rjmp	.+40     	; 0x16ec <H_LCD_Vid_Int+0x31e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16c4:	6b a1       	ldd	r22, Y+35	; 0x23
    16c6:	7c a1       	ldd	r23, Y+36	; 0x24
    16c8:	8d a1       	ldd	r24, Y+37	; 0x25
    16ca:	9e a1       	ldd	r25, Y+38	; 0x26
    16cc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16d0:	dc 01       	movw	r26, r24
    16d2:	cb 01       	movw	r24, r22
    16d4:	9a a3       	std	Y+34, r25	; 0x22
    16d6:	89 a3       	std	Y+33, r24	; 0x21
    16d8:	89 a1       	ldd	r24, Y+33	; 0x21
    16da:	9a a1       	ldd	r25, Y+34	; 0x22
    16dc:	9e 8f       	std	Y+30, r25	; 0x1e
    16de:	8d 8f       	std	Y+29, r24	; 0x1d
    16e0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    16e2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    16e4:	01 97       	sbiw	r24, 0x01	; 1
    16e6:	f1 f7       	brne	.-4      	; 0x16e4 <H_LCD_Vid_Int+0x316>
    16e8:	9e 8f       	std	Y+30, r25	; 0x1e
    16ea:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	H_LCD_Vid_Wrt_Com(CLEAR_DISPLAY);
    16ec:	81 e0       	ldi	r24, 0x01	; 1
    16ee:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <H_LCD_Vid_Wrt_Com>
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	a0 e0       	ldi	r26, 0x00	; 0
    16f8:	b0 e4       	ldi	r27, 0x40	; 64
    16fa:	89 8f       	std	Y+25, r24	; 0x19
    16fc:	9a 8f       	std	Y+26, r25	; 0x1a
    16fe:	ab 8f       	std	Y+27, r26	; 0x1b
    1700:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1702:	69 8d       	ldd	r22, Y+25	; 0x19
    1704:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1706:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1708:	9c 8d       	ldd	r25, Y+28	; 0x1c
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	30 e0       	ldi	r19, 0x00	; 0
    170e:	4a ef       	ldi	r20, 0xFA	; 250
    1710:	54 e4       	ldi	r21, 0x44	; 68
    1712:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1716:	dc 01       	movw	r26, r24
    1718:	cb 01       	movw	r24, r22
    171a:	8d 8b       	std	Y+21, r24	; 0x15
    171c:	9e 8b       	std	Y+22, r25	; 0x16
    171e:	af 8b       	std	Y+23, r26	; 0x17
    1720:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1722:	6d 89       	ldd	r22, Y+21	; 0x15
    1724:	7e 89       	ldd	r23, Y+22	; 0x16
    1726:	8f 89       	ldd	r24, Y+23	; 0x17
    1728:	98 8d       	ldd	r25, Y+24	; 0x18
    172a:	20 e0       	ldi	r18, 0x00	; 0
    172c:	30 e0       	ldi	r19, 0x00	; 0
    172e:	40 e8       	ldi	r20, 0x80	; 128
    1730:	5f e3       	ldi	r21, 0x3F	; 63
    1732:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1736:	88 23       	and	r24, r24
    1738:	2c f4       	brge	.+10     	; 0x1744 <H_LCD_Vid_Int+0x376>
		__ticks = 1;
    173a:	81 e0       	ldi	r24, 0x01	; 1
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	9c 8b       	std	Y+20, r25	; 0x14
    1740:	8b 8b       	std	Y+19, r24	; 0x13
    1742:	3f c0       	rjmp	.+126    	; 0x17c2 <H_LCD_Vid_Int+0x3f4>
	else if (__tmp > 65535)
    1744:	6d 89       	ldd	r22, Y+21	; 0x15
    1746:	7e 89       	ldd	r23, Y+22	; 0x16
    1748:	8f 89       	ldd	r24, Y+23	; 0x17
    174a:	98 8d       	ldd	r25, Y+24	; 0x18
    174c:	20 e0       	ldi	r18, 0x00	; 0
    174e:	3f ef       	ldi	r19, 0xFF	; 255
    1750:	4f e7       	ldi	r20, 0x7F	; 127
    1752:	57 e4       	ldi	r21, 0x47	; 71
    1754:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1758:	18 16       	cp	r1, r24
    175a:	4c f5       	brge	.+82     	; 0x17ae <H_LCD_Vid_Int+0x3e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    175c:	69 8d       	ldd	r22, Y+25	; 0x19
    175e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1760:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1762:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1764:	20 e0       	ldi	r18, 0x00	; 0
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	40 e2       	ldi	r20, 0x20	; 32
    176a:	51 e4       	ldi	r21, 0x41	; 65
    176c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1770:	dc 01       	movw	r26, r24
    1772:	cb 01       	movw	r24, r22
    1774:	bc 01       	movw	r22, r24
    1776:	cd 01       	movw	r24, r26
    1778:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    177c:	dc 01       	movw	r26, r24
    177e:	cb 01       	movw	r24, r22
    1780:	9c 8b       	std	Y+20, r25	; 0x14
    1782:	8b 8b       	std	Y+19, r24	; 0x13
    1784:	0f c0       	rjmp	.+30     	; 0x17a4 <H_LCD_Vid_Int+0x3d6>
    1786:	88 ec       	ldi	r24, 0xC8	; 200
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	9a 8b       	std	Y+18, r25	; 0x12
    178c:	89 8b       	std	Y+17, r24	; 0x11
    178e:	89 89       	ldd	r24, Y+17	; 0x11
    1790:	9a 89       	ldd	r25, Y+18	; 0x12
    1792:	01 97       	sbiw	r24, 0x01	; 1
    1794:	f1 f7       	brne	.-4      	; 0x1792 <H_LCD_Vid_Int+0x3c4>
    1796:	9a 8b       	std	Y+18, r25	; 0x12
    1798:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    179a:	8b 89       	ldd	r24, Y+19	; 0x13
    179c:	9c 89       	ldd	r25, Y+20	; 0x14
    179e:	01 97       	sbiw	r24, 0x01	; 1
    17a0:	9c 8b       	std	Y+20, r25	; 0x14
    17a2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17a4:	8b 89       	ldd	r24, Y+19	; 0x13
    17a6:	9c 89       	ldd	r25, Y+20	; 0x14
    17a8:	00 97       	sbiw	r24, 0x00	; 0
    17aa:	69 f7       	brne	.-38     	; 0x1786 <H_LCD_Vid_Int+0x3b8>
    17ac:	14 c0       	rjmp	.+40     	; 0x17d6 <H_LCD_Vid_Int+0x408>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17ae:	6d 89       	ldd	r22, Y+21	; 0x15
    17b0:	7e 89       	ldd	r23, Y+22	; 0x16
    17b2:	8f 89       	ldd	r24, Y+23	; 0x17
    17b4:	98 8d       	ldd	r25, Y+24	; 0x18
    17b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17ba:	dc 01       	movw	r26, r24
    17bc:	cb 01       	movw	r24, r22
    17be:	9c 8b       	std	Y+20, r25	; 0x14
    17c0:	8b 8b       	std	Y+19, r24	; 0x13
    17c2:	8b 89       	ldd	r24, Y+19	; 0x13
    17c4:	9c 89       	ldd	r25, Y+20	; 0x14
    17c6:	98 8b       	std	Y+16, r25	; 0x10
    17c8:	8f 87       	std	Y+15, r24	; 0x0f
    17ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    17cc:	98 89       	ldd	r25, Y+16	; 0x10
    17ce:	01 97       	sbiw	r24, 0x01	; 1
    17d0:	f1 f7       	brne	.-4      	; 0x17ce <H_LCD_Vid_Int+0x400>
    17d2:	98 8b       	std	Y+16, r25	; 0x10
    17d4:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	H_LCD_Vid_Wrt_Com(ENTRY_MODE);
    17d6:	86 e0       	ldi	r24, 0x06	; 6
    17d8:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <H_LCD_Vid_Wrt_Com>
    17dc:	80 e0       	ldi	r24, 0x00	; 0
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	a0 e0       	ldi	r26, 0x00	; 0
    17e2:	b0 e4       	ldi	r27, 0x40	; 64
    17e4:	8b 87       	std	Y+11, r24	; 0x0b
    17e6:	9c 87       	std	Y+12, r25	; 0x0c
    17e8:	ad 87       	std	Y+13, r26	; 0x0d
    17ea:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    17ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    17f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    17f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    17f4:	20 e0       	ldi	r18, 0x00	; 0
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	4a ef       	ldi	r20, 0xFA	; 250
    17fa:	54 e4       	ldi	r21, 0x44	; 68
    17fc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1800:	dc 01       	movw	r26, r24
    1802:	cb 01       	movw	r24, r22
    1804:	8f 83       	std	Y+7, r24	; 0x07
    1806:	98 87       	std	Y+8, r25	; 0x08
    1808:	a9 87       	std	Y+9, r26	; 0x09
    180a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    180c:	6f 81       	ldd	r22, Y+7	; 0x07
    180e:	78 85       	ldd	r23, Y+8	; 0x08
    1810:	89 85       	ldd	r24, Y+9	; 0x09
    1812:	9a 85       	ldd	r25, Y+10	; 0x0a
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	40 e8       	ldi	r20, 0x80	; 128
    181a:	5f e3       	ldi	r21, 0x3F	; 63
    181c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1820:	88 23       	and	r24, r24
    1822:	2c f4       	brge	.+10     	; 0x182e <H_LCD_Vid_Int+0x460>
		__ticks = 1;
    1824:	81 e0       	ldi	r24, 0x01	; 1
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	9e 83       	std	Y+6, r25	; 0x06
    182a:	8d 83       	std	Y+5, r24	; 0x05
    182c:	3f c0       	rjmp	.+126    	; 0x18ac <H_LCD_Vid_Int+0x4de>
	else if (__tmp > 65535)
    182e:	6f 81       	ldd	r22, Y+7	; 0x07
    1830:	78 85       	ldd	r23, Y+8	; 0x08
    1832:	89 85       	ldd	r24, Y+9	; 0x09
    1834:	9a 85       	ldd	r25, Y+10	; 0x0a
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	3f ef       	ldi	r19, 0xFF	; 255
    183a:	4f e7       	ldi	r20, 0x7F	; 127
    183c:	57 e4       	ldi	r21, 0x47	; 71
    183e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1842:	18 16       	cp	r1, r24
    1844:	4c f5       	brge	.+82     	; 0x1898 <H_LCD_Vid_Int+0x4ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1846:	6b 85       	ldd	r22, Y+11	; 0x0b
    1848:	7c 85       	ldd	r23, Y+12	; 0x0c
    184a:	8d 85       	ldd	r24, Y+13	; 0x0d
    184c:	9e 85       	ldd	r25, Y+14	; 0x0e
    184e:	20 e0       	ldi	r18, 0x00	; 0
    1850:	30 e0       	ldi	r19, 0x00	; 0
    1852:	40 e2       	ldi	r20, 0x20	; 32
    1854:	51 e4       	ldi	r21, 0x41	; 65
    1856:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    185a:	dc 01       	movw	r26, r24
    185c:	cb 01       	movw	r24, r22
    185e:	bc 01       	movw	r22, r24
    1860:	cd 01       	movw	r24, r26
    1862:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	9e 83       	std	Y+6, r25	; 0x06
    186c:	8d 83       	std	Y+5, r24	; 0x05
    186e:	0f c0       	rjmp	.+30     	; 0x188e <H_LCD_Vid_Int+0x4c0>
    1870:	88 ec       	ldi	r24, 0xC8	; 200
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	9c 83       	std	Y+4, r25	; 0x04
    1876:	8b 83       	std	Y+3, r24	; 0x03
    1878:	8b 81       	ldd	r24, Y+3	; 0x03
    187a:	9c 81       	ldd	r25, Y+4	; 0x04
    187c:	01 97       	sbiw	r24, 0x01	; 1
    187e:	f1 f7       	brne	.-4      	; 0x187c <H_LCD_Vid_Int+0x4ae>
    1880:	9c 83       	std	Y+4, r25	; 0x04
    1882:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1884:	8d 81       	ldd	r24, Y+5	; 0x05
    1886:	9e 81       	ldd	r25, Y+6	; 0x06
    1888:	01 97       	sbiw	r24, 0x01	; 1
    188a:	9e 83       	std	Y+6, r25	; 0x06
    188c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    188e:	8d 81       	ldd	r24, Y+5	; 0x05
    1890:	9e 81       	ldd	r25, Y+6	; 0x06
    1892:	00 97       	sbiw	r24, 0x00	; 0
    1894:	69 f7       	brne	.-38     	; 0x1870 <H_LCD_Vid_Int+0x4a2>
    1896:	14 c0       	rjmp	.+40     	; 0x18c0 <H_LCD_Vid_Int+0x4f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1898:	6f 81       	ldd	r22, Y+7	; 0x07
    189a:	78 85       	ldd	r23, Y+8	; 0x08
    189c:	89 85       	ldd	r24, Y+9	; 0x09
    189e:	9a 85       	ldd	r25, Y+10	; 0x0a
    18a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18a4:	dc 01       	movw	r26, r24
    18a6:	cb 01       	movw	r24, r22
    18a8:	9e 83       	std	Y+6, r25	; 0x06
    18aa:	8d 83       	std	Y+5, r24	; 0x05
    18ac:	8d 81       	ldd	r24, Y+5	; 0x05
    18ae:	9e 81       	ldd	r25, Y+6	; 0x06
    18b0:	9a 83       	std	Y+2, r25	; 0x02
    18b2:	89 83       	std	Y+1, r24	; 0x01
    18b4:	89 81       	ldd	r24, Y+1	; 0x01
    18b6:	9a 81       	ldd	r25, Y+2	; 0x02
    18b8:	01 97       	sbiw	r24, 0x01	; 1
    18ba:	f1 f7       	brne	.-4      	; 0x18b8 <H_LCD_Vid_Int+0x4ea>
    18bc:	9a 83       	std	Y+2, r25	; 0x02
    18be:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

}
    18c0:	ca 5b       	subi	r28, 0xBA	; 186
    18c2:	df 4f       	sbci	r29, 0xFF	; 255
    18c4:	0f b6       	in	r0, 0x3f	; 63
    18c6:	f8 94       	cli
    18c8:	de bf       	out	0x3e, r29	; 62
    18ca:	0f be       	out	0x3f, r0	; 63
    18cc:	cd bf       	out	0x3d, r28	; 61
    18ce:	cf 91       	pop	r28
    18d0:	df 91       	pop	r29
    18d2:	1f 91       	pop	r17
    18d4:	0f 91       	pop	r16
    18d6:	08 95       	ret

000018d8 <H_LCD_Vid_Wrt_CHr>:

/****TO WRITE on lcd you should determine if you want write command (Rs=0) or write data (Rs=1)****/

void H_LCD_Vid_Wrt_CHr(u8 Copy_u8_chr)
{
    18d8:	df 93       	push	r29
    18da:	cf 93       	push	r28
    18dc:	cd b7       	in	r28, 0x3d	; 61
    18de:	de b7       	in	r29, 0x3e	; 62
    18e0:	ab 97       	sbiw	r28, 0x2b	; 43
    18e2:	0f b6       	in	r0, 0x3f	; 63
    18e4:	f8 94       	cli
    18e6:	de bf       	out	0x3e, r29	; 62
    18e8:	0f be       	out	0x3f, r0	; 63
    18ea:	cd bf       	out	0x3d, r28	; 61
    18ec:	8b a7       	std	Y+43, r24	; 0x2b
	/*SET RS AS HIGH FOR DATA REGISTER */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RS,M_DIO_HIGH);
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	41 e0       	ldi	r20, 0x01	; 1
    18f4:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>

	/* SET RW PIN AS LOW TO WRITE */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RW,M_DIO_LOW);
    18f8:	81 e0       	ldi	r24, 0x01	; 1
    18fa:	61 e0       	ldi	r22, 0x01	; 1
    18fc:	40 e0       	ldi	r20, 0x00	; 0
    18fe:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>


	/********to write data E must in falling and send data*********/

	/*SET E AS HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1902:	81 e0       	ldi	r24, 0x01	; 1
    1904:	62 e0       	ldi	r22, 0x02	; 2
    1906:	41 e0       	ldi	r20, 0x01	; 1
    1908:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>

	/*SEND DATA */
	M_DIO_Vid_WrtPortVal(LCD_Data_Port,Copy_u8_chr);
    190c:	80 e0       	ldi	r24, 0x00	; 0
    190e:	6b a5       	ldd	r22, Y+43	; 0x2b
    1910:	0e 94 48 09 	call	0x1290	; 0x1290 <M_DIO_Vid_WrtPortVal>
    1914:	80 e0       	ldi	r24, 0x00	; 0
    1916:	90 e0       	ldi	r25, 0x00	; 0
    1918:	a0 e2       	ldi	r26, 0x20	; 32
    191a:	b1 e4       	ldi	r27, 0x41	; 65
    191c:	8f a3       	std	Y+39, r24	; 0x27
    191e:	98 a7       	std	Y+40, r25	; 0x28
    1920:	a9 a7       	std	Y+41, r26	; 0x29
    1922:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1924:	6f a1       	ldd	r22, Y+39	; 0x27
    1926:	78 a5       	ldd	r23, Y+40	; 0x28
    1928:	89 a5       	ldd	r24, Y+41	; 0x29
    192a:	9a a5       	ldd	r25, Y+42	; 0x2a
    192c:	20 e0       	ldi	r18, 0x00	; 0
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	4a ef       	ldi	r20, 0xFA	; 250
    1932:	54 e4       	ldi	r21, 0x44	; 68
    1934:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1938:	dc 01       	movw	r26, r24
    193a:	cb 01       	movw	r24, r22
    193c:	8b a3       	std	Y+35, r24	; 0x23
    193e:	9c a3       	std	Y+36, r25	; 0x24
    1940:	ad a3       	std	Y+37, r26	; 0x25
    1942:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1944:	6b a1       	ldd	r22, Y+35	; 0x23
    1946:	7c a1       	ldd	r23, Y+36	; 0x24
    1948:	8d a1       	ldd	r24, Y+37	; 0x25
    194a:	9e a1       	ldd	r25, Y+38	; 0x26
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	40 e8       	ldi	r20, 0x80	; 128
    1952:	5f e3       	ldi	r21, 0x3F	; 63
    1954:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1958:	88 23       	and	r24, r24
    195a:	2c f4       	brge	.+10     	; 0x1966 <H_LCD_Vid_Wrt_CHr+0x8e>
		__ticks = 1;
    195c:	81 e0       	ldi	r24, 0x01	; 1
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	9a a3       	std	Y+34, r25	; 0x22
    1962:	89 a3       	std	Y+33, r24	; 0x21
    1964:	3f c0       	rjmp	.+126    	; 0x19e4 <H_LCD_Vid_Wrt_CHr+0x10c>
	else if (__tmp > 65535)
    1966:	6b a1       	ldd	r22, Y+35	; 0x23
    1968:	7c a1       	ldd	r23, Y+36	; 0x24
    196a:	8d a1       	ldd	r24, Y+37	; 0x25
    196c:	9e a1       	ldd	r25, Y+38	; 0x26
    196e:	20 e0       	ldi	r18, 0x00	; 0
    1970:	3f ef       	ldi	r19, 0xFF	; 255
    1972:	4f e7       	ldi	r20, 0x7F	; 127
    1974:	57 e4       	ldi	r21, 0x47	; 71
    1976:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    197a:	18 16       	cp	r1, r24
    197c:	4c f5       	brge	.+82     	; 0x19d0 <H_LCD_Vid_Wrt_CHr+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    197e:	6f a1       	ldd	r22, Y+39	; 0x27
    1980:	78 a5       	ldd	r23, Y+40	; 0x28
    1982:	89 a5       	ldd	r24, Y+41	; 0x29
    1984:	9a a5       	ldd	r25, Y+42	; 0x2a
    1986:	20 e0       	ldi	r18, 0x00	; 0
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	40 e2       	ldi	r20, 0x20	; 32
    198c:	51 e4       	ldi	r21, 0x41	; 65
    198e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1992:	dc 01       	movw	r26, r24
    1994:	cb 01       	movw	r24, r22
    1996:	bc 01       	movw	r22, r24
    1998:	cd 01       	movw	r24, r26
    199a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    199e:	dc 01       	movw	r26, r24
    19a0:	cb 01       	movw	r24, r22
    19a2:	9a a3       	std	Y+34, r25	; 0x22
    19a4:	89 a3       	std	Y+33, r24	; 0x21
    19a6:	0f c0       	rjmp	.+30     	; 0x19c6 <H_LCD_Vid_Wrt_CHr+0xee>
    19a8:	88 ec       	ldi	r24, 0xC8	; 200
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	98 a3       	std	Y+32, r25	; 0x20
    19ae:	8f 8f       	std	Y+31, r24	; 0x1f
    19b0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    19b2:	98 a1       	ldd	r25, Y+32	; 0x20
    19b4:	01 97       	sbiw	r24, 0x01	; 1
    19b6:	f1 f7       	brne	.-4      	; 0x19b4 <H_LCD_Vid_Wrt_CHr+0xdc>
    19b8:	98 a3       	std	Y+32, r25	; 0x20
    19ba:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19bc:	89 a1       	ldd	r24, Y+33	; 0x21
    19be:	9a a1       	ldd	r25, Y+34	; 0x22
    19c0:	01 97       	sbiw	r24, 0x01	; 1
    19c2:	9a a3       	std	Y+34, r25	; 0x22
    19c4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c6:	89 a1       	ldd	r24, Y+33	; 0x21
    19c8:	9a a1       	ldd	r25, Y+34	; 0x22
    19ca:	00 97       	sbiw	r24, 0x00	; 0
    19cc:	69 f7       	brne	.-38     	; 0x19a8 <H_LCD_Vid_Wrt_CHr+0xd0>
    19ce:	14 c0       	rjmp	.+40     	; 0x19f8 <H_LCD_Vid_Wrt_CHr+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d0:	6b a1       	ldd	r22, Y+35	; 0x23
    19d2:	7c a1       	ldd	r23, Y+36	; 0x24
    19d4:	8d a1       	ldd	r24, Y+37	; 0x25
    19d6:	9e a1       	ldd	r25, Y+38	; 0x26
    19d8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19dc:	dc 01       	movw	r26, r24
    19de:	cb 01       	movw	r24, r22
    19e0:	9a a3       	std	Y+34, r25	; 0x22
    19e2:	89 a3       	std	Y+33, r24	; 0x21
    19e4:	89 a1       	ldd	r24, Y+33	; 0x21
    19e6:	9a a1       	ldd	r25, Y+34	; 0x22
    19e8:	9e 8f       	std	Y+30, r25	; 0x1e
    19ea:	8d 8f       	std	Y+29, r24	; 0x1d
    19ec:	8d 8d       	ldd	r24, Y+29	; 0x1d
    19ee:	9e 8d       	ldd	r25, Y+30	; 0x1e
    19f0:	01 97       	sbiw	r24, 0x01	; 1
    19f2:	f1 f7       	brne	.-4      	; 0x19f0 <H_LCD_Vid_Wrt_CHr+0x118>
    19f4:	9e 8f       	std	Y+30, r25	; 0x1e
    19f6:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);

	/*set E low*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_LOW);
    19f8:	81 e0       	ldi	r24, 0x01	; 1
    19fa:	62 e0       	ldi	r22, 0x02	; 2
    19fc:	40 e0       	ldi	r20, 0x00	; 0
    19fe:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	a0 e2       	ldi	r26, 0x20	; 32
    1a08:	b1 e4       	ldi	r27, 0x41	; 65
    1a0a:	89 8f       	std	Y+25, r24	; 0x19
    1a0c:	9a 8f       	std	Y+26, r25	; 0x1a
    1a0e:	ab 8f       	std	Y+27, r26	; 0x1b
    1a10:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a12:	69 8d       	ldd	r22, Y+25	; 0x19
    1a14:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a16:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a18:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a1a:	20 e0       	ldi	r18, 0x00	; 0
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	4a ef       	ldi	r20, 0xFA	; 250
    1a20:	54 e4       	ldi	r21, 0x44	; 68
    1a22:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a26:	dc 01       	movw	r26, r24
    1a28:	cb 01       	movw	r24, r22
    1a2a:	8d 8b       	std	Y+21, r24	; 0x15
    1a2c:	9e 8b       	std	Y+22, r25	; 0x16
    1a2e:	af 8b       	std	Y+23, r26	; 0x17
    1a30:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1a32:	6d 89       	ldd	r22, Y+21	; 0x15
    1a34:	7e 89       	ldd	r23, Y+22	; 0x16
    1a36:	8f 89       	ldd	r24, Y+23	; 0x17
    1a38:	98 8d       	ldd	r25, Y+24	; 0x18
    1a3a:	20 e0       	ldi	r18, 0x00	; 0
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	40 e8       	ldi	r20, 0x80	; 128
    1a40:	5f e3       	ldi	r21, 0x3F	; 63
    1a42:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1a46:	88 23       	and	r24, r24
    1a48:	2c f4       	brge	.+10     	; 0x1a54 <H_LCD_Vid_Wrt_CHr+0x17c>
		__ticks = 1;
    1a4a:	81 e0       	ldi	r24, 0x01	; 1
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	9c 8b       	std	Y+20, r25	; 0x14
    1a50:	8b 8b       	std	Y+19, r24	; 0x13
    1a52:	3f c0       	rjmp	.+126    	; 0x1ad2 <H_LCD_Vid_Wrt_CHr+0x1fa>
	else if (__tmp > 65535)
    1a54:	6d 89       	ldd	r22, Y+21	; 0x15
    1a56:	7e 89       	ldd	r23, Y+22	; 0x16
    1a58:	8f 89       	ldd	r24, Y+23	; 0x17
    1a5a:	98 8d       	ldd	r25, Y+24	; 0x18
    1a5c:	20 e0       	ldi	r18, 0x00	; 0
    1a5e:	3f ef       	ldi	r19, 0xFF	; 255
    1a60:	4f e7       	ldi	r20, 0x7F	; 127
    1a62:	57 e4       	ldi	r21, 0x47	; 71
    1a64:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1a68:	18 16       	cp	r1, r24
    1a6a:	4c f5       	brge	.+82     	; 0x1abe <H_LCD_Vid_Wrt_CHr+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a6c:	69 8d       	ldd	r22, Y+25	; 0x19
    1a6e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a70:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a72:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	40 e2       	ldi	r20, 0x20	; 32
    1a7a:	51 e4       	ldi	r21, 0x41	; 65
    1a7c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a80:	dc 01       	movw	r26, r24
    1a82:	cb 01       	movw	r24, r22
    1a84:	bc 01       	movw	r22, r24
    1a86:	cd 01       	movw	r24, r26
    1a88:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a8c:	dc 01       	movw	r26, r24
    1a8e:	cb 01       	movw	r24, r22
    1a90:	9c 8b       	std	Y+20, r25	; 0x14
    1a92:	8b 8b       	std	Y+19, r24	; 0x13
    1a94:	0f c0       	rjmp	.+30     	; 0x1ab4 <H_LCD_Vid_Wrt_CHr+0x1dc>
    1a96:	88 ec       	ldi	r24, 0xC8	; 200
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	9a 8b       	std	Y+18, r25	; 0x12
    1a9c:	89 8b       	std	Y+17, r24	; 0x11
    1a9e:	89 89       	ldd	r24, Y+17	; 0x11
    1aa0:	9a 89       	ldd	r25, Y+18	; 0x12
    1aa2:	01 97       	sbiw	r24, 0x01	; 1
    1aa4:	f1 f7       	brne	.-4      	; 0x1aa2 <H_LCD_Vid_Wrt_CHr+0x1ca>
    1aa6:	9a 8b       	std	Y+18, r25	; 0x12
    1aa8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aaa:	8b 89       	ldd	r24, Y+19	; 0x13
    1aac:	9c 89       	ldd	r25, Y+20	; 0x14
    1aae:	01 97       	sbiw	r24, 0x01	; 1
    1ab0:	9c 8b       	std	Y+20, r25	; 0x14
    1ab2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ab4:	8b 89       	ldd	r24, Y+19	; 0x13
    1ab6:	9c 89       	ldd	r25, Y+20	; 0x14
    1ab8:	00 97       	sbiw	r24, 0x00	; 0
    1aba:	69 f7       	brne	.-38     	; 0x1a96 <H_LCD_Vid_Wrt_CHr+0x1be>
    1abc:	14 c0       	rjmp	.+40     	; 0x1ae6 <H_LCD_Vid_Wrt_CHr+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1abe:	6d 89       	ldd	r22, Y+21	; 0x15
    1ac0:	7e 89       	ldd	r23, Y+22	; 0x16
    1ac2:	8f 89       	ldd	r24, Y+23	; 0x17
    1ac4:	98 8d       	ldd	r25, Y+24	; 0x18
    1ac6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1aca:	dc 01       	movw	r26, r24
    1acc:	cb 01       	movw	r24, r22
    1ace:	9c 8b       	std	Y+20, r25	; 0x14
    1ad0:	8b 8b       	std	Y+19, r24	; 0x13
    1ad2:	8b 89       	ldd	r24, Y+19	; 0x13
    1ad4:	9c 89       	ldd	r25, Y+20	; 0x14
    1ad6:	98 8b       	std	Y+16, r25	; 0x10
    1ad8:	8f 87       	std	Y+15, r24	; 0x0f
    1ada:	8f 85       	ldd	r24, Y+15	; 0x0f
    1adc:	98 89       	ldd	r25, Y+16	; 0x10
    1ade:	01 97       	sbiw	r24, 0x01	; 1
    1ae0:	f1 f7       	brne	.-4      	; 0x1ade <H_LCD_Vid_Wrt_CHr+0x206>
    1ae2:	98 8b       	std	Y+16, r25	; 0x10
    1ae4:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);

	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1ae6:	81 e0       	ldi	r24, 0x01	; 1
    1ae8:	62 e0       	ldi	r22, 0x02	; 2
    1aea:	41 e0       	ldi	r20, 0x01	; 1
    1aec:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>
    1af0:	80 e0       	ldi	r24, 0x00	; 0
    1af2:	90 e0       	ldi	r25, 0x00	; 0
    1af4:	a0 e2       	ldi	r26, 0x20	; 32
    1af6:	b1 e4       	ldi	r27, 0x41	; 65
    1af8:	8b 87       	std	Y+11, r24	; 0x0b
    1afa:	9c 87       	std	Y+12, r25	; 0x0c
    1afc:	ad 87       	std	Y+13, r26	; 0x0d
    1afe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b00:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b02:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b04:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b06:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b08:	20 e0       	ldi	r18, 0x00	; 0
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	4a ef       	ldi	r20, 0xFA	; 250
    1b0e:	54 e4       	ldi	r21, 0x44	; 68
    1b10:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b14:	dc 01       	movw	r26, r24
    1b16:	cb 01       	movw	r24, r22
    1b18:	8f 83       	std	Y+7, r24	; 0x07
    1b1a:	98 87       	std	Y+8, r25	; 0x08
    1b1c:	a9 87       	std	Y+9, r26	; 0x09
    1b1e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b20:	6f 81       	ldd	r22, Y+7	; 0x07
    1b22:	78 85       	ldd	r23, Y+8	; 0x08
    1b24:	89 85       	ldd	r24, Y+9	; 0x09
    1b26:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b28:	20 e0       	ldi	r18, 0x00	; 0
    1b2a:	30 e0       	ldi	r19, 0x00	; 0
    1b2c:	40 e8       	ldi	r20, 0x80	; 128
    1b2e:	5f e3       	ldi	r21, 0x3F	; 63
    1b30:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1b34:	88 23       	and	r24, r24
    1b36:	2c f4       	brge	.+10     	; 0x1b42 <H_LCD_Vid_Wrt_CHr+0x26a>
		__ticks = 1;
    1b38:	81 e0       	ldi	r24, 0x01	; 1
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	9e 83       	std	Y+6, r25	; 0x06
    1b3e:	8d 83       	std	Y+5, r24	; 0x05
    1b40:	3f c0       	rjmp	.+126    	; 0x1bc0 <H_LCD_Vid_Wrt_CHr+0x2e8>
	else if (__tmp > 65535)
    1b42:	6f 81       	ldd	r22, Y+7	; 0x07
    1b44:	78 85       	ldd	r23, Y+8	; 0x08
    1b46:	89 85       	ldd	r24, Y+9	; 0x09
    1b48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	3f ef       	ldi	r19, 0xFF	; 255
    1b4e:	4f e7       	ldi	r20, 0x7F	; 127
    1b50:	57 e4       	ldi	r21, 0x47	; 71
    1b52:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1b56:	18 16       	cp	r1, r24
    1b58:	4c f5       	brge	.+82     	; 0x1bac <H_LCD_Vid_Wrt_CHr+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b5a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b5c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b5e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b60:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b62:	20 e0       	ldi	r18, 0x00	; 0
    1b64:	30 e0       	ldi	r19, 0x00	; 0
    1b66:	40 e2       	ldi	r20, 0x20	; 32
    1b68:	51 e4       	ldi	r21, 0x41	; 65
    1b6a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b6e:	dc 01       	movw	r26, r24
    1b70:	cb 01       	movw	r24, r22
    1b72:	bc 01       	movw	r22, r24
    1b74:	cd 01       	movw	r24, r26
    1b76:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b7a:	dc 01       	movw	r26, r24
    1b7c:	cb 01       	movw	r24, r22
    1b7e:	9e 83       	std	Y+6, r25	; 0x06
    1b80:	8d 83       	std	Y+5, r24	; 0x05
    1b82:	0f c0       	rjmp	.+30     	; 0x1ba2 <H_LCD_Vid_Wrt_CHr+0x2ca>
    1b84:	88 ec       	ldi	r24, 0xC8	; 200
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	9c 83       	std	Y+4, r25	; 0x04
    1b8a:	8b 83       	std	Y+3, r24	; 0x03
    1b8c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b8e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b90:	01 97       	sbiw	r24, 0x01	; 1
    1b92:	f1 f7       	brne	.-4      	; 0x1b90 <H_LCD_Vid_Wrt_CHr+0x2b8>
    1b94:	9c 83       	std	Y+4, r25	; 0x04
    1b96:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b98:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b9c:	01 97       	sbiw	r24, 0x01	; 1
    1b9e:	9e 83       	std	Y+6, r25	; 0x06
    1ba0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ba2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ba4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ba6:	00 97       	sbiw	r24, 0x00	; 0
    1ba8:	69 f7       	brne	.-38     	; 0x1b84 <H_LCD_Vid_Wrt_CHr+0x2ac>
    1baa:	14 c0       	rjmp	.+40     	; 0x1bd4 <H_LCD_Vid_Wrt_CHr+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bac:	6f 81       	ldd	r22, Y+7	; 0x07
    1bae:	78 85       	ldd	r23, Y+8	; 0x08
    1bb0:	89 85       	ldd	r24, Y+9	; 0x09
    1bb2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bb4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bb8:	dc 01       	movw	r26, r24
    1bba:	cb 01       	movw	r24, r22
    1bbc:	9e 83       	std	Y+6, r25	; 0x06
    1bbe:	8d 83       	std	Y+5, r24	; 0x05
    1bc0:	8d 81       	ldd	r24, Y+5	; 0x05
    1bc2:	9e 81       	ldd	r25, Y+6	; 0x06
    1bc4:	9a 83       	std	Y+2, r25	; 0x02
    1bc6:	89 83       	std	Y+1, r24	; 0x01
    1bc8:	89 81       	ldd	r24, Y+1	; 0x01
    1bca:	9a 81       	ldd	r25, Y+2	; 0x02
    1bcc:	01 97       	sbiw	r24, 0x01	; 1
    1bce:	f1 f7       	brne	.-4      	; 0x1bcc <H_LCD_Vid_Wrt_CHr+0x2f4>
    1bd0:	9a 83       	std	Y+2, r25	; 0x02
    1bd2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    1bd4:	ab 96       	adiw	r28, 0x2b	; 43
    1bd6:	0f b6       	in	r0, 0x3f	; 63
    1bd8:	f8 94       	cli
    1bda:	de bf       	out	0x3e, r29	; 62
    1bdc:	0f be       	out	0x3f, r0	; 63
    1bde:	cd bf       	out	0x3d, r28	; 61
    1be0:	cf 91       	pop	r28
    1be2:	df 91       	pop	r29
    1be4:	08 95       	ret

00001be6 <H_LCD_Vid_Wrt_Str>:

void H_LCD_Vid_Wrt_Str(u8 *Ptr_u8_str)
{
    1be6:	df 93       	push	r29
    1be8:	cf 93       	push	r28
    1bea:	00 d0       	rcall	.+0      	; 0x1bec <H_LCD_Vid_Wrt_Str+0x6>
    1bec:	0f 92       	push	r0
    1bee:	cd b7       	in	r28, 0x3d	; 61
    1bf0:	de b7       	in	r29, 0x3e	; 62
    1bf2:	9b 83       	std	Y+3, r25	; 0x03
    1bf4:	8a 83       	std	Y+2, r24	; 0x02
	u8 local_u8_counter=0;
    1bf6:	19 82       	std	Y+1, r1	; 0x01
    1bf8:	0e c0       	rjmp	.+28     	; 0x1c16 <H_LCD_Vid_Wrt_Str+0x30>
	while(Ptr_u8_str[local_u8_counter]!= '\0')
	{
		H_LCD_Vid_Wrt_CHr(Ptr_u8_str[local_u8_counter]);
    1bfa:	89 81       	ldd	r24, Y+1	; 0x01
    1bfc:	28 2f       	mov	r18, r24
    1bfe:	30 e0       	ldi	r19, 0x00	; 0
    1c00:	8a 81       	ldd	r24, Y+2	; 0x02
    1c02:	9b 81       	ldd	r25, Y+3	; 0x03
    1c04:	fc 01       	movw	r30, r24
    1c06:	e2 0f       	add	r30, r18
    1c08:	f3 1f       	adc	r31, r19
    1c0a:	80 81       	ld	r24, Z
    1c0c:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <H_LCD_Vid_Wrt_CHr>
		local_u8_counter++;
    1c10:	89 81       	ldd	r24, Y+1	; 0x01
    1c12:	8f 5f       	subi	r24, 0xFF	; 255
    1c14:	89 83       	std	Y+1, r24	; 0x01
}

void H_LCD_Vid_Wrt_Str(u8 *Ptr_u8_str)
{
	u8 local_u8_counter=0;
	while(Ptr_u8_str[local_u8_counter]!= '\0')
    1c16:	89 81       	ldd	r24, Y+1	; 0x01
    1c18:	28 2f       	mov	r18, r24
    1c1a:	30 e0       	ldi	r19, 0x00	; 0
    1c1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c1e:	9b 81       	ldd	r25, Y+3	; 0x03
    1c20:	fc 01       	movw	r30, r24
    1c22:	e2 0f       	add	r30, r18
    1c24:	f3 1f       	adc	r31, r19
    1c26:	80 81       	ld	r24, Z
    1c28:	88 23       	and	r24, r24
    1c2a:	39 f7       	brne	.-50     	; 0x1bfa <H_LCD_Vid_Wrt_Str+0x14>
	{
		H_LCD_Vid_Wrt_CHr(Ptr_u8_str[local_u8_counter]);
		local_u8_counter++;
	}
}
    1c2c:	0f 90       	pop	r0
    1c2e:	0f 90       	pop	r0
    1c30:	0f 90       	pop	r0
    1c32:	cf 91       	pop	r28
    1c34:	df 91       	pop	r29
    1c36:	08 95       	ret

00001c38 <H_LCD_Vid_Wrt_Com>:

/****TO WRITE on lcd you should determine if you want write command (Rs=0) or write data (Rs=1)****/
void H_LCD_Vid_Wrt_Com(u8 Copy_u8_Com)
{
    1c38:	df 93       	push	r29
    1c3a:	cf 93       	push	r28
    1c3c:	cd b7       	in	r28, 0x3d	; 61
    1c3e:	de b7       	in	r29, 0x3e	; 62
    1c40:	ab 97       	sbiw	r28, 0x2b	; 43
    1c42:	0f b6       	in	r0, 0x3f	; 63
    1c44:	f8 94       	cli
    1c46:	de bf       	out	0x3e, r29	; 62
    1c48:	0f be       	out	0x3f, r0	; 63
    1c4a:	cd bf       	out	0x3d, r28	; 61
    1c4c:	8b a7       	std	Y+43, r24	; 0x2b
	/*SET RS AS HIGH FOR DATA REGISTER */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RS,M_DIO_LOW);
    1c4e:	81 e0       	ldi	r24, 0x01	; 1
    1c50:	60 e0       	ldi	r22, 0x00	; 0
    1c52:	40 e0       	ldi	r20, 0x00	; 0
    1c54:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>

	/* SET RW PIN AS LOW TO WRITE */
	M_DIO_Vid_wrtPinVal(LCD_control_Port,RW,M_DIO_LOW);
    1c58:	81 e0       	ldi	r24, 0x01	; 1
    1c5a:	61 e0       	ldi	r22, 0x01	; 1
    1c5c:	40 e0       	ldi	r20, 0x00	; 0
    1c5e:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>

	/*SET E AS HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1c62:	81 e0       	ldi	r24, 0x01	; 1
    1c64:	62 e0       	ldi	r22, 0x02	; 2
    1c66:	41 e0       	ldi	r20, 0x01	; 1
    1c68:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>

	/*SEND DATA */
	M_DIO_Vid_WrtPortVal(LCD_Data_Port,Copy_u8_Com);
    1c6c:	80 e0       	ldi	r24, 0x00	; 0
    1c6e:	6b a5       	ldd	r22, Y+43	; 0x2b
    1c70:	0e 94 48 09 	call	0x1290	; 0x1290 <M_DIO_Vid_WrtPortVal>
    1c74:	80 e0       	ldi	r24, 0x00	; 0
    1c76:	90 e0       	ldi	r25, 0x00	; 0
    1c78:	a0 e2       	ldi	r26, 0x20	; 32
    1c7a:	b1 e4       	ldi	r27, 0x41	; 65
    1c7c:	8f a3       	std	Y+39, r24	; 0x27
    1c7e:	98 a7       	std	Y+40, r25	; 0x28
    1c80:	a9 a7       	std	Y+41, r26	; 0x29
    1c82:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c84:	6f a1       	ldd	r22, Y+39	; 0x27
    1c86:	78 a5       	ldd	r23, Y+40	; 0x28
    1c88:	89 a5       	ldd	r24, Y+41	; 0x29
    1c8a:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c8c:	20 e0       	ldi	r18, 0x00	; 0
    1c8e:	30 e0       	ldi	r19, 0x00	; 0
    1c90:	4a ef       	ldi	r20, 0xFA	; 250
    1c92:	54 e4       	ldi	r21, 0x44	; 68
    1c94:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c98:	dc 01       	movw	r26, r24
    1c9a:	cb 01       	movw	r24, r22
    1c9c:	8b a3       	std	Y+35, r24	; 0x23
    1c9e:	9c a3       	std	Y+36, r25	; 0x24
    1ca0:	ad a3       	std	Y+37, r26	; 0x25
    1ca2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1ca4:	6b a1       	ldd	r22, Y+35	; 0x23
    1ca6:	7c a1       	ldd	r23, Y+36	; 0x24
    1ca8:	8d a1       	ldd	r24, Y+37	; 0x25
    1caa:	9e a1       	ldd	r25, Y+38	; 0x26
    1cac:	20 e0       	ldi	r18, 0x00	; 0
    1cae:	30 e0       	ldi	r19, 0x00	; 0
    1cb0:	40 e8       	ldi	r20, 0x80	; 128
    1cb2:	5f e3       	ldi	r21, 0x3F	; 63
    1cb4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1cb8:	88 23       	and	r24, r24
    1cba:	2c f4       	brge	.+10     	; 0x1cc6 <H_LCD_Vid_Wrt_Com+0x8e>
		__ticks = 1;
    1cbc:	81 e0       	ldi	r24, 0x01	; 1
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	9a a3       	std	Y+34, r25	; 0x22
    1cc2:	89 a3       	std	Y+33, r24	; 0x21
    1cc4:	3f c0       	rjmp	.+126    	; 0x1d44 <H_LCD_Vid_Wrt_Com+0x10c>
	else if (__tmp > 65535)
    1cc6:	6b a1       	ldd	r22, Y+35	; 0x23
    1cc8:	7c a1       	ldd	r23, Y+36	; 0x24
    1cca:	8d a1       	ldd	r24, Y+37	; 0x25
    1ccc:	9e a1       	ldd	r25, Y+38	; 0x26
    1cce:	20 e0       	ldi	r18, 0x00	; 0
    1cd0:	3f ef       	ldi	r19, 0xFF	; 255
    1cd2:	4f e7       	ldi	r20, 0x7F	; 127
    1cd4:	57 e4       	ldi	r21, 0x47	; 71
    1cd6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1cda:	18 16       	cp	r1, r24
    1cdc:	4c f5       	brge	.+82     	; 0x1d30 <H_LCD_Vid_Wrt_Com+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cde:	6f a1       	ldd	r22, Y+39	; 0x27
    1ce0:	78 a5       	ldd	r23, Y+40	; 0x28
    1ce2:	89 a5       	ldd	r24, Y+41	; 0x29
    1ce4:	9a a5       	ldd	r25, Y+42	; 0x2a
    1ce6:	20 e0       	ldi	r18, 0x00	; 0
    1ce8:	30 e0       	ldi	r19, 0x00	; 0
    1cea:	40 e2       	ldi	r20, 0x20	; 32
    1cec:	51 e4       	ldi	r21, 0x41	; 65
    1cee:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cf2:	dc 01       	movw	r26, r24
    1cf4:	cb 01       	movw	r24, r22
    1cf6:	bc 01       	movw	r22, r24
    1cf8:	cd 01       	movw	r24, r26
    1cfa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cfe:	dc 01       	movw	r26, r24
    1d00:	cb 01       	movw	r24, r22
    1d02:	9a a3       	std	Y+34, r25	; 0x22
    1d04:	89 a3       	std	Y+33, r24	; 0x21
    1d06:	0f c0       	rjmp	.+30     	; 0x1d26 <H_LCD_Vid_Wrt_Com+0xee>
    1d08:	88 ec       	ldi	r24, 0xC8	; 200
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	98 a3       	std	Y+32, r25	; 0x20
    1d0e:	8f 8f       	std	Y+31, r24	; 0x1f
    1d10:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d12:	98 a1       	ldd	r25, Y+32	; 0x20
    1d14:	01 97       	sbiw	r24, 0x01	; 1
    1d16:	f1 f7       	brne	.-4      	; 0x1d14 <H_LCD_Vid_Wrt_Com+0xdc>
    1d18:	98 a3       	std	Y+32, r25	; 0x20
    1d1a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d1c:	89 a1       	ldd	r24, Y+33	; 0x21
    1d1e:	9a a1       	ldd	r25, Y+34	; 0x22
    1d20:	01 97       	sbiw	r24, 0x01	; 1
    1d22:	9a a3       	std	Y+34, r25	; 0x22
    1d24:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d26:	89 a1       	ldd	r24, Y+33	; 0x21
    1d28:	9a a1       	ldd	r25, Y+34	; 0x22
    1d2a:	00 97       	sbiw	r24, 0x00	; 0
    1d2c:	69 f7       	brne	.-38     	; 0x1d08 <H_LCD_Vid_Wrt_Com+0xd0>
    1d2e:	14 c0       	rjmp	.+40     	; 0x1d58 <H_LCD_Vid_Wrt_Com+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d30:	6b a1       	ldd	r22, Y+35	; 0x23
    1d32:	7c a1       	ldd	r23, Y+36	; 0x24
    1d34:	8d a1       	ldd	r24, Y+37	; 0x25
    1d36:	9e a1       	ldd	r25, Y+38	; 0x26
    1d38:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d3c:	dc 01       	movw	r26, r24
    1d3e:	cb 01       	movw	r24, r22
    1d40:	9a a3       	std	Y+34, r25	; 0x22
    1d42:	89 a3       	std	Y+33, r24	; 0x21
    1d44:	89 a1       	ldd	r24, Y+33	; 0x21
    1d46:	9a a1       	ldd	r25, Y+34	; 0x22
    1d48:	9e 8f       	std	Y+30, r25	; 0x1e
    1d4a:	8d 8f       	std	Y+29, r24	; 0x1d
    1d4c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d4e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d50:	01 97       	sbiw	r24, 0x01	; 1
    1d52:	f1 f7       	brne	.-4      	; 0x1d50 <H_LCD_Vid_Wrt_Com+0x118>
    1d54:	9e 8f       	std	Y+30, r25	; 0x1e
    1d56:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);

	/*set E low*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_LOW);
    1d58:	81 e0       	ldi	r24, 0x01	; 1
    1d5a:	62 e0       	ldi	r22, 0x02	; 2
    1d5c:	40 e0       	ldi	r20, 0x00	; 0
    1d5e:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>
    1d62:	80 e0       	ldi	r24, 0x00	; 0
    1d64:	90 e0       	ldi	r25, 0x00	; 0
    1d66:	a0 e2       	ldi	r26, 0x20	; 32
    1d68:	b1 e4       	ldi	r27, 0x41	; 65
    1d6a:	89 8f       	std	Y+25, r24	; 0x19
    1d6c:	9a 8f       	std	Y+26, r25	; 0x1a
    1d6e:	ab 8f       	std	Y+27, r26	; 0x1b
    1d70:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d72:	69 8d       	ldd	r22, Y+25	; 0x19
    1d74:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d76:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d78:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d7a:	20 e0       	ldi	r18, 0x00	; 0
    1d7c:	30 e0       	ldi	r19, 0x00	; 0
    1d7e:	4a ef       	ldi	r20, 0xFA	; 250
    1d80:	54 e4       	ldi	r21, 0x44	; 68
    1d82:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d86:	dc 01       	movw	r26, r24
    1d88:	cb 01       	movw	r24, r22
    1d8a:	8d 8b       	std	Y+21, r24	; 0x15
    1d8c:	9e 8b       	std	Y+22, r25	; 0x16
    1d8e:	af 8b       	std	Y+23, r26	; 0x17
    1d90:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1d92:	6d 89       	ldd	r22, Y+21	; 0x15
    1d94:	7e 89       	ldd	r23, Y+22	; 0x16
    1d96:	8f 89       	ldd	r24, Y+23	; 0x17
    1d98:	98 8d       	ldd	r25, Y+24	; 0x18
    1d9a:	20 e0       	ldi	r18, 0x00	; 0
    1d9c:	30 e0       	ldi	r19, 0x00	; 0
    1d9e:	40 e8       	ldi	r20, 0x80	; 128
    1da0:	5f e3       	ldi	r21, 0x3F	; 63
    1da2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1da6:	88 23       	and	r24, r24
    1da8:	2c f4       	brge	.+10     	; 0x1db4 <H_LCD_Vid_Wrt_Com+0x17c>
		__ticks = 1;
    1daa:	81 e0       	ldi	r24, 0x01	; 1
    1dac:	90 e0       	ldi	r25, 0x00	; 0
    1dae:	9c 8b       	std	Y+20, r25	; 0x14
    1db0:	8b 8b       	std	Y+19, r24	; 0x13
    1db2:	3f c0       	rjmp	.+126    	; 0x1e32 <H_LCD_Vid_Wrt_Com+0x1fa>
	else if (__tmp > 65535)
    1db4:	6d 89       	ldd	r22, Y+21	; 0x15
    1db6:	7e 89       	ldd	r23, Y+22	; 0x16
    1db8:	8f 89       	ldd	r24, Y+23	; 0x17
    1dba:	98 8d       	ldd	r25, Y+24	; 0x18
    1dbc:	20 e0       	ldi	r18, 0x00	; 0
    1dbe:	3f ef       	ldi	r19, 0xFF	; 255
    1dc0:	4f e7       	ldi	r20, 0x7F	; 127
    1dc2:	57 e4       	ldi	r21, 0x47	; 71
    1dc4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1dc8:	18 16       	cp	r1, r24
    1dca:	4c f5       	brge	.+82     	; 0x1e1e <H_LCD_Vid_Wrt_Com+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dcc:	69 8d       	ldd	r22, Y+25	; 0x19
    1dce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1dd0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1dd2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dd4:	20 e0       	ldi	r18, 0x00	; 0
    1dd6:	30 e0       	ldi	r19, 0x00	; 0
    1dd8:	40 e2       	ldi	r20, 0x20	; 32
    1dda:	51 e4       	ldi	r21, 0x41	; 65
    1ddc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1de0:	dc 01       	movw	r26, r24
    1de2:	cb 01       	movw	r24, r22
    1de4:	bc 01       	movw	r22, r24
    1de6:	cd 01       	movw	r24, r26
    1de8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dec:	dc 01       	movw	r26, r24
    1dee:	cb 01       	movw	r24, r22
    1df0:	9c 8b       	std	Y+20, r25	; 0x14
    1df2:	8b 8b       	std	Y+19, r24	; 0x13
    1df4:	0f c0       	rjmp	.+30     	; 0x1e14 <H_LCD_Vid_Wrt_Com+0x1dc>
    1df6:	88 ec       	ldi	r24, 0xC8	; 200
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	9a 8b       	std	Y+18, r25	; 0x12
    1dfc:	89 8b       	std	Y+17, r24	; 0x11
    1dfe:	89 89       	ldd	r24, Y+17	; 0x11
    1e00:	9a 89       	ldd	r25, Y+18	; 0x12
    1e02:	01 97       	sbiw	r24, 0x01	; 1
    1e04:	f1 f7       	brne	.-4      	; 0x1e02 <H_LCD_Vid_Wrt_Com+0x1ca>
    1e06:	9a 8b       	std	Y+18, r25	; 0x12
    1e08:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e0a:	8b 89       	ldd	r24, Y+19	; 0x13
    1e0c:	9c 89       	ldd	r25, Y+20	; 0x14
    1e0e:	01 97       	sbiw	r24, 0x01	; 1
    1e10:	9c 8b       	std	Y+20, r25	; 0x14
    1e12:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e14:	8b 89       	ldd	r24, Y+19	; 0x13
    1e16:	9c 89       	ldd	r25, Y+20	; 0x14
    1e18:	00 97       	sbiw	r24, 0x00	; 0
    1e1a:	69 f7       	brne	.-38     	; 0x1df6 <H_LCD_Vid_Wrt_Com+0x1be>
    1e1c:	14 c0       	rjmp	.+40     	; 0x1e46 <H_LCD_Vid_Wrt_Com+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e1e:	6d 89       	ldd	r22, Y+21	; 0x15
    1e20:	7e 89       	ldd	r23, Y+22	; 0x16
    1e22:	8f 89       	ldd	r24, Y+23	; 0x17
    1e24:	98 8d       	ldd	r25, Y+24	; 0x18
    1e26:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e2a:	dc 01       	movw	r26, r24
    1e2c:	cb 01       	movw	r24, r22
    1e2e:	9c 8b       	std	Y+20, r25	; 0x14
    1e30:	8b 8b       	std	Y+19, r24	; 0x13
    1e32:	8b 89       	ldd	r24, Y+19	; 0x13
    1e34:	9c 89       	ldd	r25, Y+20	; 0x14
    1e36:	98 8b       	std	Y+16, r25	; 0x10
    1e38:	8f 87       	std	Y+15, r24	; 0x0f
    1e3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e3c:	98 89       	ldd	r25, Y+16	; 0x10
    1e3e:	01 97       	sbiw	r24, 0x01	; 1
    1e40:	f1 f7       	brne	.-4      	; 0x1e3e <H_LCD_Vid_Wrt_Com+0x206>
    1e42:	98 8b       	std	Y+16, r25	; 0x10
    1e44:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);

	/*set E HIGH*/
	M_DIO_Vid_wrtPinVal(LCD_control_Port,E,M_DIO_HIGH);
    1e46:	81 e0       	ldi	r24, 0x01	; 1
    1e48:	62 e0       	ldi	r22, 0x02	; 2
    1e4a:	41 e0       	ldi	r20, 0x01	; 1
    1e4c:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <M_DIO_Vid_wrtPinVal>
    1e50:	80 e0       	ldi	r24, 0x00	; 0
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	a0 e2       	ldi	r26, 0x20	; 32
    1e56:	b1 e4       	ldi	r27, 0x41	; 65
    1e58:	8b 87       	std	Y+11, r24	; 0x0b
    1e5a:	9c 87       	std	Y+12, r25	; 0x0c
    1e5c:	ad 87       	std	Y+13, r26	; 0x0d
    1e5e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e60:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e62:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e64:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e66:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e68:	20 e0       	ldi	r18, 0x00	; 0
    1e6a:	30 e0       	ldi	r19, 0x00	; 0
    1e6c:	4a ef       	ldi	r20, 0xFA	; 250
    1e6e:	54 e4       	ldi	r21, 0x44	; 68
    1e70:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e74:	dc 01       	movw	r26, r24
    1e76:	cb 01       	movw	r24, r22
    1e78:	8f 83       	std	Y+7, r24	; 0x07
    1e7a:	98 87       	std	Y+8, r25	; 0x08
    1e7c:	a9 87       	std	Y+9, r26	; 0x09
    1e7e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1e80:	6f 81       	ldd	r22, Y+7	; 0x07
    1e82:	78 85       	ldd	r23, Y+8	; 0x08
    1e84:	89 85       	ldd	r24, Y+9	; 0x09
    1e86:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e88:	20 e0       	ldi	r18, 0x00	; 0
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	40 e8       	ldi	r20, 0x80	; 128
    1e8e:	5f e3       	ldi	r21, 0x3F	; 63
    1e90:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1e94:	88 23       	and	r24, r24
    1e96:	2c f4       	brge	.+10     	; 0x1ea2 <H_LCD_Vid_Wrt_Com+0x26a>
		__ticks = 1;
    1e98:	81 e0       	ldi	r24, 0x01	; 1
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
    1e9c:	9e 83       	std	Y+6, r25	; 0x06
    1e9e:	8d 83       	std	Y+5, r24	; 0x05
    1ea0:	3f c0       	rjmp	.+126    	; 0x1f20 <H_LCD_Vid_Wrt_Com+0x2e8>
	else if (__tmp > 65535)
    1ea2:	6f 81       	ldd	r22, Y+7	; 0x07
    1ea4:	78 85       	ldd	r23, Y+8	; 0x08
    1ea6:	89 85       	ldd	r24, Y+9	; 0x09
    1ea8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1eaa:	20 e0       	ldi	r18, 0x00	; 0
    1eac:	3f ef       	ldi	r19, 0xFF	; 255
    1eae:	4f e7       	ldi	r20, 0x7F	; 127
    1eb0:	57 e4       	ldi	r21, 0x47	; 71
    1eb2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1eb6:	18 16       	cp	r1, r24
    1eb8:	4c f5       	brge	.+82     	; 0x1f0c <H_LCD_Vid_Wrt_Com+0x2d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1eba:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ebc:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ebe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ec0:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ec2:	20 e0       	ldi	r18, 0x00	; 0
    1ec4:	30 e0       	ldi	r19, 0x00	; 0
    1ec6:	40 e2       	ldi	r20, 0x20	; 32
    1ec8:	51 e4       	ldi	r21, 0x41	; 65
    1eca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ece:	dc 01       	movw	r26, r24
    1ed0:	cb 01       	movw	r24, r22
    1ed2:	bc 01       	movw	r22, r24
    1ed4:	cd 01       	movw	r24, r26
    1ed6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1eda:	dc 01       	movw	r26, r24
    1edc:	cb 01       	movw	r24, r22
    1ede:	9e 83       	std	Y+6, r25	; 0x06
    1ee0:	8d 83       	std	Y+5, r24	; 0x05
    1ee2:	0f c0       	rjmp	.+30     	; 0x1f02 <H_LCD_Vid_Wrt_Com+0x2ca>
    1ee4:	88 ec       	ldi	r24, 0xC8	; 200
    1ee6:	90 e0       	ldi	r25, 0x00	; 0
    1ee8:	9c 83       	std	Y+4, r25	; 0x04
    1eea:	8b 83       	std	Y+3, r24	; 0x03
    1eec:	8b 81       	ldd	r24, Y+3	; 0x03
    1eee:	9c 81       	ldd	r25, Y+4	; 0x04
    1ef0:	01 97       	sbiw	r24, 0x01	; 1
    1ef2:	f1 f7       	brne	.-4      	; 0x1ef0 <H_LCD_Vid_Wrt_Com+0x2b8>
    1ef4:	9c 83       	std	Y+4, r25	; 0x04
    1ef6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ef8:	8d 81       	ldd	r24, Y+5	; 0x05
    1efa:	9e 81       	ldd	r25, Y+6	; 0x06
    1efc:	01 97       	sbiw	r24, 0x01	; 1
    1efe:	9e 83       	std	Y+6, r25	; 0x06
    1f00:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f02:	8d 81       	ldd	r24, Y+5	; 0x05
    1f04:	9e 81       	ldd	r25, Y+6	; 0x06
    1f06:	00 97       	sbiw	r24, 0x00	; 0
    1f08:	69 f7       	brne	.-38     	; 0x1ee4 <H_LCD_Vid_Wrt_Com+0x2ac>
    1f0a:	14 c0       	rjmp	.+40     	; 0x1f34 <H_LCD_Vid_Wrt_Com+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f0c:	6f 81       	ldd	r22, Y+7	; 0x07
    1f0e:	78 85       	ldd	r23, Y+8	; 0x08
    1f10:	89 85       	ldd	r24, Y+9	; 0x09
    1f12:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f14:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f18:	dc 01       	movw	r26, r24
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	9e 83       	std	Y+6, r25	; 0x06
    1f1e:	8d 83       	std	Y+5, r24	; 0x05
    1f20:	8d 81       	ldd	r24, Y+5	; 0x05
    1f22:	9e 81       	ldd	r25, Y+6	; 0x06
    1f24:	9a 83       	std	Y+2, r25	; 0x02
    1f26:	89 83       	std	Y+1, r24	; 0x01
    1f28:	89 81       	ldd	r24, Y+1	; 0x01
    1f2a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f2c:	01 97       	sbiw	r24, 0x01	; 1
    1f2e:	f1 f7       	brne	.-4      	; 0x1f2c <H_LCD_Vid_Wrt_Com+0x2f4>
    1f30:	9a 83       	std	Y+2, r25	; 0x02
    1f32:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    1f34:	ab 96       	adiw	r28, 0x2b	; 43
    1f36:	0f b6       	in	r0, 0x3f	; 63
    1f38:	f8 94       	cli
    1f3a:	de bf       	out	0x3e, r29	; 62
    1f3c:	0f be       	out	0x3f, r0	; 63
    1f3e:	cd bf       	out	0x3d, r28	; 61
    1f40:	cf 91       	pop	r28
    1f42:	df 91       	pop	r29
    1f44:	08 95       	ret

00001f46 <H_LCD_Vid_Clear>:
void H_LCD_Vid_Clear()
{
    1f46:	df 93       	push	r29
    1f48:	cf 93       	push	r28
    1f4a:	cd b7       	in	r28, 0x3d	; 61
    1f4c:	de b7       	in	r29, 0x3e	; 62
	H_LCD_Vid_Wrt_Com(CLEAR_DISPLAY);
    1f4e:	81 e0       	ldi	r24, 0x01	; 1
    1f50:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <H_LCD_Vid_Wrt_Com>
}
    1f54:	cf 91       	pop	r28
    1f56:	df 91       	pop	r29
    1f58:	08 95       	ret

00001f5a <H_LCD_Vid_GotoRowCol>:
void H_LCD_Vid_GotoRowCol(u8 Copy_u8_Row,u8 Copy_u8_COL)
{
    1f5a:	df 93       	push	r29
    1f5c:	cf 93       	push	r28
    1f5e:	00 d0       	rcall	.+0      	; 0x1f60 <H_LCD_Vid_GotoRowCol+0x6>
    1f60:	0f 92       	push	r0
    1f62:	cd b7       	in	r28, 0x3d	; 61
    1f64:	de b7       	in	r29, 0x3e	; 62
    1f66:	8a 83       	std	Y+2, r24	; 0x02
    1f68:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8_address=0;
    1f6a:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8_Row==H_LCD_ROW0)
    1f6c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f6e:	88 23       	and	r24, r24
    1f70:	19 f4       	brne	.+6      	; 0x1f78 <H_LCD_Vid_GotoRowCol+0x1e>
	{
		local_u8_address=Copy_u8_COL+0x00;       //address of  first row is 0x00 and then increase by one for next column
    1f72:	8b 81       	ldd	r24, Y+3	; 0x03
    1f74:	89 83       	std	Y+1, r24	; 0x01
    1f76:	03 c0       	rjmp	.+6      	; 0x1f7e <H_LCD_Vid_GotoRowCol+0x24>
	}else
	{
		local_u8_address=Copy_u8_COL+0x40;       //address of second row is 0x40 and then increase by one for next column
    1f78:	8b 81       	ldd	r24, Y+3	; 0x03
    1f7a:	80 5c       	subi	r24, 0xC0	; 192
    1f7c:	89 83       	std	Y+1, r24	; 0x01
	}
	H_LCD_Vid_Wrt_Com(128+local_u8_address);
    1f7e:	89 81       	ldd	r24, Y+1	; 0x01
    1f80:	80 58       	subi	r24, 0x80	; 128
    1f82:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <H_LCD_Vid_Wrt_Com>
}
    1f86:	0f 90       	pop	r0
    1f88:	0f 90       	pop	r0
    1f8a:	0f 90       	pop	r0
    1f8c:	cf 91       	pop	r28
    1f8e:	df 91       	pop	r29
    1f90:	08 95       	ret

00001f92 <H_LCD_Vid_Wrt_Special_CHr>:
/* ****8interface to print special char*/
void H_LCD_Vid_Wrt_Special_CHr(u8 *Ptr_u8_Pattern,u8 Copy_num_pattern,u8 Copy_u8_xpos,u8 Copy_u8_ypos)
{
    1f92:	df 93       	push	r29
    1f94:	cf 93       	push	r28
    1f96:	cd b7       	in	r28, 0x3d	; 61
    1f98:	de b7       	in	r29, 0x3e	; 62
    1f9a:	27 97       	sbiw	r28, 0x07	; 7
    1f9c:	0f b6       	in	r0, 0x3f	; 63
    1f9e:	f8 94       	cli
    1fa0:	de bf       	out	0x3e, r29	; 62
    1fa2:	0f be       	out	0x3f, r0	; 63
    1fa4:	cd bf       	out	0x3d, r28	; 61
    1fa6:	9c 83       	std	Y+4, r25	; 0x04
    1fa8:	8b 83       	std	Y+3, r24	; 0x03
    1faa:	6d 83       	std	Y+5, r22	; 0x05
    1fac:	4e 83       	std	Y+6, r20	; 0x06
    1fae:	2f 83       	std	Y+7, r18	; 0x07
	u8 local_u8_address=0;
    1fb0:	1a 82       	std	Y+2, r1	; 0x02
	local_u8_address=8*Copy_num_pattern;
    1fb2:	8d 81       	ldd	r24, Y+5	; 0x05
    1fb4:	88 2f       	mov	r24, r24
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	88 0f       	add	r24, r24
    1fba:	99 1f       	adc	r25, r25
    1fbc:	88 0f       	add	r24, r24
    1fbe:	99 1f       	adc	r25, r25
    1fc0:	88 0f       	add	r24, r24
    1fc2:	99 1f       	adc	r25, r25
    1fc4:	8a 83       	std	Y+2, r24	; 0x02
	H_LCD_Vid_Wrt_Com( 0x40 | local_u8_address);
    1fc6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fc8:	80 64       	ori	r24, 0x40	; 64
    1fca:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <H_LCD_Vid_Wrt_Com>
	for(u8 i=0;i<8;i++)
    1fce:	19 82       	std	Y+1, r1	; 0x01
    1fd0:	03 c0       	rjmp	.+6      	; 0x1fd8 <H_LCD_Vid_Wrt_Special_CHr+0x46>
    1fd2:	89 81       	ldd	r24, Y+1	; 0x01
    1fd4:	8f 5f       	subi	r24, 0xFF	; 255
    1fd6:	89 83       	std	Y+1, r24	; 0x01
    1fd8:	89 81       	ldd	r24, Y+1	; 0x01
    1fda:	88 30       	cpi	r24, 0x08	; 8
    1fdc:	d0 f3       	brcs	.-12     	; 0x1fd2 <H_LCD_Vid_Wrt_Special_CHr+0x40>
	{

	}
}
    1fde:	27 96       	adiw	r28, 0x07	; 7
    1fe0:	0f b6       	in	r0, 0x3f	; 63
    1fe2:	f8 94       	cli
    1fe4:	de bf       	out	0x3e, r29	; 62
    1fe6:	0f be       	out	0x3f, r0	; 63
    1fe8:	cd bf       	out	0x3d, r28	; 61
    1fea:	cf 91       	pop	r28
    1fec:	df 91       	pop	r29
    1fee:	08 95       	ret

00001ff0 <M_TIMER1_Vid_Init>:
#include "TIMER1_reg.h"

void (*FUNC)(void);

void M_TIMER1_Vid_Init()
{
    1ff0:	df 93       	push	r29
    1ff2:	cf 93       	push	r28
    1ff4:	cd b7       	in	r28, 0x3d	; 61
    1ff6:	de b7       	in	r29, 0x3e	; 62
	/*******set mode*************/
	CLR_BIT(TCCR1A,WGM10);
    1ff8:	af e4       	ldi	r26, 0x4F	; 79
    1ffa:	b0 e0       	ldi	r27, 0x00	; 0
    1ffc:	ef e4       	ldi	r30, 0x4F	; 79
    1ffe:	f0 e0       	ldi	r31, 0x00	; 0
    2000:	80 81       	ld	r24, Z
    2002:	8e 7f       	andi	r24, 0xFE	; 254
    2004:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,WGM11);
    2006:	af e4       	ldi	r26, 0x4F	; 79
    2008:	b0 e0       	ldi	r27, 0x00	; 0
    200a:	ef e4       	ldi	r30, 0x4F	; 79
    200c:	f0 e0       	ldi	r31, 0x00	; 0
    200e:	80 81       	ld	r24, Z
    2010:	82 60       	ori	r24, 0x02	; 2
    2012:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,WGM13);
    2014:	ae e4       	ldi	r26, 0x4E	; 78
    2016:	b0 e0       	ldi	r27, 0x00	; 0
    2018:	ee e4       	ldi	r30, 0x4E	; 78
    201a:	f0 e0       	ldi	r31, 0x00	; 0
    201c:	80 81       	ld	r24, Z
    201e:	80 61       	ori	r24, 0x10	; 16
    2020:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,WGM12);
    2022:	ae e4       	ldi	r26, 0x4E	; 78
    2024:	b0 e0       	ldi	r27, 0x00	; 0
    2026:	ee e4       	ldi	r30, 0x4E	; 78
    2028:	f0 e0       	ldi	r31, 0x00	; 0
    202a:	80 81       	ld	r24, Z
    202c:	88 60       	ori	r24, 0x08	; 8
    202e:	8c 93       	st	X, r24
	/*
	 * seclect channle
	 * TO COMPARE MATCH
	 * AND NON INVERTED PWM
	 */
	CLR_BIT(TCCR1A,COM1A0);
    2030:	af e4       	ldi	r26, 0x4F	; 79
    2032:	b0 e0       	ldi	r27, 0x00	; 0
    2034:	ef e4       	ldi	r30, 0x4F	; 79
    2036:	f0 e0       	ldi	r31, 0x00	; 0
    2038:	80 81       	ld	r24, Z
    203a:	8f 7b       	andi	r24, 0xBF	; 191
    203c:	8c 93       	st	X, r24
	SET_BIT(TCCR1A,COM1A1);
    203e:	af e4       	ldi	r26, 0x4F	; 79
    2040:	b0 e0       	ldi	r27, 0x00	; 0
    2042:	ef e4       	ldi	r30, 0x4F	; 79
    2044:	f0 e0       	ldi	r31, 0x00	; 0
    2046:	80 81       	ld	r24, Z
    2048:	80 68       	ori	r24, 0x80	; 128
    204a:	8c 93       	st	X, r24
	//CLR_BIT(TCCR1A,COM1B0);
	//SET_BIT(TCCR1A,COM1B1);

	M_DIO_Vid_WrtPinDir(M_DIO_PORTD,M_DIO_PIN5,M_DIO_OUTPUT);
    204c:	83 e0       	ldi	r24, 0x03	; 3
    204e:	65 e0       	ldi	r22, 0x05	; 5
    2050:	41 e0       	ldi	r20, 0x01	; 1
    2052:	0e 94 17 07 	call	0xe2e	; 0xe2e <M_DIO_Vid_WrtPinDir>
	//M_DIO_Vid_WrtPinDir(M_DIO_PORTD,M_DIO_PIN4,M_DIO_OUTPUT);

	/*PRESCALAR*/
	SET_BIT(TCCR1B,CS10);
    2056:	ae e4       	ldi	r26, 0x4E	; 78
    2058:	b0 e0       	ldi	r27, 0x00	; 0
    205a:	ee e4       	ldi	r30, 0x4E	; 78
    205c:	f0 e0       	ldi	r31, 0x00	; 0
    205e:	80 81       	ld	r24, Z
    2060:	81 60       	ori	r24, 0x01	; 1
    2062:	8c 93       	st	X, r24
	SET_BIT(TCCR1B,CS11);
    2064:	ae e4       	ldi	r26, 0x4E	; 78
    2066:	b0 e0       	ldi	r27, 0x00	; 0
    2068:	ee e4       	ldi	r30, 0x4E	; 78
    206a:	f0 e0       	ldi	r31, 0x00	; 0
    206c:	80 81       	ld	r24, Z
    206e:	82 60       	ori	r24, 0x02	; 2
    2070:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B,CS12);
    2072:	ae e4       	ldi	r26, 0x4E	; 78
    2074:	b0 e0       	ldi	r27, 0x00	; 0
    2076:	ee e4       	ldi	r30, 0x4E	; 78
    2078:	f0 e0       	ldi	r31, 0x00	; 0
    207a:	80 81       	ld	r24, Z
    207c:	8b 7f       	andi	r24, 0xFB	; 251
    207e:	8c 93       	st	X, r24


	/*COUNTS TOP*/
	ICR1=2500;
    2080:	e6 e4       	ldi	r30, 0x46	; 70
    2082:	f0 e0       	ldi	r31, 0x00	; 0
    2084:	84 ec       	ldi	r24, 0xC4	; 196
    2086:	99 e0       	ldi	r25, 0x09	; 9
    2088:	91 83       	std	Z+1, r25	; 0x01
    208a:	80 83       	st	Z, r24


}
    208c:	cf 91       	pop	r28
    208e:	df 91       	pop	r29
    2090:	08 95       	ret

00002092 <M_TIMER1_Vid_SetDuty>:
void M_TIMER1_Vid_SetDuty(u16 Copy_u16_Dutycycle)
{
    2092:	df 93       	push	r29
    2094:	cf 93       	push	r28
    2096:	00 d0       	rcall	.+0      	; 0x2098 <M_TIMER1_Vid_SetDuty+0x6>
    2098:	cd b7       	in	r28, 0x3d	; 61
    209a:	de b7       	in	r29, 0x3e	; 62
    209c:	9a 83       	std	Y+2, r25	; 0x02
    209e:	89 83       	std	Y+1, r24	; 0x01
	OCR1A=Copy_u16_Dutycycle;
    20a0:	ea e4       	ldi	r30, 0x4A	; 74
    20a2:	f0 e0       	ldi	r31, 0x00	; 0
    20a4:	89 81       	ldd	r24, Y+1	; 0x01
    20a6:	9a 81       	ldd	r25, Y+2	; 0x02
    20a8:	91 83       	std	Z+1, r25	; 0x01
    20aa:	80 83       	st	Z, r24
	//OCR1B=1000-Copy_u16_Dutycycle;
}
    20ac:	0f 90       	pop	r0
    20ae:	0f 90       	pop	r0
    20b0:	cf 91       	pop	r28
    20b2:	df 91       	pop	r29
    20b4:	08 95       	ret

000020b6 <M_TIMER1_Vid_ICUInit>:

void M_TIMER1_Vid_ICUInit(void)
{
    20b6:	df 93       	push	r29
    20b8:	cf 93       	push	r28
    20ba:	cd b7       	in	r28, 0x3d	; 61
    20bc:	de b7       	in	r29, 0x3e	; 62
	/***SET PIN AS ICU AT PORTD PIN 6***/
	M_DIO_Vid_WrtPinDir(M_DIO_PORTD,M_DIO_PIN6,M_DIO_INPUT);
    20be:	83 e0       	ldi	r24, 0x03	; 3
    20c0:	66 e0       	ldi	r22, 0x06	; 6
    20c2:	40 e0       	ldi	r20, 0x00	; 0
    20c4:	0e 94 17 07 	call	0xe2e	; 0xe2e <M_DIO_Vid_WrtPinDir>

	/***SET PRESCALAR****/
	SET_BIT(TCCR1B,CS10);
    20c8:	ae e4       	ldi	r26, 0x4E	; 78
    20ca:	b0 e0       	ldi	r27, 0x00	; 0
    20cc:	ee e4       	ldi	r30, 0x4E	; 78
    20ce:	f0 e0       	ldi	r31, 0x00	; 0
    20d0:	80 81       	ld	r24, Z
    20d2:	81 60       	ori	r24, 0x01	; 1
    20d4:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B,CS11);
    20d6:	ae e4       	ldi	r26, 0x4E	; 78
    20d8:	b0 e0       	ldi	r27, 0x00	; 0
    20da:	ee e4       	ldi	r30, 0x4E	; 78
    20dc:	f0 e0       	ldi	r31, 0x00	; 0
    20de:	80 81       	ld	r24, Z
    20e0:	8d 7f       	andi	r24, 0xFD	; 253
    20e2:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B,CS12);
    20e4:	ae e4       	ldi	r26, 0x4E	; 78
    20e6:	b0 e0       	ldi	r27, 0x00	; 0
    20e8:	ee e4       	ldi	r30, 0x4E	; 78
    20ea:	f0 e0       	ldi	r31, 0x00	; 0
    20ec:	80 81       	ld	r24, Z
    20ee:	8b 7f       	andi	r24, 0xFB	; 251
    20f0:	8c 93       	st	X, r24

	/**SELECT MODE AS NORMAL**/
	CLR_BIT(TCCR1A,WGM10);
    20f2:	af e4       	ldi	r26, 0x4F	; 79
    20f4:	b0 e0       	ldi	r27, 0x00	; 0
    20f6:	ef e4       	ldi	r30, 0x4F	; 79
    20f8:	f0 e0       	ldi	r31, 0x00	; 0
    20fa:	80 81       	ld	r24, Z
    20fc:	8e 7f       	andi	r24, 0xFE	; 254
    20fe:	8c 93       	st	X, r24
	CLR_BIT(TCCR1A,WGM11);
    2100:	af e4       	ldi	r26, 0x4F	; 79
    2102:	b0 e0       	ldi	r27, 0x00	; 0
    2104:	ef e4       	ldi	r30, 0x4F	; 79
    2106:	f0 e0       	ldi	r31, 0x00	; 0
    2108:	80 81       	ld	r24, Z
    210a:	8d 7f       	andi	r24, 0xFD	; 253
    210c:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B,WGM12);
    210e:	ae e4       	ldi	r26, 0x4E	; 78
    2110:	b0 e0       	ldi	r27, 0x00	; 0
    2112:	ee e4       	ldi	r30, 0x4E	; 78
    2114:	f0 e0       	ldi	r31, 0x00	; 0
    2116:	80 81       	ld	r24, Z
    2118:	87 7f       	andi	r24, 0xF7	; 247
    211a:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B,WGM13);
    211c:	ae e4       	ldi	r26, 0x4E	; 78
    211e:	b0 e0       	ldi	r27, 0x00	; 0
    2120:	ee e4       	ldi	r30, 0x4E	; 78
    2122:	f0 e0       	ldi	r31, 0x00	; 0
    2124:	80 81       	ld	r24, Z
    2126:	8f 7e       	andi	r24, 0xEF	; 239
    2128:	8c 93       	st	X, r24

	/***SET EDGE AS RISING EDGE***/
	SET_BIT(TCCR1B,ICES1);
    212a:	ae e4       	ldi	r26, 0x4E	; 78
    212c:	b0 e0       	ldi	r27, 0x00	; 0
    212e:	ee e4       	ldi	r30, 0x4E	; 78
    2130:	f0 e0       	ldi	r31, 0x00	; 0
    2132:	80 81       	ld	r24, Z
    2134:	80 64       	ori	r24, 0x40	; 64
    2136:	8c 93       	st	X, r24

	/***set INTERRUPT  enable icu****/
	SET_BIT(TIMSK,TICIE1);
    2138:	a9 e5       	ldi	r26, 0x59	; 89
    213a:	b0 e0       	ldi	r27, 0x00	; 0
    213c:	e9 e5       	ldi	r30, 0x59	; 89
    213e:	f0 e0       	ldi	r31, 0x00	; 0
    2140:	80 81       	ld	r24, Z
    2142:	80 62       	ori	r24, 0x20	; 32
    2144:	8c 93       	st	X, r24
}
    2146:	cf 91       	pop	r28
    2148:	df 91       	pop	r29
    214a:	08 95       	ret

0000214c <M_TIMER1_Vid_ICUResetTimer>:
void M_TIMER1_Vid_ICUResetTimer(void)
{
    214c:	df 93       	push	r29
    214e:	cf 93       	push	r28
    2150:	cd b7       	in	r28, 0x3d	; 61
    2152:	de b7       	in	r29, 0x3e	; 62
	TCNT1=0;
    2154:	ec e4       	ldi	r30, 0x4C	; 76
    2156:	f0 e0       	ldi	r31, 0x00	; 0
    2158:	11 82       	std	Z+1, r1	; 0x01
    215a:	10 82       	st	Z, r1
}
    215c:	cf 91       	pop	r28
    215e:	df 91       	pop	r29
    2160:	08 95       	ret

00002162 <M_TIMER1_U16_ICUGetValue>:
u16 M_TIMER1_U16_ICUGetValue(void)
{
    2162:	df 93       	push	r29
    2164:	cf 93       	push	r28
    2166:	cd b7       	in	r28, 0x3d	; 61
    2168:	de b7       	in	r29, 0x3e	; 62
	return ICR1;
    216a:	e6 e4       	ldi	r30, 0x46	; 70
    216c:	f0 e0       	ldi	r31, 0x00	; 0
    216e:	80 81       	ld	r24, Z
    2170:	91 81       	ldd	r25, Z+1	; 0x01
}
    2172:	cf 91       	pop	r28
    2174:	df 91       	pop	r29
    2176:	08 95       	ret

00002178 <M_TIMER1_Vid_ICUSetEdge>:
void M_TIMER1_Vid_ICUSetEdge(u8 Copy_u8_set_edge)
{
    2178:	df 93       	push	r29
    217a:	cf 93       	push	r28
    217c:	0f 92       	push	r0
    217e:	cd b7       	in	r28, 0x3d	; 61
    2180:	de b7       	in	r29, 0x3e	; 62
    2182:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8_set_edge==RISING_EDGE)
    2184:	89 81       	ldd	r24, Y+1	; 0x01
    2186:	81 30       	cpi	r24, 0x01	; 1
    2188:	41 f4       	brne	.+16     	; 0x219a <M_TIMER1_Vid_ICUSetEdge+0x22>
	{
		SET_BIT(TCCR1B,ICES1);
    218a:	ae e4       	ldi	r26, 0x4E	; 78
    218c:	b0 e0       	ldi	r27, 0x00	; 0
    218e:	ee e4       	ldi	r30, 0x4E	; 78
    2190:	f0 e0       	ldi	r31, 0x00	; 0
    2192:	80 81       	ld	r24, Z
    2194:	80 64       	ori	r24, 0x40	; 64
    2196:	8c 93       	st	X, r24
    2198:	0a c0       	rjmp	.+20     	; 0x21ae <M_TIMER1_Vid_ICUSetEdge+0x36>
	}
	else if(Copy_u8_set_edge==FALLING_EDGE)
    219a:	89 81       	ldd	r24, Y+1	; 0x01
    219c:	88 23       	and	r24, r24
    219e:	39 f4       	brne	.+14     	; 0x21ae <M_TIMER1_Vid_ICUSetEdge+0x36>
	{
		CLR_BIT(TCCR1B,ICES1);
    21a0:	ae e4       	ldi	r26, 0x4E	; 78
    21a2:	b0 e0       	ldi	r27, 0x00	; 0
    21a4:	ee e4       	ldi	r30, 0x4E	; 78
    21a6:	f0 e0       	ldi	r31, 0x00	; 0
    21a8:	80 81       	ld	r24, Z
    21aa:	8f 7b       	andi	r24, 0xBF	; 191
    21ac:	8c 93       	st	X, r24
	}
}
    21ae:	0f 90       	pop	r0
    21b0:	cf 91       	pop	r28
    21b2:	df 91       	pop	r29
    21b4:	08 95       	ret

000021b6 <M_TIMER1_Vid_DeInit>:
void M_TIMER1_Vid_DeInit(void)
{
    21b6:	df 93       	push	r29
    21b8:	cf 93       	push	r28
    21ba:	cd b7       	in	r28, 0x3d	; 61
    21bc:	de b7       	in	r29, 0x3e	; 62
	TCNT1=0;
    21be:	ec e4       	ldi	r30, 0x4C	; 76
    21c0:	f0 e0       	ldi	r31, 0x00	; 0
    21c2:	11 82       	std	Z+1, r1	; 0x01
    21c4:	10 82       	st	Z, r1
	ICR1=0;
    21c6:	e6 e4       	ldi	r30, 0x46	; 70
    21c8:	f0 e0       	ldi	r31, 0x00	; 0
    21ca:	11 82       	std	Z+1, r1	; 0x01
    21cc:	10 82       	st	Z, r1
	CLR_BIT(TIMSK,TICIE1);
    21ce:	a9 e5       	ldi	r26, 0x59	; 89
    21d0:	b0 e0       	ldi	r27, 0x00	; 0
    21d2:	e9 e5       	ldi	r30, 0x59	; 89
    21d4:	f0 e0       	ldi	r31, 0x00	; 0
    21d6:	80 81       	ld	r24, Z
    21d8:	8f 7d       	andi	r24, 0xDF	; 223
    21da:	8c 93       	st	X, r24
}
    21dc:	cf 91       	pop	r28
    21de:	df 91       	pop	r29
    21e0:	08 95       	ret

000021e2 <ICU_CALL_BACK>:
void ICU_CALL_BACK(void (*ICU_callback)(void))
{
    21e2:	df 93       	push	r29
    21e4:	cf 93       	push	r28
    21e6:	00 d0       	rcall	.+0      	; 0x21e8 <ICU_CALL_BACK+0x6>
    21e8:	cd b7       	in	r28, 0x3d	; 61
    21ea:	de b7       	in	r29, 0x3e	; 62
    21ec:	9a 83       	std	Y+2, r25	; 0x02
    21ee:	89 83       	std	Y+1, r24	; 0x01
	FUNC=ICU_callback;
    21f0:	89 81       	ldd	r24, Y+1	; 0x01
    21f2:	9a 81       	ldd	r25, Y+2	; 0x02
    21f4:	90 93 7e 01 	sts	0x017E, r25
    21f8:	80 93 7d 01 	sts	0x017D, r24
}
    21fc:	0f 90       	pop	r0
    21fe:	0f 90       	pop	r0
    2200:	cf 91       	pop	r28
    2202:	df 91       	pop	r29
    2204:	08 95       	ret

00002206 <__vector_6>:

void __vector_6 (void)__attribute__((signal));
void __vector_6 (void)
{
    2206:	1f 92       	push	r1
    2208:	0f 92       	push	r0
    220a:	0f b6       	in	r0, 0x3f	; 63
    220c:	0f 92       	push	r0
    220e:	11 24       	eor	r1, r1
    2210:	2f 93       	push	r18
    2212:	3f 93       	push	r19
    2214:	4f 93       	push	r20
    2216:	5f 93       	push	r21
    2218:	6f 93       	push	r22
    221a:	7f 93       	push	r23
    221c:	8f 93       	push	r24
    221e:	9f 93       	push	r25
    2220:	af 93       	push	r26
    2222:	bf 93       	push	r27
    2224:	ef 93       	push	r30
    2226:	ff 93       	push	r31
    2228:	df 93       	push	r29
    222a:	cf 93       	push	r28
    222c:	cd b7       	in	r28, 0x3d	; 61
    222e:	de b7       	in	r29, 0x3e	; 62
	FUNC();
    2230:	e0 91 7d 01 	lds	r30, 0x017D
    2234:	f0 91 7e 01 	lds	r31, 0x017E
    2238:	09 95       	icall
}
    223a:	cf 91       	pop	r28
    223c:	df 91       	pop	r29
    223e:	ff 91       	pop	r31
    2240:	ef 91       	pop	r30
    2242:	bf 91       	pop	r27
    2244:	af 91       	pop	r26
    2246:	9f 91       	pop	r25
    2248:	8f 91       	pop	r24
    224a:	7f 91       	pop	r23
    224c:	6f 91       	pop	r22
    224e:	5f 91       	pop	r21
    2250:	4f 91       	pop	r20
    2252:	3f 91       	pop	r19
    2254:	2f 91       	pop	r18
    2256:	0f 90       	pop	r0
    2258:	0f be       	out	0x3f, r0	; 63
    225a:	0f 90       	pop	r0
    225c:	1f 90       	pop	r1
    225e:	18 95       	reti

00002260 <M_TIMER_Init>:

//global pointer to function
void (*global_ptr_func)(void);

void M_TIMER_Init(u8 Copy_u8_Mode,u8 Copy_u8_Prescalar,u8 Copy_u8_Preload)
{
    2260:	df 93       	push	r29
    2262:	cf 93       	push	r28
    2264:	00 d0       	rcall	.+0      	; 0x2266 <M_TIMER_Init+0x6>
    2266:	0f 92       	push	r0
    2268:	cd b7       	in	r28, 0x3d	; 61
    226a:	de b7       	in	r29, 0x3e	; 62
    226c:	89 83       	std	Y+1, r24	; 0x01
    226e:	6a 83       	std	Y+2, r22	; 0x02
    2270:	4b 83       	std	Y+3, r20	; 0x03

	//set enable timer 0
	SET_BIT(TIFR,0);
    2272:	a8 e5       	ldi	r26, 0x58	; 88
    2274:	b0 e0       	ldi	r27, 0x00	; 0
    2276:	e8 e5       	ldi	r30, 0x58	; 88
    2278:	f0 e0       	ldi	r31, 0x00	; 0
    227a:	80 81       	ld	r24, Z
    227c:	81 60       	ori	r24, 0x01	; 1
    227e:	8c 93       	st	X, r24

	/***************8set mode *****************/

	if(Copy_u8_Mode== OVERFLOW_Mode)
    2280:	89 81       	ldd	r24, Y+1	; 0x01
    2282:	81 30       	cpi	r24, 0x01	; 1
    2284:	d1 f4       	brne	.+52     	; 0x22ba <M_TIMER_Init+0x5a>
	{
		//***************************SET OVERFLOW MODE**********
		CLR_BIT(TCCR0,WGM00);
    2286:	a3 e5       	ldi	r26, 0x53	; 83
    2288:	b0 e0       	ldi	r27, 0x00	; 0
    228a:	e3 e5       	ldi	r30, 0x53	; 83
    228c:	f0 e0       	ldi	r31, 0x00	; 0
    228e:	80 81       	ld	r24, Z
    2290:	8f 7b       	andi	r24, 0xBF	; 191
    2292:	8c 93       	st	X, r24
	    CLR_BIT(TCCR0,WGM01);
    2294:	a3 e5       	ldi	r26, 0x53	; 83
    2296:	b0 e0       	ldi	r27, 0x00	; 0
    2298:	e3 e5       	ldi	r30, 0x53	; 83
    229a:	f0 e0       	ldi	r31, 0x00	; 0
    229c:	80 81       	ld	r24, Z
    229e:	87 7f       	andi	r24, 0xF7	; 247
    22a0:	8c 93       	st	X, r24

		//enable timer interrupt enable for oveflow event
		SET_BIT(TIMSK,TOIE0);
    22a2:	a9 e5       	ldi	r26, 0x59	; 89
    22a4:	b0 e0       	ldi	r27, 0x00	; 0
    22a6:	e9 e5       	ldi	r30, 0x59	; 89
    22a8:	f0 e0       	ldi	r31, 0x00	; 0
    22aa:	80 81       	ld	r24, Z
    22ac:	81 60       	ori	r24, 0x01	; 1
    22ae:	8c 93       	st	X, r24

		/*SET PRELOAD*/
		TCNT0=Copy_u8_Preload;
    22b0:	e2 e5       	ldi	r30, 0x52	; 82
    22b2:	f0 e0       	ldi	r31, 0x00	; 0
    22b4:	8b 81       	ldd	r24, Y+3	; 0x03
    22b6:	80 83       	st	Z, r24
    22b8:	47 c0       	rjmp	.+142    	; 0x2348 <M_TIMER_Init+0xe8>

	}else if(Copy_u8_Mode== CTC_Mode)
    22ba:	89 81       	ldd	r24, Y+1	; 0x01
    22bc:	82 30       	cpi	r24, 0x02	; 2
    22be:	79 f4       	brne	.+30     	; 0x22de <M_TIMER_Init+0x7e>
	{
		//***************************SET CTC MODE**************
		CLR_BIT(TCCR0,WGM00);
    22c0:	a3 e5       	ldi	r26, 0x53	; 83
    22c2:	b0 e0       	ldi	r27, 0x00	; 0
    22c4:	e3 e5       	ldi	r30, 0x53	; 83
    22c6:	f0 e0       	ldi	r31, 0x00	; 0
    22c8:	80 81       	ld	r24, Z
    22ca:	8f 7b       	andi	r24, 0xBF	; 191
    22cc:	8c 93       	st	X, r24
	    SET_BIT(TCCR0,WGM01);
    22ce:	a3 e5       	ldi	r26, 0x53	; 83
    22d0:	b0 e0       	ldi	r27, 0x00	; 0
    22d2:	e3 e5       	ldi	r30, 0x53	; 83
    22d4:	f0 e0       	ldi	r31, 0x00	; 0
    22d6:	80 81       	ld	r24, Z
    22d8:	88 60       	ori	r24, 0x08	; 8
    22da:	8c 93       	st	X, r24
    22dc:	35 c0       	rjmp	.+106    	; 0x2348 <M_TIMER_Init+0xe8>
	}else if(Copy_u8_Mode== PWM_Mode)
    22de:	89 81       	ldd	r24, Y+1	; 0x01
    22e0:	83 30       	cpi	r24, 0x03	; 3
    22e2:	79 f4       	brne	.+30     	; 0x2302 <M_TIMER_Init+0xa2>
	{
		//***************************SET PWM MODE*************
		SET_BIT(TCCR0,WGM00);
    22e4:	a3 e5       	ldi	r26, 0x53	; 83
    22e6:	b0 e0       	ldi	r27, 0x00	; 0
    22e8:	e3 e5       	ldi	r30, 0x53	; 83
    22ea:	f0 e0       	ldi	r31, 0x00	; 0
    22ec:	80 81       	ld	r24, Z
    22ee:	80 64       	ori	r24, 0x40	; 64
    22f0:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,WGM01);
    22f2:	a3 e5       	ldi	r26, 0x53	; 83
    22f4:	b0 e0       	ldi	r27, 0x00	; 0
    22f6:	e3 e5       	ldi	r30, 0x53	; 83
    22f8:	f0 e0       	ldi	r31, 0x00	; 0
    22fa:	80 81       	ld	r24, Z
    22fc:	87 7f       	andi	r24, 0xF7	; 247
    22fe:	8c 93       	st	X, r24
    2300:	23 c0       	rjmp	.+70     	; 0x2348 <M_TIMER_Init+0xe8>
	}else if(Copy_u8_Mode== FAST_pWM_Mode)
    2302:	89 81       	ldd	r24, Y+1	; 0x01
    2304:	84 30       	cpi	r24, 0x04	; 4
    2306:	01 f5       	brne	.+64     	; 0x2348 <M_TIMER_Init+0xe8>
	{
		//***************************SET fast PWM MODE****************
		SET_BIT(TCCR0,WGM01);
    2308:	a3 e5       	ldi	r26, 0x53	; 83
    230a:	b0 e0       	ldi	r27, 0x00	; 0
    230c:	e3 e5       	ldi	r30, 0x53	; 83
    230e:	f0 e0       	ldi	r31, 0x00	; 0
    2310:	80 81       	ld	r24, Z
    2312:	88 60       	ori	r24, 0x08	; 8
    2314:	8c 93       	st	X, r24
	    SET_BIT(TCCR0,WGM00);
    2316:	a3 e5       	ldi	r26, 0x53	; 83
    2318:	b0 e0       	ldi	r27, 0x00	; 0
    231a:	e3 e5       	ldi	r30, 0x53	; 83
    231c:	f0 e0       	ldi	r31, 0x00	; 0
    231e:	80 81       	ld	r24, Z
    2320:	80 64       	ori	r24, 0x40	; 64
    2322:	8c 93       	st	X, r24

	    /*********set fast pwm as non inverted */
	    CLR_BIT(TCCR0,COM00);
    2324:	a3 e5       	ldi	r26, 0x53	; 83
    2326:	b0 e0       	ldi	r27, 0x00	; 0
    2328:	e3 e5       	ldi	r30, 0x53	; 83
    232a:	f0 e0       	ldi	r31, 0x00	; 0
    232c:	80 81       	ld	r24, Z
    232e:	8f 7e       	andi	r24, 0xEF	; 239
    2330:	8c 93       	st	X, r24
	    SET_BIT(TCCR0,COM01);
    2332:	a3 e5       	ldi	r26, 0x53	; 83
    2334:	b0 e0       	ldi	r27, 0x00	; 0
    2336:	e3 e5       	ldi	r30, 0x53	; 83
    2338:	f0 e0       	ldi	r31, 0x00	; 0
    233a:	80 81       	ld	r24, Z
    233c:	80 62       	ori	r24, 0x20	; 32
    233e:	8c 93       	st	X, r24

	    /**********SET VALUE OF COMPARE MATCH**********/
	    OCR0=200;
    2340:	ec e5       	ldi	r30, 0x5C	; 92
    2342:	f0 e0       	ldi	r31, 0x00	; 0
    2344:	88 ec       	ldi	r24, 0xC8	; 200
    2346:	80 83       	st	Z, r24
	}


	/******************SET PRESCALAR*************************/

	if(Copy_u8_Prescalar==Prescalar_1)
    2348:	8a 81       	ldd	r24, Y+2	; 0x02
    234a:	88 23       	and	r24, r24
    234c:	b1 f4       	brne	.+44     	; 0x237a <M_TIMER_Init+0x11a>
	{
		SET_BIT(TCCR0,CS00);
    234e:	a3 e5       	ldi	r26, 0x53	; 83
    2350:	b0 e0       	ldi	r27, 0x00	; 0
    2352:	e3 e5       	ldi	r30, 0x53	; 83
    2354:	f0 e0       	ldi	r31, 0x00	; 0
    2356:	80 81       	ld	r24, Z
    2358:	81 60       	ori	r24, 0x01	; 1
    235a:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,CS01);
    235c:	a3 e5       	ldi	r26, 0x53	; 83
    235e:	b0 e0       	ldi	r27, 0x00	; 0
    2360:	e3 e5       	ldi	r30, 0x53	; 83
    2362:	f0 e0       	ldi	r31, 0x00	; 0
    2364:	80 81       	ld	r24, Z
    2366:	8d 7f       	andi	r24, 0xFD	; 253
    2368:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,CS02);
    236a:	a3 e5       	ldi	r26, 0x53	; 83
    236c:	b0 e0       	ldi	r27, 0x00	; 0
    236e:	e3 e5       	ldi	r30, 0x53	; 83
    2370:	f0 e0       	ldi	r31, 0x00	; 0
    2372:	80 81       	ld	r24, Z
    2374:	8b 7f       	andi	r24, 0xFB	; 251
    2376:	8c 93       	st	X, r24
    2378:	79 c0       	rjmp	.+242    	; 0x246c <M_TIMER_Init+0x20c>

	}else if(Copy_u8_Prescalar==Prescalar_8)
    237a:	8a 81       	ldd	r24, Y+2	; 0x02
    237c:	81 30       	cpi	r24, 0x01	; 1
    237e:	b1 f4       	brne	.+44     	; 0x23ac <M_TIMER_Init+0x14c>
	{
		CLR_BIT(TCCR0,CS00);
    2380:	a3 e5       	ldi	r26, 0x53	; 83
    2382:	b0 e0       	ldi	r27, 0x00	; 0
    2384:	e3 e5       	ldi	r30, 0x53	; 83
    2386:	f0 e0       	ldi	r31, 0x00	; 0
    2388:	80 81       	ld	r24, Z
    238a:	8e 7f       	andi	r24, 0xFE	; 254
    238c:	8c 93       	st	X, r24
		SET_BIT(TCCR0,CS01);
    238e:	a3 e5       	ldi	r26, 0x53	; 83
    2390:	b0 e0       	ldi	r27, 0x00	; 0
    2392:	e3 e5       	ldi	r30, 0x53	; 83
    2394:	f0 e0       	ldi	r31, 0x00	; 0
    2396:	80 81       	ld	r24, Z
    2398:	82 60       	ori	r24, 0x02	; 2
    239a:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,CS02);
    239c:	a3 e5       	ldi	r26, 0x53	; 83
    239e:	b0 e0       	ldi	r27, 0x00	; 0
    23a0:	e3 e5       	ldi	r30, 0x53	; 83
    23a2:	f0 e0       	ldi	r31, 0x00	; 0
    23a4:	80 81       	ld	r24, Z
    23a6:	8b 7f       	andi	r24, 0xFB	; 251
    23a8:	8c 93       	st	X, r24
    23aa:	60 c0       	rjmp	.+192    	; 0x246c <M_TIMER_Init+0x20c>

	}else if(Copy_u8_Prescalar==Prescalar_64)
    23ac:	8a 81       	ldd	r24, Y+2	; 0x02
    23ae:	82 30       	cpi	r24, 0x02	; 2
    23b0:	b1 f4       	brne	.+44     	; 0x23de <M_TIMER_Init+0x17e>
	{
		SET_BIT(TCCR0,CS00);
    23b2:	a3 e5       	ldi	r26, 0x53	; 83
    23b4:	b0 e0       	ldi	r27, 0x00	; 0
    23b6:	e3 e5       	ldi	r30, 0x53	; 83
    23b8:	f0 e0       	ldi	r31, 0x00	; 0
    23ba:	80 81       	ld	r24, Z
    23bc:	81 60       	ori	r24, 0x01	; 1
    23be:	8c 93       	st	X, r24
		SET_BIT(TCCR0,CS01);
    23c0:	a3 e5       	ldi	r26, 0x53	; 83
    23c2:	b0 e0       	ldi	r27, 0x00	; 0
    23c4:	e3 e5       	ldi	r30, 0x53	; 83
    23c6:	f0 e0       	ldi	r31, 0x00	; 0
    23c8:	80 81       	ld	r24, Z
    23ca:	82 60       	ori	r24, 0x02	; 2
    23cc:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,CS02);
    23ce:	a3 e5       	ldi	r26, 0x53	; 83
    23d0:	b0 e0       	ldi	r27, 0x00	; 0
    23d2:	e3 e5       	ldi	r30, 0x53	; 83
    23d4:	f0 e0       	ldi	r31, 0x00	; 0
    23d6:	80 81       	ld	r24, Z
    23d8:	8b 7f       	andi	r24, 0xFB	; 251
    23da:	8c 93       	st	X, r24
    23dc:	47 c0       	rjmp	.+142    	; 0x246c <M_TIMER_Init+0x20c>

	}else if(Copy_u8_Prescalar==Prescalar_256)
    23de:	8a 81       	ldd	r24, Y+2	; 0x02
    23e0:	83 30       	cpi	r24, 0x03	; 3
    23e2:	b1 f4       	brne	.+44     	; 0x2410 <M_TIMER_Init+0x1b0>
	{
		CLR_BIT(TCCR0,CS00);
    23e4:	a3 e5       	ldi	r26, 0x53	; 83
    23e6:	b0 e0       	ldi	r27, 0x00	; 0
    23e8:	e3 e5       	ldi	r30, 0x53	; 83
    23ea:	f0 e0       	ldi	r31, 0x00	; 0
    23ec:	80 81       	ld	r24, Z
    23ee:	8e 7f       	andi	r24, 0xFE	; 254
    23f0:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,CS01);
    23f2:	a3 e5       	ldi	r26, 0x53	; 83
    23f4:	b0 e0       	ldi	r27, 0x00	; 0
    23f6:	e3 e5       	ldi	r30, 0x53	; 83
    23f8:	f0 e0       	ldi	r31, 0x00	; 0
    23fa:	80 81       	ld	r24, Z
    23fc:	8d 7f       	andi	r24, 0xFD	; 253
    23fe:	8c 93       	st	X, r24
		SET_BIT(TCCR0,CS02);
    2400:	a3 e5       	ldi	r26, 0x53	; 83
    2402:	b0 e0       	ldi	r27, 0x00	; 0
    2404:	e3 e5       	ldi	r30, 0x53	; 83
    2406:	f0 e0       	ldi	r31, 0x00	; 0
    2408:	80 81       	ld	r24, Z
    240a:	84 60       	ori	r24, 0x04	; 4
    240c:	8c 93       	st	X, r24
    240e:	2e c0       	rjmp	.+92     	; 0x246c <M_TIMER_Init+0x20c>

	}else if(Copy_u8_Prescalar==Prescalar_1024)
    2410:	8a 81       	ldd	r24, Y+2	; 0x02
    2412:	84 30       	cpi	r24, 0x04	; 4
    2414:	b1 f4       	brne	.+44     	; 0x2442 <M_TIMER_Init+0x1e2>
	{
		SET_BIT(TCCR0,CS00);
    2416:	a3 e5       	ldi	r26, 0x53	; 83
    2418:	b0 e0       	ldi	r27, 0x00	; 0
    241a:	e3 e5       	ldi	r30, 0x53	; 83
    241c:	f0 e0       	ldi	r31, 0x00	; 0
    241e:	80 81       	ld	r24, Z
    2420:	81 60       	ori	r24, 0x01	; 1
    2422:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,CS01);
    2424:	a3 e5       	ldi	r26, 0x53	; 83
    2426:	b0 e0       	ldi	r27, 0x00	; 0
    2428:	e3 e5       	ldi	r30, 0x53	; 83
    242a:	f0 e0       	ldi	r31, 0x00	; 0
    242c:	80 81       	ld	r24, Z
    242e:	8d 7f       	andi	r24, 0xFD	; 253
    2430:	8c 93       	st	X, r24
		SET_BIT(TCCR0,CS02);
    2432:	a3 e5       	ldi	r26, 0x53	; 83
    2434:	b0 e0       	ldi	r27, 0x00	; 0
    2436:	e3 e5       	ldi	r30, 0x53	; 83
    2438:	f0 e0       	ldi	r31, 0x00	; 0
    243a:	80 81       	ld	r24, Z
    243c:	84 60       	ori	r24, 0x04	; 4
    243e:	8c 93       	st	X, r24
    2440:	15 c0       	rjmp	.+42     	; 0x246c <M_TIMER_Init+0x20c>

	}else
	{
		CLR_BIT(TCCR0,CS00);
    2442:	a3 e5       	ldi	r26, 0x53	; 83
    2444:	b0 e0       	ldi	r27, 0x00	; 0
    2446:	e3 e5       	ldi	r30, 0x53	; 83
    2448:	f0 e0       	ldi	r31, 0x00	; 0
    244a:	80 81       	ld	r24, Z
    244c:	8e 7f       	andi	r24, 0xFE	; 254
    244e:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,CS01);
    2450:	a3 e5       	ldi	r26, 0x53	; 83
    2452:	b0 e0       	ldi	r27, 0x00	; 0
    2454:	e3 e5       	ldi	r30, 0x53	; 83
    2456:	f0 e0       	ldi	r31, 0x00	; 0
    2458:	80 81       	ld	r24, Z
    245a:	8d 7f       	andi	r24, 0xFD	; 253
    245c:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,CS02);
    245e:	a3 e5       	ldi	r26, 0x53	; 83
    2460:	b0 e0       	ldi	r27, 0x00	; 0
    2462:	e3 e5       	ldi	r30, 0x53	; 83
    2464:	f0 e0       	ldi	r31, 0x00	; 0
    2466:	80 81       	ld	r24, Z
    2468:	8b 7f       	andi	r24, 0xFB	; 251
    246a:	8c 93       	st	X, r24

	}

}
    246c:	0f 90       	pop	r0
    246e:	0f 90       	pop	r0
    2470:	0f 90       	pop	r0
    2472:	cf 91       	pop	r28
    2474:	df 91       	pop	r29
    2476:	08 95       	ret

00002478 <CALL_BACK>:

void CALL_BACK(void(*func)(void))
{
    2478:	df 93       	push	r29
    247a:	cf 93       	push	r28
    247c:	00 d0       	rcall	.+0      	; 0x247e <CALL_BACK+0x6>
    247e:	cd b7       	in	r28, 0x3d	; 61
    2480:	de b7       	in	r29, 0x3e	; 62
    2482:	9a 83       	std	Y+2, r25	; 0x02
    2484:	89 83       	std	Y+1, r24	; 0x01
	//global pointer to function
	global_ptr_func=func ;
    2486:	89 81       	ldd	r24, Y+1	; 0x01
    2488:	9a 81       	ldd	r25, Y+2	; 0x02
    248a:	90 93 80 01 	sts	0x0180, r25
    248e:	80 93 7f 01 	sts	0x017F, r24
}
    2492:	0f 90       	pop	r0
    2494:	0f 90       	pop	r0
    2496:	cf 91       	pop	r28
    2498:	df 91       	pop	r29
    249a:	08 95       	ret

0000249c <__vector_11>:

void __vector_11(void)__attribute__((signal));
void __vector_11(void)
{
    249c:	1f 92       	push	r1
    249e:	0f 92       	push	r0
    24a0:	0f b6       	in	r0, 0x3f	; 63
    24a2:	0f 92       	push	r0
    24a4:	11 24       	eor	r1, r1
    24a6:	2f 93       	push	r18
    24a8:	3f 93       	push	r19
    24aa:	4f 93       	push	r20
    24ac:	5f 93       	push	r21
    24ae:	6f 93       	push	r22
    24b0:	7f 93       	push	r23
    24b2:	8f 93       	push	r24
    24b4:	9f 93       	push	r25
    24b6:	af 93       	push	r26
    24b8:	bf 93       	push	r27
    24ba:	ef 93       	push	r30
    24bc:	ff 93       	push	r31
    24be:	df 93       	push	r29
    24c0:	cf 93       	push	r28
    24c2:	cd b7       	in	r28, 0x3d	; 61
    24c4:	de b7       	in	r29, 0x3e	; 62
	global_ptr_func();
    24c6:	e0 91 7f 01 	lds	r30, 0x017F
    24ca:	f0 91 80 01 	lds	r31, 0x0180
    24ce:	09 95       	icall
}
    24d0:	cf 91       	pop	r28
    24d2:	df 91       	pop	r29
    24d4:	ff 91       	pop	r31
    24d6:	ef 91       	pop	r30
    24d8:	bf 91       	pop	r27
    24da:	af 91       	pop	r26
    24dc:	9f 91       	pop	r25
    24de:	8f 91       	pop	r24
    24e0:	7f 91       	pop	r23
    24e2:	6f 91       	pop	r22
    24e4:	5f 91       	pop	r21
    24e6:	4f 91       	pop	r20
    24e8:	3f 91       	pop	r19
    24ea:	2f 91       	pop	r18
    24ec:	0f 90       	pop	r0
    24ee:	0f be       	out	0x3f, r0	; 63
    24f0:	0f 90       	pop	r0
    24f2:	1f 90       	pop	r1
    24f4:	18 95       	reti

000024f6 <main>:
u16 period_on=0;
u8 arr1[10];
u8 arr2[10];
void ISR(void);
int main(void)
{
    24f6:	ef 92       	push	r14
    24f8:	ff 92       	push	r15
    24fa:	0f 93       	push	r16
    24fc:	1f 93       	push	r17
    24fe:	df 93       	push	r29
    2500:	cf 93       	push	r28
    2502:	cd b7       	in	r28, 0x3d	; 61
    2504:	de b7       	in	r29, 0x3e	; 62
    2506:	61 97       	sbiw	r28, 0x11	; 17
    2508:	0f b6       	in	r0, 0x3f	; 63
    250a:	f8 94       	cli
    250c:	de bf       	out	0x3e, r29	; 62
    250e:	0f be       	out	0x3f, r0	; 63
    2510:	cd bf       	out	0x3d, r28	; 61
	u32 fre=0;
    2512:	19 8a       	std	Y+17, r1	; 0x11
    2514:	18 8a       	std	Y+16, r1	; 0x10
	u8 duty=0;
    2516:	1f 86       	std	Y+15, r1	; 0x0f
	H_LCD_Vid_Int();
    2518:	0e 94 e7 09 	call	0x13ce	; 0x13ce <H_LCD_Vid_Int>

	/**********************ICU PREPHIRAL********************/
	M_TIMER1_Vid_ICUInit();
    251c:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <M_TIMER1_Vid_ICUInit>
	M_DIO_Vid_WrtPinDir(M_DIO_PORTB,M_DIO_PIN3,M_DIO_OUTPUT);
    2520:	81 e0       	ldi	r24, 0x01	; 1
    2522:	63 e0       	ldi	r22, 0x03	; 3
    2524:	41 e0       	ldi	r20, 0x01	; 1
    2526:	0e 94 17 07 	call	0xe2e	; 0xe2e <M_DIO_Vid_WrtPinDir>
	M_TIMER_Init(FAST_pWM_Mode,Prescalar_64,192);
    252a:	84 e0       	ldi	r24, 0x04	; 4
    252c:	62 e0       	ldi	r22, 0x02	; 2
    252e:	40 ec       	ldi	r20, 0xC0	; 192
    2530:	0e 94 30 11 	call	0x2260	; 0x2260 <M_TIMER_Init>


	/********FOR ICU INTERRUPT******/
	M_GIE_Vid_EnableGlbInt();
    2534:	0e 94 cb 09 	call	0x1396	; 0x1396 <M_GIE_Vid_EnableGlbInt>
	ICU_CALL_BACK(&ISR);
    2538:	88 ec       	ldi	r24, 0xC8	; 200
    253a:	93 e1       	ldi	r25, 0x13	; 19
    253c:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <ICU_CALL_BACK>
	//M_TIMER1_Vid_Init();

	while(1)
	{
		H_LCD_Vid_Clear();
    2540:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <H_LCD_Vid_Clear>
		_delay_ms(500);
		M_TIMER1_Vid_SetDuty(145);
		_delay_ms(500);*/

		/*****************************ICU******************/
		if(counter ==4){
    2544:	80 91 76 01 	lds	r24, 0x0176
    2548:	84 30       	cpi	r24, 0x04	; 4
    254a:	09 f0       	breq	.+2      	; 0x254e <main+0x58>
    254c:	5c c0       	rjmp	.+184    	; 0x2606 <main+0x110>
			fre=8000000/(period_on-Ton);
    254e:	20 91 7b 01 	lds	r18, 0x017B
    2552:	30 91 7c 01 	lds	r19, 0x017C
    2556:	80 91 79 01 	lds	r24, 0x0179
    255a:	90 91 7a 01 	lds	r25, 0x017A
    255e:	a9 01       	movw	r20, r18
    2560:	48 1b       	sub	r20, r24
    2562:	59 0b       	sbc	r21, r25
    2564:	ca 01       	movw	r24, r20
    2566:	9c 01       	movw	r18, r24
    2568:	40 e0       	ldi	r20, 0x00	; 0
    256a:	50 e0       	ldi	r21, 0x00	; 0
    256c:	80 e0       	ldi	r24, 0x00	; 0
    256e:	92 e1       	ldi	r25, 0x12	; 18
    2570:	aa e7       	ldi	r26, 0x7A	; 122
    2572:	b0 e0       	ldi	r27, 0x00	; 0
    2574:	bc 01       	movw	r22, r24
    2576:	cd 01       	movw	r24, r26
    2578:	0e 94 06 14 	call	0x280c	; 0x280c <__divmodsi4>
    257c:	da 01       	movw	r26, r20
    257e:	c9 01       	movw	r24, r18
    2580:	99 8b       	std	Y+17, r25	; 0x11
    2582:	88 8b       	std	Y+16, r24	; 0x10
			duty=((double)(period_on-period_counts)/(period_on-Ton))*100.0;
    2584:	20 91 7b 01 	lds	r18, 0x017B
    2588:	30 91 7c 01 	lds	r19, 0x017C
    258c:	80 91 77 01 	lds	r24, 0x0177
    2590:	90 91 78 01 	lds	r25, 0x0178
    2594:	a9 01       	movw	r20, r18
    2596:	48 1b       	sub	r20, r24
    2598:	59 0b       	sbc	r21, r25
    259a:	ca 01       	movw	r24, r20
    259c:	cc 01       	movw	r24, r24
    259e:	a0 e0       	ldi	r26, 0x00	; 0
    25a0:	b0 e0       	ldi	r27, 0x00	; 0
    25a2:	bc 01       	movw	r22, r24
    25a4:	cd 01       	movw	r24, r26
    25a6:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    25aa:	7b 01       	movw	r14, r22
    25ac:	8c 01       	movw	r16, r24
    25ae:	20 91 7b 01 	lds	r18, 0x017B
    25b2:	30 91 7c 01 	lds	r19, 0x017C
    25b6:	80 91 79 01 	lds	r24, 0x0179
    25ba:	90 91 7a 01 	lds	r25, 0x017A
    25be:	a9 01       	movw	r20, r18
    25c0:	48 1b       	sub	r20, r24
    25c2:	59 0b       	sbc	r21, r25
    25c4:	ca 01       	movw	r24, r20
    25c6:	cc 01       	movw	r24, r24
    25c8:	a0 e0       	ldi	r26, 0x00	; 0
    25ca:	b0 e0       	ldi	r27, 0x00	; 0
    25cc:	bc 01       	movw	r22, r24
    25ce:	cd 01       	movw	r24, r26
    25d0:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    25d4:	9b 01       	movw	r18, r22
    25d6:	ac 01       	movw	r20, r24
    25d8:	c8 01       	movw	r24, r16
    25da:	b7 01       	movw	r22, r14
    25dc:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    25e0:	dc 01       	movw	r26, r24
    25e2:	cb 01       	movw	r24, r22
    25e4:	bc 01       	movw	r22, r24
    25e6:	cd 01       	movw	r24, r26
    25e8:	20 e0       	ldi	r18, 0x00	; 0
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	48 ec       	ldi	r20, 0xC8	; 200
    25ee:	52 e4       	ldi	r21, 0x42	; 66
    25f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    25f4:	dc 01       	movw	r26, r24
    25f6:	cb 01       	movw	r24, r22
    25f8:	bc 01       	movw	r22, r24
    25fa:	cd 01       	movw	r24, r26
    25fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2600:	dc 01       	movw	r26, r24
    2602:	cb 01       	movw	r24, r22
    2604:	8f 87       	std	Y+15, r24	; 0x0f
		}
		sprintf(arr1,"%d",fre);
    2606:	00 d0       	rcall	.+0      	; 0x2608 <main+0x112>
    2608:	00 d0       	rcall	.+0      	; 0x260a <main+0x114>
    260a:	00 d0       	rcall	.+0      	; 0x260c <main+0x116>
    260c:	ed b7       	in	r30, 0x3d	; 61
    260e:	fe b7       	in	r31, 0x3e	; 62
    2610:	31 96       	adiw	r30, 0x01	; 1
    2612:	81 e8       	ldi	r24, 0x81	; 129
    2614:	91 e0       	ldi	r25, 0x01	; 1
    2616:	91 83       	std	Z+1, r25	; 0x01
    2618:	80 83       	st	Z, r24
    261a:	80 e6       	ldi	r24, 0x60	; 96
    261c:	90 e0       	ldi	r25, 0x00	; 0
    261e:	93 83       	std	Z+3, r25	; 0x03
    2620:	82 83       	std	Z+2, r24	; 0x02
    2622:	88 89       	ldd	r24, Y+16	; 0x10
    2624:	99 89       	ldd	r25, Y+17	; 0x11
    2626:	95 83       	std	Z+5, r25	; 0x05
    2628:	84 83       	std	Z+4, r24	; 0x04
    262a:	0e 94 7a 14 	call	0x28f4	; 0x28f4 <sprintf>
    262e:	8d b7       	in	r24, 0x3d	; 61
    2630:	9e b7       	in	r25, 0x3e	; 62
    2632:	06 96       	adiw	r24, 0x06	; 6
    2634:	0f b6       	in	r0, 0x3f	; 63
    2636:	f8 94       	cli
    2638:	9e bf       	out	0x3e, r25	; 62
    263a:	0f be       	out	0x3f, r0	; 63
    263c:	8d bf       	out	0x3d, r24	; 61
		sprintf(arr2,"%d",duty);
    263e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2640:	28 2f       	mov	r18, r24
    2642:	30 e0       	ldi	r19, 0x00	; 0
    2644:	00 d0       	rcall	.+0      	; 0x2646 <main+0x150>
    2646:	00 d0       	rcall	.+0      	; 0x2648 <main+0x152>
    2648:	00 d0       	rcall	.+0      	; 0x264a <main+0x154>
    264a:	ed b7       	in	r30, 0x3d	; 61
    264c:	fe b7       	in	r31, 0x3e	; 62
    264e:	31 96       	adiw	r30, 0x01	; 1
    2650:	8b e8       	ldi	r24, 0x8B	; 139
    2652:	91 e0       	ldi	r25, 0x01	; 1
    2654:	91 83       	std	Z+1, r25	; 0x01
    2656:	80 83       	st	Z, r24
    2658:	80 e6       	ldi	r24, 0x60	; 96
    265a:	90 e0       	ldi	r25, 0x00	; 0
    265c:	93 83       	std	Z+3, r25	; 0x03
    265e:	82 83       	std	Z+2, r24	; 0x02
    2660:	35 83       	std	Z+5, r19	; 0x05
    2662:	24 83       	std	Z+4, r18	; 0x04
    2664:	0e 94 7a 14 	call	0x28f4	; 0x28f4 <sprintf>
    2668:	4d b7       	in	r20, 0x3d	; 61
    266a:	5e b7       	in	r21, 0x3e	; 62
    266c:	4a 5f       	subi	r20, 0xFA	; 250
    266e:	5f 4f       	sbci	r21, 0xFF	; 255
    2670:	0f b6       	in	r0, 0x3f	; 63
    2672:	f8 94       	cli
    2674:	5e bf       	out	0x3e, r21	; 62
    2676:	0f be       	out	0x3f, r0	; 63
    2678:	4d bf       	out	0x3d, r20	; 61
		H_LCD_Vid_GotoRowCol(H_LCD_ROW0,H_LCD_COL00);
    267a:	80 e0       	ldi	r24, 0x00	; 0
    267c:	60 e0       	ldi	r22, 0x00	; 0
    267e:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <H_LCD_Vid_GotoRowCol>
		H_LCD_Vid_Wrt_Str("FRE:");
    2682:	83 e6       	ldi	r24, 0x63	; 99
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	0e 94 f3 0d 	call	0x1be6	; 0x1be6 <H_LCD_Vid_Wrt_Str>
		H_LCD_Vid_Wrt_Str(arr1);
    268a:	81 e8       	ldi	r24, 0x81	; 129
    268c:	91 e0       	ldi	r25, 0x01	; 1
    268e:	0e 94 f3 0d 	call	0x1be6	; 0x1be6 <H_LCD_Vid_Wrt_Str>
		H_LCD_Vid_GotoRowCol(H_LCD_ROW1,H_LCD_COL00);
    2692:	81 e0       	ldi	r24, 0x01	; 1
    2694:	60 e0       	ldi	r22, 0x00	; 0
    2696:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <H_LCD_Vid_GotoRowCol>
		H_LCD_Vid_Wrt_Str("DUTY:");
    269a:	88 e6       	ldi	r24, 0x68	; 104
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	0e 94 f3 0d 	call	0x1be6	; 0x1be6 <H_LCD_Vid_Wrt_Str>
		H_LCD_Vid_Wrt_Str(arr2);
    26a2:	8b e8       	ldi	r24, 0x8B	; 139
    26a4:	91 e0       	ldi	r25, 0x01	; 1
    26a6:	0e 94 f3 0d 	call	0x1be6	; 0x1be6 <H_LCD_Vid_Wrt_Str>
    26aa:	80 e0       	ldi	r24, 0x00	; 0
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	aa e7       	ldi	r26, 0x7A	; 122
    26b0:	b4 e4       	ldi	r27, 0x44	; 68
    26b2:	8b 87       	std	Y+11, r24	; 0x0b
    26b4:	9c 87       	std	Y+12, r25	; 0x0c
    26b6:	ad 87       	std	Y+13, r26	; 0x0d
    26b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    26bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    26be:	8d 85       	ldd	r24, Y+13	; 0x0d
    26c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    26c2:	20 e0       	ldi	r18, 0x00	; 0
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	4a ef       	ldi	r20, 0xFA	; 250
    26c8:	54 e4       	ldi	r21, 0x44	; 68
    26ca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26ce:	dc 01       	movw	r26, r24
    26d0:	cb 01       	movw	r24, r22
    26d2:	8f 83       	std	Y+7, r24	; 0x07
    26d4:	98 87       	std	Y+8, r25	; 0x08
    26d6:	a9 87       	std	Y+9, r26	; 0x09
    26d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    26da:	6f 81       	ldd	r22, Y+7	; 0x07
    26dc:	78 85       	ldd	r23, Y+8	; 0x08
    26de:	89 85       	ldd	r24, Y+9	; 0x09
    26e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    26e2:	20 e0       	ldi	r18, 0x00	; 0
    26e4:	30 e0       	ldi	r19, 0x00	; 0
    26e6:	40 e8       	ldi	r20, 0x80	; 128
    26e8:	5f e3       	ldi	r21, 0x3F	; 63
    26ea:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    26ee:	88 23       	and	r24, r24
    26f0:	2c f4       	brge	.+10     	; 0x26fc <main+0x206>
		__ticks = 1;
    26f2:	81 e0       	ldi	r24, 0x01	; 1
    26f4:	90 e0       	ldi	r25, 0x00	; 0
    26f6:	9e 83       	std	Y+6, r25	; 0x06
    26f8:	8d 83       	std	Y+5, r24	; 0x05
    26fa:	3f c0       	rjmp	.+126    	; 0x277a <main+0x284>
	else if (__tmp > 65535)
    26fc:	6f 81       	ldd	r22, Y+7	; 0x07
    26fe:	78 85       	ldd	r23, Y+8	; 0x08
    2700:	89 85       	ldd	r24, Y+9	; 0x09
    2702:	9a 85       	ldd	r25, Y+10	; 0x0a
    2704:	20 e0       	ldi	r18, 0x00	; 0
    2706:	3f ef       	ldi	r19, 0xFF	; 255
    2708:	4f e7       	ldi	r20, 0x7F	; 127
    270a:	57 e4       	ldi	r21, 0x47	; 71
    270c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2710:	18 16       	cp	r1, r24
    2712:	4c f5       	brge	.+82     	; 0x2766 <main+0x270>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2714:	6b 85       	ldd	r22, Y+11	; 0x0b
    2716:	7c 85       	ldd	r23, Y+12	; 0x0c
    2718:	8d 85       	ldd	r24, Y+13	; 0x0d
    271a:	9e 85       	ldd	r25, Y+14	; 0x0e
    271c:	20 e0       	ldi	r18, 0x00	; 0
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	40 e2       	ldi	r20, 0x20	; 32
    2722:	51 e4       	ldi	r21, 0x41	; 65
    2724:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2728:	dc 01       	movw	r26, r24
    272a:	cb 01       	movw	r24, r22
    272c:	bc 01       	movw	r22, r24
    272e:	cd 01       	movw	r24, r26
    2730:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2734:	dc 01       	movw	r26, r24
    2736:	cb 01       	movw	r24, r22
    2738:	9e 83       	std	Y+6, r25	; 0x06
    273a:	8d 83       	std	Y+5, r24	; 0x05
    273c:	0f c0       	rjmp	.+30     	; 0x275c <main+0x266>
    273e:	88 ec       	ldi	r24, 0xC8	; 200
    2740:	90 e0       	ldi	r25, 0x00	; 0
    2742:	9c 83       	std	Y+4, r25	; 0x04
    2744:	8b 83       	std	Y+3, r24	; 0x03
    2746:	8b 81       	ldd	r24, Y+3	; 0x03
    2748:	9c 81       	ldd	r25, Y+4	; 0x04
    274a:	01 97       	sbiw	r24, 0x01	; 1
    274c:	f1 f7       	brne	.-4      	; 0x274a <main+0x254>
    274e:	9c 83       	std	Y+4, r25	; 0x04
    2750:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2752:	8d 81       	ldd	r24, Y+5	; 0x05
    2754:	9e 81       	ldd	r25, Y+6	; 0x06
    2756:	01 97       	sbiw	r24, 0x01	; 1
    2758:	9e 83       	std	Y+6, r25	; 0x06
    275a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    275c:	8d 81       	ldd	r24, Y+5	; 0x05
    275e:	9e 81       	ldd	r25, Y+6	; 0x06
    2760:	00 97       	sbiw	r24, 0x00	; 0
    2762:	69 f7       	brne	.-38     	; 0x273e <main+0x248>
    2764:	ed ce       	rjmp	.-550    	; 0x2540 <main+0x4a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2766:	6f 81       	ldd	r22, Y+7	; 0x07
    2768:	78 85       	ldd	r23, Y+8	; 0x08
    276a:	89 85       	ldd	r24, Y+9	; 0x09
    276c:	9a 85       	ldd	r25, Y+10	; 0x0a
    276e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2772:	dc 01       	movw	r26, r24
    2774:	cb 01       	movw	r24, r22
    2776:	9e 83       	std	Y+6, r25	; 0x06
    2778:	8d 83       	std	Y+5, r24	; 0x05
    277a:	8d 81       	ldd	r24, Y+5	; 0x05
    277c:	9e 81       	ldd	r25, Y+6	; 0x06
    277e:	9a 83       	std	Y+2, r25	; 0x02
    2780:	89 83       	std	Y+1, r24	; 0x01
    2782:	89 81       	ldd	r24, Y+1	; 0x01
    2784:	9a 81       	ldd	r25, Y+2	; 0x02
    2786:	01 97       	sbiw	r24, 0x01	; 1
    2788:	f1 f7       	brne	.-4      	; 0x2786 <main+0x290>
    278a:	9a 83       	std	Y+2, r25	; 0x02
    278c:	89 83       	std	Y+1, r24	; 0x01
    278e:	d8 ce       	rjmp	.-592    	; 0x2540 <main+0x4a>

00002790 <ISR>:
		_delay_ms(1000);

	}
}
void ISR(void)
{
    2790:	df 93       	push	r29
    2792:	cf 93       	push	r28
    2794:	cd b7       	in	r28, 0x3d	; 61
    2796:	de b7       	in	r29, 0x3e	; 62
	counter++;
    2798:	80 91 76 01 	lds	r24, 0x0176
    279c:	8f 5f       	subi	r24, 0xFF	; 255
    279e:	80 93 76 01 	sts	0x0176, r24
	if(counter ==1)
    27a2:	80 91 76 01 	lds	r24, 0x0176
    27a6:	81 30       	cpi	r24, 0x01	; 1
    27a8:	31 f4       	brne	.+12     	; 0x27b6 <ISR+0x26>
	{
		M_TIMER1_Vid_ICUResetTimer();
    27aa:	0e 94 a6 10 	call	0x214c	; 0x214c <M_TIMER1_Vid_ICUResetTimer>
		M_TIMER1_Vid_ICUSetEdge(FALLING_EDGE);
    27ae:	80 e0       	ldi	r24, 0x00	; 0
    27b0:	0e 94 bc 10 	call	0x2178	; 0x2178 <M_TIMER1_Vid_ICUSetEdge>
    27b4:	28 c0       	rjmp	.+80     	; 0x2806 <ISR+0x76>
	}
	else if(counter==2)
    27b6:	80 91 76 01 	lds	r24, 0x0176
    27ba:	82 30       	cpi	r24, 0x02	; 2
    27bc:	51 f4       	brne	.+20     	; 0x27d2 <ISR+0x42>
	{
		Ton=M_TIMER1_U16_ICUGetValue();
    27be:	0e 94 b1 10 	call	0x2162	; 0x2162 <M_TIMER1_U16_ICUGetValue>
    27c2:	90 93 7a 01 	sts	0x017A, r25
    27c6:	80 93 79 01 	sts	0x0179, r24
		M_TIMER1_Vid_ICUSetEdge(RISING_EDGE);
    27ca:	81 e0       	ldi	r24, 0x01	; 1
    27cc:	0e 94 bc 10 	call	0x2178	; 0x2178 <M_TIMER1_Vid_ICUSetEdge>
    27d0:	1a c0       	rjmp	.+52     	; 0x2806 <ISR+0x76>
	}
	else if(counter ==3){
    27d2:	80 91 76 01 	lds	r24, 0x0176
    27d6:	83 30       	cpi	r24, 0x03	; 3
    27d8:	51 f4       	brne	.+20     	; 0x27ee <ISR+0x5e>
		period_counts=M_TIMER1_U16_ICUGetValue();
    27da:	0e 94 b1 10 	call	0x2162	; 0x2162 <M_TIMER1_U16_ICUGetValue>
    27de:	90 93 78 01 	sts	0x0178, r25
    27e2:	80 93 77 01 	sts	0x0177, r24
		M_TIMER1_Vid_ICUSetEdge(RISING_EDGE);
    27e6:	81 e0       	ldi	r24, 0x01	; 1
    27e8:	0e 94 bc 10 	call	0x2178	; 0x2178 <M_TIMER1_Vid_ICUSetEdge>
    27ec:	0c c0       	rjmp	.+24     	; 0x2806 <ISR+0x76>
	}
	else if(counter==4)
    27ee:	80 91 76 01 	lds	r24, 0x0176
    27f2:	84 30       	cpi	r24, 0x04	; 4
    27f4:	41 f4       	brne	.+16     	; 0x2806 <ISR+0x76>
	{
		period_on=M_TIMER1_U16_ICUGetValue();
    27f6:	0e 94 b1 10 	call	0x2162	; 0x2162 <M_TIMER1_U16_ICUGetValue>
    27fa:	90 93 7c 01 	sts	0x017C, r25
    27fe:	80 93 7b 01 	sts	0x017B, r24
		M_TIMER1_Vid_DeInit();
    2802:	0e 94 db 10 	call	0x21b6	; 0x21b6 <M_TIMER1_Vid_DeInit>
	}
}
    2806:	cf 91       	pop	r28
    2808:	df 91       	pop	r29
    280a:	08 95       	ret

0000280c <__divmodsi4>:
    280c:	97 fb       	bst	r25, 7
    280e:	09 2e       	mov	r0, r25
    2810:	05 26       	eor	r0, r21
    2812:	0e d0       	rcall	.+28     	; 0x2830 <__divmodsi4_neg1>
    2814:	57 fd       	sbrc	r21, 7
    2816:	04 d0       	rcall	.+8      	; 0x2820 <__divmodsi4_neg2>
    2818:	14 d0       	rcall	.+40     	; 0x2842 <__udivmodsi4>
    281a:	0a d0       	rcall	.+20     	; 0x2830 <__divmodsi4_neg1>
    281c:	00 1c       	adc	r0, r0
    281e:	38 f4       	brcc	.+14     	; 0x282e <__divmodsi4_exit>

00002820 <__divmodsi4_neg2>:
    2820:	50 95       	com	r21
    2822:	40 95       	com	r20
    2824:	30 95       	com	r19
    2826:	21 95       	neg	r18
    2828:	3f 4f       	sbci	r19, 0xFF	; 255
    282a:	4f 4f       	sbci	r20, 0xFF	; 255
    282c:	5f 4f       	sbci	r21, 0xFF	; 255

0000282e <__divmodsi4_exit>:
    282e:	08 95       	ret

00002830 <__divmodsi4_neg1>:
    2830:	f6 f7       	brtc	.-4      	; 0x282e <__divmodsi4_exit>
    2832:	90 95       	com	r25
    2834:	80 95       	com	r24
    2836:	70 95       	com	r23
    2838:	61 95       	neg	r22
    283a:	7f 4f       	sbci	r23, 0xFF	; 255
    283c:	8f 4f       	sbci	r24, 0xFF	; 255
    283e:	9f 4f       	sbci	r25, 0xFF	; 255
    2840:	08 95       	ret

00002842 <__udivmodsi4>:
    2842:	a1 e2       	ldi	r26, 0x21	; 33
    2844:	1a 2e       	mov	r1, r26
    2846:	aa 1b       	sub	r26, r26
    2848:	bb 1b       	sub	r27, r27
    284a:	fd 01       	movw	r30, r26
    284c:	0d c0       	rjmp	.+26     	; 0x2868 <__udivmodsi4_ep>

0000284e <__udivmodsi4_loop>:
    284e:	aa 1f       	adc	r26, r26
    2850:	bb 1f       	adc	r27, r27
    2852:	ee 1f       	adc	r30, r30
    2854:	ff 1f       	adc	r31, r31
    2856:	a2 17       	cp	r26, r18
    2858:	b3 07       	cpc	r27, r19
    285a:	e4 07       	cpc	r30, r20
    285c:	f5 07       	cpc	r31, r21
    285e:	20 f0       	brcs	.+8      	; 0x2868 <__udivmodsi4_ep>
    2860:	a2 1b       	sub	r26, r18
    2862:	b3 0b       	sbc	r27, r19
    2864:	e4 0b       	sbc	r30, r20
    2866:	f5 0b       	sbc	r31, r21

00002868 <__udivmodsi4_ep>:
    2868:	66 1f       	adc	r22, r22
    286a:	77 1f       	adc	r23, r23
    286c:	88 1f       	adc	r24, r24
    286e:	99 1f       	adc	r25, r25
    2870:	1a 94       	dec	r1
    2872:	69 f7       	brne	.-38     	; 0x284e <__udivmodsi4_loop>
    2874:	60 95       	com	r22
    2876:	70 95       	com	r23
    2878:	80 95       	com	r24
    287a:	90 95       	com	r25
    287c:	9b 01       	movw	r18, r22
    287e:	ac 01       	movw	r20, r24
    2880:	bd 01       	movw	r22, r26
    2882:	cf 01       	movw	r24, r30
    2884:	08 95       	ret

00002886 <__prologue_saves__>:
    2886:	2f 92       	push	r2
    2888:	3f 92       	push	r3
    288a:	4f 92       	push	r4
    288c:	5f 92       	push	r5
    288e:	6f 92       	push	r6
    2890:	7f 92       	push	r7
    2892:	8f 92       	push	r8
    2894:	9f 92       	push	r9
    2896:	af 92       	push	r10
    2898:	bf 92       	push	r11
    289a:	cf 92       	push	r12
    289c:	df 92       	push	r13
    289e:	ef 92       	push	r14
    28a0:	ff 92       	push	r15
    28a2:	0f 93       	push	r16
    28a4:	1f 93       	push	r17
    28a6:	cf 93       	push	r28
    28a8:	df 93       	push	r29
    28aa:	cd b7       	in	r28, 0x3d	; 61
    28ac:	de b7       	in	r29, 0x3e	; 62
    28ae:	ca 1b       	sub	r28, r26
    28b0:	db 0b       	sbc	r29, r27
    28b2:	0f b6       	in	r0, 0x3f	; 63
    28b4:	f8 94       	cli
    28b6:	de bf       	out	0x3e, r29	; 62
    28b8:	0f be       	out	0x3f, r0	; 63
    28ba:	cd bf       	out	0x3d, r28	; 61
    28bc:	09 94       	ijmp

000028be <__epilogue_restores__>:
    28be:	2a 88       	ldd	r2, Y+18	; 0x12
    28c0:	39 88       	ldd	r3, Y+17	; 0x11
    28c2:	48 88       	ldd	r4, Y+16	; 0x10
    28c4:	5f 84       	ldd	r5, Y+15	; 0x0f
    28c6:	6e 84       	ldd	r6, Y+14	; 0x0e
    28c8:	7d 84       	ldd	r7, Y+13	; 0x0d
    28ca:	8c 84       	ldd	r8, Y+12	; 0x0c
    28cc:	9b 84       	ldd	r9, Y+11	; 0x0b
    28ce:	aa 84       	ldd	r10, Y+10	; 0x0a
    28d0:	b9 84       	ldd	r11, Y+9	; 0x09
    28d2:	c8 84       	ldd	r12, Y+8	; 0x08
    28d4:	df 80       	ldd	r13, Y+7	; 0x07
    28d6:	ee 80       	ldd	r14, Y+6	; 0x06
    28d8:	fd 80       	ldd	r15, Y+5	; 0x05
    28da:	0c 81       	ldd	r16, Y+4	; 0x04
    28dc:	1b 81       	ldd	r17, Y+3	; 0x03
    28de:	aa 81       	ldd	r26, Y+2	; 0x02
    28e0:	b9 81       	ldd	r27, Y+1	; 0x01
    28e2:	ce 0f       	add	r28, r30
    28e4:	d1 1d       	adc	r29, r1
    28e6:	0f b6       	in	r0, 0x3f	; 63
    28e8:	f8 94       	cli
    28ea:	de bf       	out	0x3e, r29	; 62
    28ec:	0f be       	out	0x3f, r0	; 63
    28ee:	cd bf       	out	0x3d, r28	; 61
    28f0:	ed 01       	movw	r28, r26
    28f2:	08 95       	ret

000028f4 <sprintf>:
    28f4:	ae e0       	ldi	r26, 0x0E	; 14
    28f6:	b0 e0       	ldi	r27, 0x00	; 0
    28f8:	e0 e8       	ldi	r30, 0x80	; 128
    28fa:	f4 e1       	ldi	r31, 0x14	; 20
    28fc:	0c 94 51 14 	jmp	0x28a2	; 0x28a2 <__prologue_saves__+0x1c>
    2900:	0d 89       	ldd	r16, Y+21	; 0x15
    2902:	1e 89       	ldd	r17, Y+22	; 0x16
    2904:	86 e0       	ldi	r24, 0x06	; 6
    2906:	8c 83       	std	Y+4, r24	; 0x04
    2908:	1a 83       	std	Y+2, r17	; 0x02
    290a:	09 83       	std	Y+1, r16	; 0x01
    290c:	8f ef       	ldi	r24, 0xFF	; 255
    290e:	9f e7       	ldi	r25, 0x7F	; 127
    2910:	9e 83       	std	Y+6, r25	; 0x06
    2912:	8d 83       	std	Y+5, r24	; 0x05
    2914:	9e 01       	movw	r18, r28
    2916:	27 5e       	subi	r18, 0xE7	; 231
    2918:	3f 4f       	sbci	r19, 0xFF	; 255
    291a:	ce 01       	movw	r24, r28
    291c:	01 96       	adiw	r24, 0x01	; 1
    291e:	6f 89       	ldd	r22, Y+23	; 0x17
    2920:	78 8d       	ldd	r23, Y+24	; 0x18
    2922:	a9 01       	movw	r20, r18
    2924:	0e 94 9e 14 	call	0x293c	; 0x293c <vfprintf>
    2928:	2f 81       	ldd	r18, Y+7	; 0x07
    292a:	38 85       	ldd	r19, Y+8	; 0x08
    292c:	02 0f       	add	r16, r18
    292e:	13 1f       	adc	r17, r19
    2930:	f8 01       	movw	r30, r16
    2932:	10 82       	st	Z, r1
    2934:	2e 96       	adiw	r28, 0x0e	; 14
    2936:	e4 e0       	ldi	r30, 0x04	; 4
    2938:	0c 94 6d 14 	jmp	0x28da	; 0x28da <__epilogue_restores__+0x1c>

0000293c <vfprintf>:
    293c:	ab e0       	ldi	r26, 0x0B	; 11
    293e:	b0 e0       	ldi	r27, 0x00	; 0
    2940:	e4 ea       	ldi	r30, 0xA4	; 164
    2942:	f4 e1       	ldi	r31, 0x14	; 20
    2944:	0c 94 43 14 	jmp	0x2886	; 0x2886 <__prologue_saves__>
    2948:	3c 01       	movw	r6, r24
    294a:	2b 01       	movw	r4, r22
    294c:	5a 01       	movw	r10, r20
    294e:	fc 01       	movw	r30, r24
    2950:	17 82       	std	Z+7, r1	; 0x07
    2952:	16 82       	std	Z+6, r1	; 0x06
    2954:	83 81       	ldd	r24, Z+3	; 0x03
    2956:	81 fd       	sbrc	r24, 1
    2958:	03 c0       	rjmp	.+6      	; 0x2960 <vfprintf+0x24>
    295a:	6f ef       	ldi	r22, 0xFF	; 255
    295c:	7f ef       	ldi	r23, 0xFF	; 255
    295e:	c6 c1       	rjmp	.+908    	; 0x2cec <vfprintf+0x3b0>
    2960:	9a e0       	ldi	r25, 0x0A	; 10
    2962:	89 2e       	mov	r8, r25
    2964:	1e 01       	movw	r2, r28
    2966:	08 94       	sec
    2968:	21 1c       	adc	r2, r1
    296a:	31 1c       	adc	r3, r1
    296c:	f3 01       	movw	r30, r6
    296e:	23 81       	ldd	r18, Z+3	; 0x03
    2970:	f2 01       	movw	r30, r4
    2972:	23 fd       	sbrc	r18, 3
    2974:	85 91       	lpm	r24, Z+
    2976:	23 ff       	sbrs	r18, 3
    2978:	81 91       	ld	r24, Z+
    297a:	2f 01       	movw	r4, r30
    297c:	88 23       	and	r24, r24
    297e:	09 f4       	brne	.+2      	; 0x2982 <vfprintf+0x46>
    2980:	b2 c1       	rjmp	.+868    	; 0x2ce6 <vfprintf+0x3aa>
    2982:	85 32       	cpi	r24, 0x25	; 37
    2984:	39 f4       	brne	.+14     	; 0x2994 <vfprintf+0x58>
    2986:	23 fd       	sbrc	r18, 3
    2988:	85 91       	lpm	r24, Z+
    298a:	23 ff       	sbrs	r18, 3
    298c:	81 91       	ld	r24, Z+
    298e:	2f 01       	movw	r4, r30
    2990:	85 32       	cpi	r24, 0x25	; 37
    2992:	29 f4       	brne	.+10     	; 0x299e <vfprintf+0x62>
    2994:	90 e0       	ldi	r25, 0x00	; 0
    2996:	b3 01       	movw	r22, r6
    2998:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    299c:	e7 cf       	rjmp	.-50     	; 0x296c <vfprintf+0x30>
    299e:	98 2f       	mov	r25, r24
    29a0:	ff 24       	eor	r15, r15
    29a2:	ee 24       	eor	r14, r14
    29a4:	99 24       	eor	r9, r9
    29a6:	ff e1       	ldi	r31, 0x1F	; 31
    29a8:	ff 15       	cp	r31, r15
    29aa:	d0 f0       	brcs	.+52     	; 0x29e0 <vfprintf+0xa4>
    29ac:	9b 32       	cpi	r25, 0x2B	; 43
    29ae:	69 f0       	breq	.+26     	; 0x29ca <vfprintf+0x8e>
    29b0:	9c 32       	cpi	r25, 0x2C	; 44
    29b2:	28 f4       	brcc	.+10     	; 0x29be <vfprintf+0x82>
    29b4:	90 32       	cpi	r25, 0x20	; 32
    29b6:	59 f0       	breq	.+22     	; 0x29ce <vfprintf+0x92>
    29b8:	93 32       	cpi	r25, 0x23	; 35
    29ba:	91 f4       	brne	.+36     	; 0x29e0 <vfprintf+0xa4>
    29bc:	0e c0       	rjmp	.+28     	; 0x29da <vfprintf+0x9e>
    29be:	9d 32       	cpi	r25, 0x2D	; 45
    29c0:	49 f0       	breq	.+18     	; 0x29d4 <vfprintf+0x98>
    29c2:	90 33       	cpi	r25, 0x30	; 48
    29c4:	69 f4       	brne	.+26     	; 0x29e0 <vfprintf+0xa4>
    29c6:	41 e0       	ldi	r20, 0x01	; 1
    29c8:	24 c0       	rjmp	.+72     	; 0x2a12 <vfprintf+0xd6>
    29ca:	52 e0       	ldi	r21, 0x02	; 2
    29cc:	f5 2a       	or	r15, r21
    29ce:	84 e0       	ldi	r24, 0x04	; 4
    29d0:	f8 2a       	or	r15, r24
    29d2:	28 c0       	rjmp	.+80     	; 0x2a24 <vfprintf+0xe8>
    29d4:	98 e0       	ldi	r25, 0x08	; 8
    29d6:	f9 2a       	or	r15, r25
    29d8:	25 c0       	rjmp	.+74     	; 0x2a24 <vfprintf+0xe8>
    29da:	e0 e1       	ldi	r30, 0x10	; 16
    29dc:	fe 2a       	or	r15, r30
    29de:	22 c0       	rjmp	.+68     	; 0x2a24 <vfprintf+0xe8>
    29e0:	f7 fc       	sbrc	r15, 7
    29e2:	29 c0       	rjmp	.+82     	; 0x2a36 <vfprintf+0xfa>
    29e4:	89 2f       	mov	r24, r25
    29e6:	80 53       	subi	r24, 0x30	; 48
    29e8:	8a 30       	cpi	r24, 0x0A	; 10
    29ea:	70 f4       	brcc	.+28     	; 0x2a08 <vfprintf+0xcc>
    29ec:	f6 fe       	sbrs	r15, 6
    29ee:	05 c0       	rjmp	.+10     	; 0x29fa <vfprintf+0xbe>
    29f0:	98 9c       	mul	r9, r8
    29f2:	90 2c       	mov	r9, r0
    29f4:	11 24       	eor	r1, r1
    29f6:	98 0e       	add	r9, r24
    29f8:	15 c0       	rjmp	.+42     	; 0x2a24 <vfprintf+0xe8>
    29fa:	e8 9c       	mul	r14, r8
    29fc:	e0 2c       	mov	r14, r0
    29fe:	11 24       	eor	r1, r1
    2a00:	e8 0e       	add	r14, r24
    2a02:	f0 e2       	ldi	r31, 0x20	; 32
    2a04:	ff 2a       	or	r15, r31
    2a06:	0e c0       	rjmp	.+28     	; 0x2a24 <vfprintf+0xe8>
    2a08:	9e 32       	cpi	r25, 0x2E	; 46
    2a0a:	29 f4       	brne	.+10     	; 0x2a16 <vfprintf+0xda>
    2a0c:	f6 fc       	sbrc	r15, 6
    2a0e:	6b c1       	rjmp	.+726    	; 0x2ce6 <vfprintf+0x3aa>
    2a10:	40 e4       	ldi	r20, 0x40	; 64
    2a12:	f4 2a       	or	r15, r20
    2a14:	07 c0       	rjmp	.+14     	; 0x2a24 <vfprintf+0xe8>
    2a16:	9c 36       	cpi	r25, 0x6C	; 108
    2a18:	19 f4       	brne	.+6      	; 0x2a20 <vfprintf+0xe4>
    2a1a:	50 e8       	ldi	r21, 0x80	; 128
    2a1c:	f5 2a       	or	r15, r21
    2a1e:	02 c0       	rjmp	.+4      	; 0x2a24 <vfprintf+0xe8>
    2a20:	98 36       	cpi	r25, 0x68	; 104
    2a22:	49 f4       	brne	.+18     	; 0x2a36 <vfprintf+0xfa>
    2a24:	f2 01       	movw	r30, r4
    2a26:	23 fd       	sbrc	r18, 3
    2a28:	95 91       	lpm	r25, Z+
    2a2a:	23 ff       	sbrs	r18, 3
    2a2c:	91 91       	ld	r25, Z+
    2a2e:	2f 01       	movw	r4, r30
    2a30:	99 23       	and	r25, r25
    2a32:	09 f0       	breq	.+2      	; 0x2a36 <vfprintf+0xfa>
    2a34:	b8 cf       	rjmp	.-144    	; 0x29a6 <vfprintf+0x6a>
    2a36:	89 2f       	mov	r24, r25
    2a38:	85 54       	subi	r24, 0x45	; 69
    2a3a:	83 30       	cpi	r24, 0x03	; 3
    2a3c:	18 f0       	brcs	.+6      	; 0x2a44 <vfprintf+0x108>
    2a3e:	80 52       	subi	r24, 0x20	; 32
    2a40:	83 30       	cpi	r24, 0x03	; 3
    2a42:	38 f4       	brcc	.+14     	; 0x2a52 <vfprintf+0x116>
    2a44:	44 e0       	ldi	r20, 0x04	; 4
    2a46:	50 e0       	ldi	r21, 0x00	; 0
    2a48:	a4 0e       	add	r10, r20
    2a4a:	b5 1e       	adc	r11, r21
    2a4c:	5f e3       	ldi	r21, 0x3F	; 63
    2a4e:	59 83       	std	Y+1, r21	; 0x01
    2a50:	0f c0       	rjmp	.+30     	; 0x2a70 <vfprintf+0x134>
    2a52:	93 36       	cpi	r25, 0x63	; 99
    2a54:	31 f0       	breq	.+12     	; 0x2a62 <vfprintf+0x126>
    2a56:	93 37       	cpi	r25, 0x73	; 115
    2a58:	79 f0       	breq	.+30     	; 0x2a78 <vfprintf+0x13c>
    2a5a:	93 35       	cpi	r25, 0x53	; 83
    2a5c:	09 f0       	breq	.+2      	; 0x2a60 <vfprintf+0x124>
    2a5e:	56 c0       	rjmp	.+172    	; 0x2b0c <vfprintf+0x1d0>
    2a60:	20 c0       	rjmp	.+64     	; 0x2aa2 <vfprintf+0x166>
    2a62:	f5 01       	movw	r30, r10
    2a64:	80 81       	ld	r24, Z
    2a66:	89 83       	std	Y+1, r24	; 0x01
    2a68:	42 e0       	ldi	r20, 0x02	; 2
    2a6a:	50 e0       	ldi	r21, 0x00	; 0
    2a6c:	a4 0e       	add	r10, r20
    2a6e:	b5 1e       	adc	r11, r21
    2a70:	61 01       	movw	r12, r2
    2a72:	01 e0       	ldi	r16, 0x01	; 1
    2a74:	10 e0       	ldi	r17, 0x00	; 0
    2a76:	12 c0       	rjmp	.+36     	; 0x2a9c <vfprintf+0x160>
    2a78:	f5 01       	movw	r30, r10
    2a7a:	c0 80       	ld	r12, Z
    2a7c:	d1 80       	ldd	r13, Z+1	; 0x01
    2a7e:	f6 fc       	sbrc	r15, 6
    2a80:	03 c0       	rjmp	.+6      	; 0x2a88 <vfprintf+0x14c>
    2a82:	6f ef       	ldi	r22, 0xFF	; 255
    2a84:	7f ef       	ldi	r23, 0xFF	; 255
    2a86:	02 c0       	rjmp	.+4      	; 0x2a8c <vfprintf+0x150>
    2a88:	69 2d       	mov	r22, r9
    2a8a:	70 e0       	ldi	r23, 0x00	; 0
    2a8c:	42 e0       	ldi	r20, 0x02	; 2
    2a8e:	50 e0       	ldi	r21, 0x00	; 0
    2a90:	a4 0e       	add	r10, r20
    2a92:	b5 1e       	adc	r11, r21
    2a94:	c6 01       	movw	r24, r12
    2a96:	0e 94 86 16 	call	0x2d0c	; 0x2d0c <strnlen>
    2a9a:	8c 01       	movw	r16, r24
    2a9c:	5f e7       	ldi	r21, 0x7F	; 127
    2a9e:	f5 22       	and	r15, r21
    2aa0:	14 c0       	rjmp	.+40     	; 0x2aca <vfprintf+0x18e>
    2aa2:	f5 01       	movw	r30, r10
    2aa4:	c0 80       	ld	r12, Z
    2aa6:	d1 80       	ldd	r13, Z+1	; 0x01
    2aa8:	f6 fc       	sbrc	r15, 6
    2aaa:	03 c0       	rjmp	.+6      	; 0x2ab2 <vfprintf+0x176>
    2aac:	6f ef       	ldi	r22, 0xFF	; 255
    2aae:	7f ef       	ldi	r23, 0xFF	; 255
    2ab0:	02 c0       	rjmp	.+4      	; 0x2ab6 <vfprintf+0x17a>
    2ab2:	69 2d       	mov	r22, r9
    2ab4:	70 e0       	ldi	r23, 0x00	; 0
    2ab6:	42 e0       	ldi	r20, 0x02	; 2
    2ab8:	50 e0       	ldi	r21, 0x00	; 0
    2aba:	a4 0e       	add	r10, r20
    2abc:	b5 1e       	adc	r11, r21
    2abe:	c6 01       	movw	r24, r12
    2ac0:	0e 94 7b 16 	call	0x2cf6	; 0x2cf6 <strnlen_P>
    2ac4:	8c 01       	movw	r16, r24
    2ac6:	50 e8       	ldi	r21, 0x80	; 128
    2ac8:	f5 2a       	or	r15, r21
    2aca:	f3 fe       	sbrs	r15, 3
    2acc:	07 c0       	rjmp	.+14     	; 0x2adc <vfprintf+0x1a0>
    2ace:	1a c0       	rjmp	.+52     	; 0x2b04 <vfprintf+0x1c8>
    2ad0:	80 e2       	ldi	r24, 0x20	; 32
    2ad2:	90 e0       	ldi	r25, 0x00	; 0
    2ad4:	b3 01       	movw	r22, r6
    2ad6:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    2ada:	ea 94       	dec	r14
    2adc:	8e 2d       	mov	r24, r14
    2ade:	90 e0       	ldi	r25, 0x00	; 0
    2ae0:	08 17       	cp	r16, r24
    2ae2:	19 07       	cpc	r17, r25
    2ae4:	a8 f3       	brcs	.-22     	; 0x2ad0 <vfprintf+0x194>
    2ae6:	0e c0       	rjmp	.+28     	; 0x2b04 <vfprintf+0x1c8>
    2ae8:	f6 01       	movw	r30, r12
    2aea:	f7 fc       	sbrc	r15, 7
    2aec:	85 91       	lpm	r24, Z+
    2aee:	f7 fe       	sbrs	r15, 7
    2af0:	81 91       	ld	r24, Z+
    2af2:	6f 01       	movw	r12, r30
    2af4:	90 e0       	ldi	r25, 0x00	; 0
    2af6:	b3 01       	movw	r22, r6
    2af8:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    2afc:	e1 10       	cpse	r14, r1
    2afe:	ea 94       	dec	r14
    2b00:	01 50       	subi	r16, 0x01	; 1
    2b02:	10 40       	sbci	r17, 0x00	; 0
    2b04:	01 15       	cp	r16, r1
    2b06:	11 05       	cpc	r17, r1
    2b08:	79 f7       	brne	.-34     	; 0x2ae8 <vfprintf+0x1ac>
    2b0a:	ea c0       	rjmp	.+468    	; 0x2ce0 <vfprintf+0x3a4>
    2b0c:	94 36       	cpi	r25, 0x64	; 100
    2b0e:	11 f0       	breq	.+4      	; 0x2b14 <vfprintf+0x1d8>
    2b10:	99 36       	cpi	r25, 0x69	; 105
    2b12:	69 f5       	brne	.+90     	; 0x2b6e <vfprintf+0x232>
    2b14:	f7 fe       	sbrs	r15, 7
    2b16:	08 c0       	rjmp	.+16     	; 0x2b28 <vfprintf+0x1ec>
    2b18:	f5 01       	movw	r30, r10
    2b1a:	20 81       	ld	r18, Z
    2b1c:	31 81       	ldd	r19, Z+1	; 0x01
    2b1e:	42 81       	ldd	r20, Z+2	; 0x02
    2b20:	53 81       	ldd	r21, Z+3	; 0x03
    2b22:	84 e0       	ldi	r24, 0x04	; 4
    2b24:	90 e0       	ldi	r25, 0x00	; 0
    2b26:	0a c0       	rjmp	.+20     	; 0x2b3c <vfprintf+0x200>
    2b28:	f5 01       	movw	r30, r10
    2b2a:	80 81       	ld	r24, Z
    2b2c:	91 81       	ldd	r25, Z+1	; 0x01
    2b2e:	9c 01       	movw	r18, r24
    2b30:	44 27       	eor	r20, r20
    2b32:	37 fd       	sbrc	r19, 7
    2b34:	40 95       	com	r20
    2b36:	54 2f       	mov	r21, r20
    2b38:	82 e0       	ldi	r24, 0x02	; 2
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	a8 0e       	add	r10, r24
    2b3e:	b9 1e       	adc	r11, r25
    2b40:	9f e6       	ldi	r25, 0x6F	; 111
    2b42:	f9 22       	and	r15, r25
    2b44:	57 ff       	sbrs	r21, 7
    2b46:	09 c0       	rjmp	.+18     	; 0x2b5a <vfprintf+0x21e>
    2b48:	50 95       	com	r21
    2b4a:	40 95       	com	r20
    2b4c:	30 95       	com	r19
    2b4e:	21 95       	neg	r18
    2b50:	3f 4f       	sbci	r19, 0xFF	; 255
    2b52:	4f 4f       	sbci	r20, 0xFF	; 255
    2b54:	5f 4f       	sbci	r21, 0xFF	; 255
    2b56:	e0 e8       	ldi	r30, 0x80	; 128
    2b58:	fe 2a       	or	r15, r30
    2b5a:	ca 01       	movw	r24, r20
    2b5c:	b9 01       	movw	r22, r18
    2b5e:	a1 01       	movw	r20, r2
    2b60:	2a e0       	ldi	r18, 0x0A	; 10
    2b62:	30 e0       	ldi	r19, 0x00	; 0
    2b64:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <__ultoa_invert>
    2b68:	d8 2e       	mov	r13, r24
    2b6a:	d2 18       	sub	r13, r2
    2b6c:	40 c0       	rjmp	.+128    	; 0x2bee <vfprintf+0x2b2>
    2b6e:	95 37       	cpi	r25, 0x75	; 117
    2b70:	29 f4       	brne	.+10     	; 0x2b7c <vfprintf+0x240>
    2b72:	1f 2d       	mov	r17, r15
    2b74:	1f 7e       	andi	r17, 0xEF	; 239
    2b76:	2a e0       	ldi	r18, 0x0A	; 10
    2b78:	30 e0       	ldi	r19, 0x00	; 0
    2b7a:	1d c0       	rjmp	.+58     	; 0x2bb6 <vfprintf+0x27a>
    2b7c:	1f 2d       	mov	r17, r15
    2b7e:	19 7f       	andi	r17, 0xF9	; 249
    2b80:	9f 36       	cpi	r25, 0x6F	; 111
    2b82:	61 f0       	breq	.+24     	; 0x2b9c <vfprintf+0x260>
    2b84:	90 37       	cpi	r25, 0x70	; 112
    2b86:	20 f4       	brcc	.+8      	; 0x2b90 <vfprintf+0x254>
    2b88:	98 35       	cpi	r25, 0x58	; 88
    2b8a:	09 f0       	breq	.+2      	; 0x2b8e <vfprintf+0x252>
    2b8c:	ac c0       	rjmp	.+344    	; 0x2ce6 <vfprintf+0x3aa>
    2b8e:	0f c0       	rjmp	.+30     	; 0x2bae <vfprintf+0x272>
    2b90:	90 37       	cpi	r25, 0x70	; 112
    2b92:	39 f0       	breq	.+14     	; 0x2ba2 <vfprintf+0x266>
    2b94:	98 37       	cpi	r25, 0x78	; 120
    2b96:	09 f0       	breq	.+2      	; 0x2b9a <vfprintf+0x25e>
    2b98:	a6 c0       	rjmp	.+332    	; 0x2ce6 <vfprintf+0x3aa>
    2b9a:	04 c0       	rjmp	.+8      	; 0x2ba4 <vfprintf+0x268>
    2b9c:	28 e0       	ldi	r18, 0x08	; 8
    2b9e:	30 e0       	ldi	r19, 0x00	; 0
    2ba0:	0a c0       	rjmp	.+20     	; 0x2bb6 <vfprintf+0x27a>
    2ba2:	10 61       	ori	r17, 0x10	; 16
    2ba4:	14 fd       	sbrc	r17, 4
    2ba6:	14 60       	ori	r17, 0x04	; 4
    2ba8:	20 e1       	ldi	r18, 0x10	; 16
    2baa:	30 e0       	ldi	r19, 0x00	; 0
    2bac:	04 c0       	rjmp	.+8      	; 0x2bb6 <vfprintf+0x27a>
    2bae:	14 fd       	sbrc	r17, 4
    2bb0:	16 60       	ori	r17, 0x06	; 6
    2bb2:	20 e1       	ldi	r18, 0x10	; 16
    2bb4:	32 e0       	ldi	r19, 0x02	; 2
    2bb6:	17 ff       	sbrs	r17, 7
    2bb8:	08 c0       	rjmp	.+16     	; 0x2bca <vfprintf+0x28e>
    2bba:	f5 01       	movw	r30, r10
    2bbc:	60 81       	ld	r22, Z
    2bbe:	71 81       	ldd	r23, Z+1	; 0x01
    2bc0:	82 81       	ldd	r24, Z+2	; 0x02
    2bc2:	93 81       	ldd	r25, Z+3	; 0x03
    2bc4:	44 e0       	ldi	r20, 0x04	; 4
    2bc6:	50 e0       	ldi	r21, 0x00	; 0
    2bc8:	08 c0       	rjmp	.+16     	; 0x2bda <vfprintf+0x29e>
    2bca:	f5 01       	movw	r30, r10
    2bcc:	80 81       	ld	r24, Z
    2bce:	91 81       	ldd	r25, Z+1	; 0x01
    2bd0:	bc 01       	movw	r22, r24
    2bd2:	80 e0       	ldi	r24, 0x00	; 0
    2bd4:	90 e0       	ldi	r25, 0x00	; 0
    2bd6:	42 e0       	ldi	r20, 0x02	; 2
    2bd8:	50 e0       	ldi	r21, 0x00	; 0
    2bda:	a4 0e       	add	r10, r20
    2bdc:	b5 1e       	adc	r11, r21
    2bde:	a1 01       	movw	r20, r2
    2be0:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <__ultoa_invert>
    2be4:	d8 2e       	mov	r13, r24
    2be6:	d2 18       	sub	r13, r2
    2be8:	8f e7       	ldi	r24, 0x7F	; 127
    2bea:	f8 2e       	mov	r15, r24
    2bec:	f1 22       	and	r15, r17
    2bee:	f6 fe       	sbrs	r15, 6
    2bf0:	0b c0       	rjmp	.+22     	; 0x2c08 <vfprintf+0x2cc>
    2bf2:	5e ef       	ldi	r21, 0xFE	; 254
    2bf4:	f5 22       	and	r15, r21
    2bf6:	d9 14       	cp	r13, r9
    2bf8:	38 f4       	brcc	.+14     	; 0x2c08 <vfprintf+0x2cc>
    2bfa:	f4 fe       	sbrs	r15, 4
    2bfc:	07 c0       	rjmp	.+14     	; 0x2c0c <vfprintf+0x2d0>
    2bfe:	f2 fc       	sbrc	r15, 2
    2c00:	05 c0       	rjmp	.+10     	; 0x2c0c <vfprintf+0x2d0>
    2c02:	8f ee       	ldi	r24, 0xEF	; 239
    2c04:	f8 22       	and	r15, r24
    2c06:	02 c0       	rjmp	.+4      	; 0x2c0c <vfprintf+0x2d0>
    2c08:	1d 2d       	mov	r17, r13
    2c0a:	01 c0       	rjmp	.+2      	; 0x2c0e <vfprintf+0x2d2>
    2c0c:	19 2d       	mov	r17, r9
    2c0e:	f4 fe       	sbrs	r15, 4
    2c10:	0d c0       	rjmp	.+26     	; 0x2c2c <vfprintf+0x2f0>
    2c12:	fe 01       	movw	r30, r28
    2c14:	ed 0d       	add	r30, r13
    2c16:	f1 1d       	adc	r31, r1
    2c18:	80 81       	ld	r24, Z
    2c1a:	80 33       	cpi	r24, 0x30	; 48
    2c1c:	19 f4       	brne	.+6      	; 0x2c24 <vfprintf+0x2e8>
    2c1e:	99 ee       	ldi	r25, 0xE9	; 233
    2c20:	f9 22       	and	r15, r25
    2c22:	08 c0       	rjmp	.+16     	; 0x2c34 <vfprintf+0x2f8>
    2c24:	1f 5f       	subi	r17, 0xFF	; 255
    2c26:	f2 fe       	sbrs	r15, 2
    2c28:	05 c0       	rjmp	.+10     	; 0x2c34 <vfprintf+0x2f8>
    2c2a:	03 c0       	rjmp	.+6      	; 0x2c32 <vfprintf+0x2f6>
    2c2c:	8f 2d       	mov	r24, r15
    2c2e:	86 78       	andi	r24, 0x86	; 134
    2c30:	09 f0       	breq	.+2      	; 0x2c34 <vfprintf+0x2f8>
    2c32:	1f 5f       	subi	r17, 0xFF	; 255
    2c34:	0f 2d       	mov	r16, r15
    2c36:	f3 fc       	sbrc	r15, 3
    2c38:	14 c0       	rjmp	.+40     	; 0x2c62 <vfprintf+0x326>
    2c3a:	f0 fe       	sbrs	r15, 0
    2c3c:	0f c0       	rjmp	.+30     	; 0x2c5c <vfprintf+0x320>
    2c3e:	1e 15       	cp	r17, r14
    2c40:	10 f0       	brcs	.+4      	; 0x2c46 <vfprintf+0x30a>
    2c42:	9d 2c       	mov	r9, r13
    2c44:	0b c0       	rjmp	.+22     	; 0x2c5c <vfprintf+0x320>
    2c46:	9d 2c       	mov	r9, r13
    2c48:	9e 0c       	add	r9, r14
    2c4a:	91 1a       	sub	r9, r17
    2c4c:	1e 2d       	mov	r17, r14
    2c4e:	06 c0       	rjmp	.+12     	; 0x2c5c <vfprintf+0x320>
    2c50:	80 e2       	ldi	r24, 0x20	; 32
    2c52:	90 e0       	ldi	r25, 0x00	; 0
    2c54:	b3 01       	movw	r22, r6
    2c56:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    2c5a:	1f 5f       	subi	r17, 0xFF	; 255
    2c5c:	1e 15       	cp	r17, r14
    2c5e:	c0 f3       	brcs	.-16     	; 0x2c50 <vfprintf+0x314>
    2c60:	04 c0       	rjmp	.+8      	; 0x2c6a <vfprintf+0x32e>
    2c62:	1e 15       	cp	r17, r14
    2c64:	10 f4       	brcc	.+4      	; 0x2c6a <vfprintf+0x32e>
    2c66:	e1 1a       	sub	r14, r17
    2c68:	01 c0       	rjmp	.+2      	; 0x2c6c <vfprintf+0x330>
    2c6a:	ee 24       	eor	r14, r14
    2c6c:	04 ff       	sbrs	r16, 4
    2c6e:	0f c0       	rjmp	.+30     	; 0x2c8e <vfprintf+0x352>
    2c70:	80 e3       	ldi	r24, 0x30	; 48
    2c72:	90 e0       	ldi	r25, 0x00	; 0
    2c74:	b3 01       	movw	r22, r6
    2c76:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    2c7a:	02 ff       	sbrs	r16, 2
    2c7c:	1d c0       	rjmp	.+58     	; 0x2cb8 <vfprintf+0x37c>
    2c7e:	01 fd       	sbrc	r16, 1
    2c80:	03 c0       	rjmp	.+6      	; 0x2c88 <vfprintf+0x34c>
    2c82:	88 e7       	ldi	r24, 0x78	; 120
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	0e c0       	rjmp	.+28     	; 0x2ca4 <vfprintf+0x368>
    2c88:	88 e5       	ldi	r24, 0x58	; 88
    2c8a:	90 e0       	ldi	r25, 0x00	; 0
    2c8c:	0b c0       	rjmp	.+22     	; 0x2ca4 <vfprintf+0x368>
    2c8e:	80 2f       	mov	r24, r16
    2c90:	86 78       	andi	r24, 0x86	; 134
    2c92:	91 f0       	breq	.+36     	; 0x2cb8 <vfprintf+0x37c>
    2c94:	01 ff       	sbrs	r16, 1
    2c96:	02 c0       	rjmp	.+4      	; 0x2c9c <vfprintf+0x360>
    2c98:	8b e2       	ldi	r24, 0x2B	; 43
    2c9a:	01 c0       	rjmp	.+2      	; 0x2c9e <vfprintf+0x362>
    2c9c:	80 e2       	ldi	r24, 0x20	; 32
    2c9e:	f7 fc       	sbrc	r15, 7
    2ca0:	8d e2       	ldi	r24, 0x2D	; 45
    2ca2:	90 e0       	ldi	r25, 0x00	; 0
    2ca4:	b3 01       	movw	r22, r6
    2ca6:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    2caa:	06 c0       	rjmp	.+12     	; 0x2cb8 <vfprintf+0x37c>
    2cac:	80 e3       	ldi	r24, 0x30	; 48
    2cae:	90 e0       	ldi	r25, 0x00	; 0
    2cb0:	b3 01       	movw	r22, r6
    2cb2:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    2cb6:	9a 94       	dec	r9
    2cb8:	d9 14       	cp	r13, r9
    2cba:	c0 f3       	brcs	.-16     	; 0x2cac <vfprintf+0x370>
    2cbc:	da 94       	dec	r13
    2cbe:	f1 01       	movw	r30, r2
    2cc0:	ed 0d       	add	r30, r13
    2cc2:	f1 1d       	adc	r31, r1
    2cc4:	80 81       	ld	r24, Z
    2cc6:	90 e0       	ldi	r25, 0x00	; 0
    2cc8:	b3 01       	movw	r22, r6
    2cca:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    2cce:	dd 20       	and	r13, r13
    2cd0:	a9 f7       	brne	.-22     	; 0x2cbc <vfprintf+0x380>
    2cd2:	06 c0       	rjmp	.+12     	; 0x2ce0 <vfprintf+0x3a4>
    2cd4:	80 e2       	ldi	r24, 0x20	; 32
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	b3 01       	movw	r22, r6
    2cda:	0e 94 91 16 	call	0x2d22	; 0x2d22 <fputc>
    2cde:	ea 94       	dec	r14
    2ce0:	ee 20       	and	r14, r14
    2ce2:	c1 f7       	brne	.-16     	; 0x2cd4 <vfprintf+0x398>
    2ce4:	43 ce       	rjmp	.-890    	; 0x296c <vfprintf+0x30>
    2ce6:	f3 01       	movw	r30, r6
    2ce8:	66 81       	ldd	r22, Z+6	; 0x06
    2cea:	77 81       	ldd	r23, Z+7	; 0x07
    2cec:	cb 01       	movw	r24, r22
    2cee:	2b 96       	adiw	r28, 0x0b	; 11
    2cf0:	e2 e1       	ldi	r30, 0x12	; 18
    2cf2:	0c 94 5f 14 	jmp	0x28be	; 0x28be <__epilogue_restores__>

00002cf6 <strnlen_P>:
    2cf6:	fc 01       	movw	r30, r24
    2cf8:	05 90       	lpm	r0, Z+
    2cfa:	61 50       	subi	r22, 0x01	; 1
    2cfc:	70 40       	sbci	r23, 0x00	; 0
    2cfe:	01 10       	cpse	r0, r1
    2d00:	d8 f7       	brcc	.-10     	; 0x2cf8 <strnlen_P+0x2>
    2d02:	80 95       	com	r24
    2d04:	90 95       	com	r25
    2d06:	8e 0f       	add	r24, r30
    2d08:	9f 1f       	adc	r25, r31
    2d0a:	08 95       	ret

00002d0c <strnlen>:
    2d0c:	fc 01       	movw	r30, r24
    2d0e:	61 50       	subi	r22, 0x01	; 1
    2d10:	70 40       	sbci	r23, 0x00	; 0
    2d12:	01 90       	ld	r0, Z+
    2d14:	01 10       	cpse	r0, r1
    2d16:	d8 f7       	brcc	.-10     	; 0x2d0e <strnlen+0x2>
    2d18:	80 95       	com	r24
    2d1a:	90 95       	com	r25
    2d1c:	8e 0f       	add	r24, r30
    2d1e:	9f 1f       	adc	r25, r31
    2d20:	08 95       	ret

00002d22 <fputc>:
    2d22:	0f 93       	push	r16
    2d24:	1f 93       	push	r17
    2d26:	cf 93       	push	r28
    2d28:	df 93       	push	r29
    2d2a:	8c 01       	movw	r16, r24
    2d2c:	eb 01       	movw	r28, r22
    2d2e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d30:	81 ff       	sbrs	r24, 1
    2d32:	1b c0       	rjmp	.+54     	; 0x2d6a <fputc+0x48>
    2d34:	82 ff       	sbrs	r24, 2
    2d36:	0d c0       	rjmp	.+26     	; 0x2d52 <fputc+0x30>
    2d38:	2e 81       	ldd	r18, Y+6	; 0x06
    2d3a:	3f 81       	ldd	r19, Y+7	; 0x07
    2d3c:	8c 81       	ldd	r24, Y+4	; 0x04
    2d3e:	9d 81       	ldd	r25, Y+5	; 0x05
    2d40:	28 17       	cp	r18, r24
    2d42:	39 07       	cpc	r19, r25
    2d44:	64 f4       	brge	.+24     	; 0x2d5e <fputc+0x3c>
    2d46:	e8 81       	ld	r30, Y
    2d48:	f9 81       	ldd	r31, Y+1	; 0x01
    2d4a:	01 93       	st	Z+, r16
    2d4c:	f9 83       	std	Y+1, r31	; 0x01
    2d4e:	e8 83       	st	Y, r30
    2d50:	06 c0       	rjmp	.+12     	; 0x2d5e <fputc+0x3c>
    2d52:	e8 85       	ldd	r30, Y+8	; 0x08
    2d54:	f9 85       	ldd	r31, Y+9	; 0x09
    2d56:	80 2f       	mov	r24, r16
    2d58:	09 95       	icall
    2d5a:	89 2b       	or	r24, r25
    2d5c:	31 f4       	brne	.+12     	; 0x2d6a <fputc+0x48>
    2d5e:	8e 81       	ldd	r24, Y+6	; 0x06
    2d60:	9f 81       	ldd	r25, Y+7	; 0x07
    2d62:	01 96       	adiw	r24, 0x01	; 1
    2d64:	9f 83       	std	Y+7, r25	; 0x07
    2d66:	8e 83       	std	Y+6, r24	; 0x06
    2d68:	02 c0       	rjmp	.+4      	; 0x2d6e <fputc+0x4c>
    2d6a:	0f ef       	ldi	r16, 0xFF	; 255
    2d6c:	1f ef       	ldi	r17, 0xFF	; 255
    2d6e:	c8 01       	movw	r24, r16
    2d70:	df 91       	pop	r29
    2d72:	cf 91       	pop	r28
    2d74:	1f 91       	pop	r17
    2d76:	0f 91       	pop	r16
    2d78:	08 95       	ret

00002d7a <__ultoa_invert>:
    2d7a:	fa 01       	movw	r30, r20
    2d7c:	aa 27       	eor	r26, r26
    2d7e:	28 30       	cpi	r18, 0x08	; 8
    2d80:	51 f1       	breq	.+84     	; 0x2dd6 <__ultoa_invert+0x5c>
    2d82:	20 31       	cpi	r18, 0x10	; 16
    2d84:	81 f1       	breq	.+96     	; 0x2de6 <__ultoa_invert+0x6c>
    2d86:	e8 94       	clt
    2d88:	6f 93       	push	r22
    2d8a:	6e 7f       	andi	r22, 0xFE	; 254
    2d8c:	6e 5f       	subi	r22, 0xFE	; 254
    2d8e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d90:	8f 4f       	sbci	r24, 0xFF	; 255
    2d92:	9f 4f       	sbci	r25, 0xFF	; 255
    2d94:	af 4f       	sbci	r26, 0xFF	; 255
    2d96:	b1 e0       	ldi	r27, 0x01	; 1
    2d98:	3e d0       	rcall	.+124    	; 0x2e16 <__ultoa_invert+0x9c>
    2d9a:	b4 e0       	ldi	r27, 0x04	; 4
    2d9c:	3c d0       	rcall	.+120    	; 0x2e16 <__ultoa_invert+0x9c>
    2d9e:	67 0f       	add	r22, r23
    2da0:	78 1f       	adc	r23, r24
    2da2:	89 1f       	adc	r24, r25
    2da4:	9a 1f       	adc	r25, r26
    2da6:	a1 1d       	adc	r26, r1
    2da8:	68 0f       	add	r22, r24
    2daa:	79 1f       	adc	r23, r25
    2dac:	8a 1f       	adc	r24, r26
    2dae:	91 1d       	adc	r25, r1
    2db0:	a1 1d       	adc	r26, r1
    2db2:	6a 0f       	add	r22, r26
    2db4:	71 1d       	adc	r23, r1
    2db6:	81 1d       	adc	r24, r1
    2db8:	91 1d       	adc	r25, r1
    2dba:	a1 1d       	adc	r26, r1
    2dbc:	20 d0       	rcall	.+64     	; 0x2dfe <__ultoa_invert+0x84>
    2dbe:	09 f4       	brne	.+2      	; 0x2dc2 <__ultoa_invert+0x48>
    2dc0:	68 94       	set
    2dc2:	3f 91       	pop	r19
    2dc4:	2a e0       	ldi	r18, 0x0A	; 10
    2dc6:	26 9f       	mul	r18, r22
    2dc8:	11 24       	eor	r1, r1
    2dca:	30 19       	sub	r19, r0
    2dcc:	30 5d       	subi	r19, 0xD0	; 208
    2dce:	31 93       	st	Z+, r19
    2dd0:	de f6       	brtc	.-74     	; 0x2d88 <__ultoa_invert+0xe>
    2dd2:	cf 01       	movw	r24, r30
    2dd4:	08 95       	ret
    2dd6:	46 2f       	mov	r20, r22
    2dd8:	47 70       	andi	r20, 0x07	; 7
    2dda:	40 5d       	subi	r20, 0xD0	; 208
    2ddc:	41 93       	st	Z+, r20
    2dde:	b3 e0       	ldi	r27, 0x03	; 3
    2de0:	0f d0       	rcall	.+30     	; 0x2e00 <__ultoa_invert+0x86>
    2de2:	c9 f7       	brne	.-14     	; 0x2dd6 <__ultoa_invert+0x5c>
    2de4:	f6 cf       	rjmp	.-20     	; 0x2dd2 <__ultoa_invert+0x58>
    2de6:	46 2f       	mov	r20, r22
    2de8:	4f 70       	andi	r20, 0x0F	; 15
    2dea:	40 5d       	subi	r20, 0xD0	; 208
    2dec:	4a 33       	cpi	r20, 0x3A	; 58
    2dee:	18 f0       	brcs	.+6      	; 0x2df6 <__ultoa_invert+0x7c>
    2df0:	49 5d       	subi	r20, 0xD9	; 217
    2df2:	31 fd       	sbrc	r19, 1
    2df4:	40 52       	subi	r20, 0x20	; 32
    2df6:	41 93       	st	Z+, r20
    2df8:	02 d0       	rcall	.+4      	; 0x2dfe <__ultoa_invert+0x84>
    2dfa:	a9 f7       	brne	.-22     	; 0x2de6 <__ultoa_invert+0x6c>
    2dfc:	ea cf       	rjmp	.-44     	; 0x2dd2 <__ultoa_invert+0x58>
    2dfe:	b4 e0       	ldi	r27, 0x04	; 4
    2e00:	a6 95       	lsr	r26
    2e02:	97 95       	ror	r25
    2e04:	87 95       	ror	r24
    2e06:	77 95       	ror	r23
    2e08:	67 95       	ror	r22
    2e0a:	ba 95       	dec	r27
    2e0c:	c9 f7       	brne	.-14     	; 0x2e00 <__ultoa_invert+0x86>
    2e0e:	00 97       	sbiw	r24, 0x00	; 0
    2e10:	61 05       	cpc	r22, r1
    2e12:	71 05       	cpc	r23, r1
    2e14:	08 95       	ret
    2e16:	9b 01       	movw	r18, r22
    2e18:	ac 01       	movw	r20, r24
    2e1a:	0a 2e       	mov	r0, r26
    2e1c:	06 94       	lsr	r0
    2e1e:	57 95       	ror	r21
    2e20:	47 95       	ror	r20
    2e22:	37 95       	ror	r19
    2e24:	27 95       	ror	r18
    2e26:	ba 95       	dec	r27
    2e28:	c9 f7       	brne	.-14     	; 0x2e1c <__ultoa_invert+0xa2>
    2e2a:	62 0f       	add	r22, r18
    2e2c:	73 1f       	adc	r23, r19
    2e2e:	84 1f       	adc	r24, r20
    2e30:	95 1f       	adc	r25, r21
    2e32:	a0 1d       	adc	r26, r0
    2e34:	08 95       	ret

00002e36 <_exit>:
    2e36:	f8 94       	cli

00002e38 <__stop_program>:
    2e38:	ff cf       	rjmp	.-2      	; 0x2e38 <__stop_program>
